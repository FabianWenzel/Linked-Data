(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.
require('../../js/transition.js')
require('../../js/alert.js')
require('../../js/button.js')
require('../../js/carousel.js')
require('../../js/collapse.js')
require('../../js/dropdown.js')
require('../../js/modal.js')
require('../../js/tooltip.js')
require('../../js/popover.js')
require('../../js/scrollspy.js')
require('../../js/tab.js')
require('../../js/affix.js')
},{"../../js/affix.js":2,"../../js/alert.js":3,"../../js/button.js":4,"../../js/carousel.js":5,"../../js/collapse.js":6,"../../js/dropdown.js":7,"../../js/modal.js":8,"../../js/popover.js":9,"../../js/scrollspy.js":10,"../../js/tab.js":11,"../../js/tooltip.js":12,"../../js/transition.js":13}],2:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: affix.js v3.3.7
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    this.$target = $(this.options.target)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.3.7'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);

},{}],3:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: alert.js v3.3.7
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.7'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector === '#' ? [] : selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

},{}],4:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.7'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

},{}],5:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.7'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href
    var $this   = $(this)
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7
    if (!$target.hasClass('carousel')) return
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

},{}],6:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.3.7'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);

},{}],7:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: dropdown.js v3.3.7
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.3.7'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);

},{}],8:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options             = options
    this.$body               = $(document.body)
    this.$element            = $(element)
    this.$dialog             = this.$element.find('.modal-dialog')
    this.$backdrop           = null
    this.isShown             = null
    this.originalBodyPad     = null
    this.scrollbarWidth      = 0
    this.ignoreBackdropClick = false

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION  = '3.3.7'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

},{}],9:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: popover.js v3.3.7
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.3.7'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events
      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'
    ](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

},{}],10:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.7
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body          = $(document.body)
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.3.7'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var that          = this
    var offsetMethod  = 'offset'
    var offsetBase    = 0

    this.offsets      = []
    this.targets      = []
    this.scrollHeight = this.getScrollHeight()

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        that.offsets.push(this[0])
        that.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
      '[data-target="' + target + '"],' +
      this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

},{}],11:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: tab.js v3.3.7
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element)
    // jscs:enable requireDollarBeforejQueryAssignment
  }

  Tab.VERSION = '3.3.7'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
          .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu').length) {
        element
          .closest('li.dropdown')
            .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
            .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

},{}],12:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.3.7'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    }
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

},{}],13:[function(require,module,exports){
/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

},{}],14:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v3.1.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-09-22T22:30Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.1.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Simple selector that can be filtered directly, removing non-Elements
	if ( risSimple.test( qualifier ) ) {
		return jQuery.filter( qualifier, elements, not );
	}

	// Complex selector, compare the two sets, removing non-Elements
	qualifier = jQuery.filter( qualifier, elements );
	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			resolve.call( undefined, value );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.call( undefined, value );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

function manipulationTarget( elem, content ) {
	if ( jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return elem.getElementsByTagName( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE <=9 only
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i,
		val = 0;

	// If we already have the right measurement, avoid augmentation
	if ( extra === ( isBorderBox ? "border" : "content" ) ) {
		i = 4;

	// Otherwise initialize for horizontal or vertical properties
	} else {
		i = name === "width" ? 1 : 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val,
		valueIsBorderBox = true,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Support: IE <=11 only
	// Running getBoundingClientRect on a disconnected node
	// in IE throws an error.
	if ( elem.getClientRects().length ) {
		val = elem.getBoundingClientRect()[ name ];
	}

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function raf() {
	if ( timerId ) {
		window.requestAnimationFrame( raf );
		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off or if document is hidden
	if ( jQuery.fx.off || document.hidden ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.requestAnimationFrame ?
			window.requestAnimationFrame( raf ) :
			window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	if ( window.cancelAnimationFrame ) {
		window.cancelAnimationFrame( timerId );
	} else {
		window.clearInterval( timerId );
	}

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnothtmlwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnothtmlwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( jQuery.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win, rect, doc,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		// Make sure element is not hidden (display: none)
		if ( rect.width || rect.height ) {
			doc = elem.ownerDocument;
			win = getWindow( doc );
			docElem = doc.documentElement;

			return {
				top: rect.top + win.pageYOffset - docElem.clientTop,
				left: rect.left + win.pageXOffset - docElem.clientLeft
			};
		}

		// Return zeros for disconnected and hidden elements (gh-2310)
		return rect;
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.parseJSON = JSON.parse;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}





return jQuery;
} );

},{}],15:[function(require,module,exports){
!function t(e,r){"object"==typeof exports&&"object"==typeof module?module.exports=r():"function"==typeof define&&define.amd?define([],r):"object"==typeof exports?exports.Raphael=r():e.Raphael=r()}(this,function(){return function(t){function e(i){if(r[i])return r[i].exports;var n=r[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var r={};return e.m=t,e.c=r,e.p="",e(0)}([function(t,e,r){var i,n;i=[r(1),r(3),r(4)],n=function(t){return t}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(2)],n=function(t){function e(r){if(e.is(r,"function"))return w?r():t.on("raphael.DOMload",r);if(e.is(r,Q))return e._engine.create[z](e,r.splice(0,3+e.is(r[0],$))).add(r);var i=Array.prototype.slice.call(arguments,0);if(e.is(i[i.length-1],"function")){var n=i.pop();return w?n.call(e._engine.create[z](e,i)):t.on("raphael.DOMload",function(){n.call(e._engine.create[z](e,i))})}return e._engine.create[z](e,arguments)}function r(t){if("function"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var i in t)t[A](i)&&(e[i]=r(t[i]));return e}function i(t,e){for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}function n(t,e,r){function n(){var a=Array.prototype.slice.call(arguments,0),s=a.join("␀"),o=n.cache=n.cache||{},l=n.count=n.count||[];return o[A](s)?(i(l,s),r?r(o[s]):o[s]):(l.length>=1e3&&delete o[l.shift()],l.push(s),o[s]=t[z](e,a),r?r(o[s]):o[s])}return n}function a(){return this.hex}function s(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push(["C",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}function o(t,e,r,i,n){var a=-3*e+9*r-9*i+3*n,s=t*a+6*e-12*r+6*i;return t*s-3*e+3*r}function l(t,e,r,i,n,a,s,l,h){null==h&&(h=1),h=h>1?1:h<0?0:h;for(var u=h/2,c=12,f=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],p=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],d=0,g=0;g<c;g++){var v=u*f[g]+u,x=o(v,t,r,n,s),y=o(v,e,i,a,l),m=x*x+y*y;d+=p[g]*Y.sqrt(m)}return u*d}function h(t,e,r,i,n,a,s,o,h){if(!(h<0||l(t,e,r,i,n,a,s,o)<h)){var u=1,c=u/2,f=u-c,p,d=.01;for(p=l(t,e,r,i,n,a,s,o,f);H(p-h)>d;)c/=2,f+=(p<h?1:-1)*c,p=l(t,e,r,i,n,a,s,o,f);return f}}function u(t,e,r,i,n,a,s,o){if(!(W(t,r)<G(n,s)||G(t,r)>W(n,s)||W(e,i)<G(a,o)||G(e,i)>W(a,o))){var l=(t*i-e*r)*(n-s)-(t-r)*(n*o-a*s),h=(t*i-e*r)*(a-o)-(e-i)*(n*o-a*s),u=(t-r)*(a-o)-(e-i)*(n-s);if(u){var c=l/u,f=h/u,p=+c.toFixed(2),d=+f.toFixed(2);if(!(p<+G(t,r).toFixed(2)||p>+W(t,r).toFixed(2)||p<+G(n,s).toFixed(2)||p>+W(n,s).toFixed(2)||d<+G(e,i).toFixed(2)||d>+W(e,i).toFixed(2)||d<+G(a,o).toFixed(2)||d>+W(a,o).toFixed(2)))return{x:c,y:f}}}}function c(t,e){return p(t,e)}function f(t,e){return p(t,e,1)}function p(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=l.apply(0,t),o=l.apply(0,r),h=W(~~(s/5),1),c=W(~~(o/5),1),f=[],p=[],d={},g=i?0:[],v=0;v<h+1;v++){var x=e.findDotsAtSegment.apply(e,t.concat(v/h));f.push({x:x.x,y:x.y,t:v/h})}for(v=0;v<c+1;v++)x=e.findDotsAtSegment.apply(e,r.concat(v/c)),p.push({x:x.x,y:x.y,t:v/c});for(v=0;v<h;v++)for(var y=0;y<c;y++){var m=f[v],b=f[v+1],_=p[y],w=p[y+1],k=H(b.x-m.x)<.001?"y":"x",B=H(w.x-_.x)<.001?"y":"x",C=u(m.x,m.y,b.x,b.y,_.x,_.y,w.x,w.y);if(C){if(d[C.x.toFixed(4)]==C.y.toFixed(4))continue;d[C.x.toFixed(4)]=C.y.toFixed(4);var S=m.t+H((C[k]-m[k])/(b[k]-m[k]))*(b.t-m.t),A=_.t+H((C[B]-_[B])/(w[B]-_[B]))*(w.t-_.t);S>=0&&S<=1.001&&A>=0&&A<=1.001&&(i?g++:g.push({x:C.x,y:C.y,t1:G(S,1),t2:G(A,1)}))}}return g}function d(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,d,g=i?0:[],v=0,x=t.length;v<x;v++){var y=t[v];if("M"==y[0])n=l=y[1],a=h=y[2];else{"C"==y[0]?(f=[n,a].concat(y.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var m=0,b=r.length;m<b;m++){var _=r[m];if("M"==_[0])s=u=_[1],o=c=_[2];else{"C"==_[0]?(d=[s,o].concat(_.slice(1)),s=d[6],o=d[7]):(d=[s,o,s,o,u,c,u,c],s=u,o=c);var w=p(f,d,i);if(i)g+=w;else{for(var k=0,B=w.length;k<B;k++)w[k].segment1=v,w[k].segment2=m,w[k].bez1=f,w[k].bez2=d;g=g.concat(w)}}}}}return g}function g(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}function v(){return this.x+j+this.y}function x(){return this.x+j+this.y+j+this.width+" × "+this.height}function y(t,e,r,i,n,a){function s(t){return((c*t+u)*t+h)*t}function o(t,e){var r=l(t,e);return((d*r+p)*r+f)*r}function l(t,e){var r,i,n,a,o,l;for(n=t,l=0;l<8;l++){if(a=s(n)-t,H(a)<e)return n;if(o=(3*c*n+2*u)*n+h,H(o)<1e-6)break;n-=a/o}if(r=0,i=1,n=t,n<r)return r;if(n>i)return i;for(;r<i;){if(a=s(n),H(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}var h=3*e,u=3*(i-e)-h,c=1-h-u,f=3*r,p=3*(n-r)-f,d=1-f-p;return o(t,1/(200*a))}function m(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[A](n)&&(i[ht(n)]=t[n],r.push(ht(n)));r.sort(Bt)}this.anim=i,this.top=r[r.length-1],this.percents=r}function b(r,i,n,a,s,o){n=ht(n);var l,h,u,c=[],f,p,d,v=r.ms,x={},m={},b={};if(a)for(w=0,B=Ee.length;w<B;w++){var _=Ee[w];if(_.el.id==i.id&&_.anim==r){_.percent!=n?(Ee.splice(w,1),u=1):h=_,i.attr(_.totalOrigin);break}}else a=+m;for(var w=0,B=r.percents.length;w<B;w++){if(r.percents[w]==n||r.percents[w]>a*r.top){n=r.percents[w],p=r.percents[w-1]||0,v=v/r.top*(n-p),f=r.percents[w+1],l=r.anim[n];break}a&&i.attr(r.anim[r.percents[w]])}if(l){if(h)h.initstatus=a,h.start=new Date-h.ms*a;else{for(var C in l)if(l[A](C)&&(pt[A](C)||i.paper.customAttributes[A](C)))switch(x[C]=i.attr(C),null==x[C]&&(x[C]=ft[C]),m[C]=l[C],pt[C]){case $:b[C]=(m[C]-x[C])/v;break;case"colour":x[C]=e.getRGB(x[C]);var S=e.getRGB(m[C]);b[C]={r:(S.r-x[C].r)/v,g:(S.g-x[C].g)/v,b:(S.b-x[C].b)/v};break;case"path":var T=Qt(x[C],m[C]),E=T[1];for(x[C]=T[0],b[C]=[],w=0,B=x[C].length;w<B;w++){b[C][w]=[0];for(var M=1,N=x[C][w].length;M<N;M++)b[C][w][M]=(E[w][M]-x[C][w][M])/v}break;case"transform":var L=i._,z=le(L[C],m[C]);if(z)for(x[C]=z.from,m[C]=z.to,b[C]=[],b[C].real=!0,w=0,B=x[C].length;w<B;w++)for(b[C][w]=[x[C][w][0]],M=1,N=x[C][w].length;M<N;M++)b[C][w][M]=(m[C][w][M]-x[C][w][M])/v;else{var F=i.matrix||new g,R={_:{transform:L.transform},getBBox:function(){return i.getBBox(1)}};x[C]=[F.a,F.b,F.c,F.d,F.e,F.f],se(R,m[C]),m[C]=R._.transform,b[C]=[(R.matrix.a-F.a)/v,(R.matrix.b-F.b)/v,(R.matrix.c-F.c)/v,(R.matrix.d-F.d)/v,(R.matrix.e-F.e)/v,(R.matrix.f-F.f)/v]}break;case"csv":var j=I(l[C])[q](k),D=I(x[C])[q](k);if("clip-rect"==C)for(x[C]=D,b[C]=[],w=D.length;w--;)b[C][w]=(j[w]-x[C][w])/v;m[C]=j;break;default:for(j=[][P](l[C]),D=[][P](x[C]),b[C]=[],w=i.paper.customAttributes[C].length;w--;)b[C][w]=((j[w]||0)-(D[w]||0))/v}var V=l.easing,O=e.easing_formulas[V];if(!O)if(O=I(V).match(st),O&&5==O.length){var Y=O;O=function(t){return y(t,+Y[1],+Y[2],+Y[3],+Y[4],v)}}else O=St;if(d=l.start||r.start||+new Date,_={anim:r,percent:n,timestamp:d,start:d+(r.del||0),status:0,initstatus:a||0,stop:!1,ms:v,easing:O,from:x,diff:b,to:m,el:i,callback:l.callback,prev:p,next:f,repeat:o||r.times,origin:i.attr(),totalOrigin:s},Ee.push(_),a&&!h&&!u&&(_.stop=!0,_.start=new Date-v*a,1==Ee.length))return Ne();u&&(_.start=new Date-_.ms*a),1==Ee.length&&Me(Ne)}t("raphael.anim.start."+i.id,i,r)}}function _(t){for(var e=0;e<Ee.length;e++)Ee[e].el.paper==t&&Ee.splice(e--,1)}e.version="2.2.0",e.eve=t;var w,k=/[, ]+/,B={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},C=/\{(\d+)\}/g,S="prototype",A="hasOwnProperty",T={doc:document,win:window},E={was:Object.prototype[A].call(T.win,"Raphael"),is:T.win.Raphael},M=function(){this.ca=this.customAttributes={}},N,L="appendChild",z="apply",P="concat",F="ontouchstart"in T.win||T.win.DocumentTouch&&T.doc instanceof DocumentTouch,R="",j=" ",I=String,q="split",D="click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[q](j),V={mousedown:"touchstart",mousemove:"touchmove",mouseup:"touchend"},O=I.prototype.toLowerCase,Y=Math,W=Y.max,G=Y.min,H=Y.abs,X=Y.pow,U=Y.PI,$="number",Z="string",Q="array",J="toString",K="fill",tt=Object.prototype.toString,et={},rt="push",it=e._ISURL=/^url\(['"]?(.+?)['"]?\)$/i,nt=/^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,at={NaN:1,Infinity:1,"-Infinity":1},st=/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,ot=Y.round,lt="setAttribute",ht=parseFloat,ut=parseInt,ct=I.prototype.toUpperCase,ft=e._availableAttrs={"arrow-end":"none","arrow-start":"none",blur:0,"clip-rect":"0 0 1e9 1e9",cursor:"default",cx:0,cy:0,fill:"#fff","fill-opacity":1,font:'10px "Arial"',"font-family":'"Arial"',"font-size":"10","font-style":"normal","font-weight":400,gradient:0,height:0,href:"http://raphaeljs.com/","letter-spacing":0,opacity:1,path:"M0,0",r:0,rx:0,ry:0,src:"",stroke:"#000","stroke-dasharray":"","stroke-linecap":"butt","stroke-linejoin":"butt","stroke-miterlimit":0,"stroke-opacity":1,"stroke-width":1,target:"_blank","text-anchor":"middle",title:"Raphael",transform:"",width:0,x:0,y:0,"class":""},pt=e._availableAnimAttrs={blur:$,"clip-rect":"csv",cx:$,cy:$,fill:"colour","fill-opacity":$,"font-size":$,height:$,opacity:$,path:"path",r:$,rx:$,ry:$,stroke:"colour","stroke-opacity":$,"stroke-width":$,transform:"transform",width:$,x:$,y:$},dt=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g,gt=/[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,vt={hs:1,rg:1},xt=/,?([achlmqrstvxz]),?/gi,yt=/([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,mt=/([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi,bt=/(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi,_t=e._radial_gradient=/^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,wt={},kt=function(t,e){return t.key-e.key},Bt=function(t,e){return ht(t)-ht(e)},Ct=function(){},St=function(t){return t},At=e._rectPath=function(t,e,r,i,n){return n?[["M",t+n,e],["l",r-2*n,0],["a",n,n,0,0,1,n,n],["l",0,i-2*n],["a",n,n,0,0,1,-n,n],["l",2*n-r,0],["a",n,n,0,0,1,-n,-n],["l",0,2*n-i],["a",n,n,0,0,1,n,-n],["z"]]:[["M",t,e],["l",r,0],["l",0,i],["l",-r,0],["z"]]},Tt=function(t,e,r,i){return null==i&&(i=r),[["M",t,e],["m",0,-i],["a",r,i,0,1,1,0,2*i],["a",r,i,0,1,1,0,-2*i],["z"]]},Et=e._getPath={path:function(t){return t.attr("path")},circle:function(t){var e=t.attrs;return Tt(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return Tt(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return At(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return At(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return At(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return At(e.x,e.y,e.width,e.height)}},Mt=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(t=Qt(t),n=0,s=t.length;n<s;n++)for(l=t[n],a=1,o=l.length;a<o;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=T,e.type=T.win.SVGAngle||T.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")?"SVG":"VML","VML"==e.type){var Nt=T.doc.createElement("div"),Lt;if(Nt.innerHTML='<v:shape adj="1"/>',Lt=Nt.firstChild,Lt.style.behavior="url(#default#VML)",!Lt||"object"!=typeof Lt.adj)return e.type=R;Nt=null}e.svg=!(e.vml="VML"==e.type),e._Paper=M,e.fn=N=M.prototype=e.prototype,e._id=0,e.is=function(t,e){return e=O.call(e),"finite"==e?!at[A](+t):"array"==e?t instanceof Array:"null"==e&&null===t||e==typeof t&&null!==t||"object"==e&&t===Object(t)||"array"==e&&Array.isArray&&Array.isArray(t)||tt.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*Y.atan2(-l,-o)/U+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*U/180},e.deg=function(t){return Math.round(180*t/U%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,"finite")?i:10,e.is(t,Q)){for(var n=t.length;n--;)if(H(t[n]-r)<=i)return t[n]}else{t=+t;var a=r%t;if(a<i)return r-a;if(a>t-i)return r-a+t}return r};var zt=e.createUUID=function(t,e){return function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(t,e).toUpperCase()}}(/[xy]/g,function(t){var e=16*Y.random()|0,r="x"==t?e:3&e|8;return r.toString(16)});e.setWindow=function(r){t("raphael.setWindow",e,T.win,r),T.win=r,T.doc=T.win.document,e._engine.initWin&&e._engine.initWin(T.win)};var Pt=function(t){if(e.vml){var r=/^\s+|\s+$/g,i;try{var a=new ActiveXObject("htmlfile");a.write("<body>"),a.close(),i=a.body}catch(s){i=createPopup().document.body}var o=i.createTextRange();Pt=n(function(t){try{i.style.color=I(t).replace(r,R);var e=o.queryCommandValue("ForeColor");return e=(255&e)<<16|65280&e|(16711680&e)>>>16,"#"+("000000"+e.toString(16)).slice(-6)}catch(n){return"none"}})}else{var l=T.doc.createElement("i");l.title="Raphaël Colour Picker",l.style.display="none",T.doc.body.appendChild(l),Pt=n(function(t){return l.style.color=t,T.doc.defaultView.getComputedStyle(l,R).getPropertyValue("color")})}return Pt(t)},Ft=function(){return"hsb("+[this.h,this.s,this.b]+")"},Rt=function(){return"hsl("+[this.h,this.s,this.l]+")"},jt=function(){return this.hex},It=function(t,r,i){if(null==r&&e.is(t,"object")&&"r"in t&&"g"in t&&"b"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,Z)){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b}return(t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},qt=function(t,r,i,n){t*=255,r*=255,i*=255;var a={r:t,g:r,b:i,hex:e.rgb(t,r,i),toString:jt};return e.is(n,"finite")&&(a.opacity=n),a};e.color=function(t){var r;return e.is(t,"object")&&"h"in t&&"s"in t&&"b"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,"object")&&"h"in t&&"s"in t&&"l"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,"string")&&(t=e.getRGB(t)),e.is(t,"object")&&"r"in t&&"g"in t&&"b"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:"none"},t.r=t.g=t.b=t.h=t.s=t.v=t.l=-1)),t.toString=jt,t},e.hsb2rgb=function(t,e,r,i){this.is(t,"object")&&"h"in t&&"s"in t&&"b"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),t*=360;var n,a,s,o,l;return t=t%360/60,l=r*e,o=l*(1-H(t%2-1)),n=a=s=r-l,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.hsl2rgb=function(t,e,r,i){this.is(t,"object")&&"h"in t&&"s"in t&&"l"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),t*=360;var n,a,s,o,l;return t=t%360/60,l=2*e*(r<.5?r:1-r),o=l*(1-H(t%2-1)),n=a=s=r-l/2,t=~~t,n+=[l,o,0,0,o,l][t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],qt(n,a,s,i)},e.rgb2hsb=function(t,e,r){r=It(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s;return a=W(t,e,r),s=a-G(t,e,r),i=0==s?null:a==t?(e-r)/s:a==e?(r-t)/s+2:(t-e)/s+4,i=(i+360)%6*60/360,n=0==s?0:s/a,{h:i,s:n,b:a,toString:Ft}},e.rgb2hsl=function(t,e,r){r=It(t,e,r),t=r[0],e=r[1],r=r[2];var i,n,a,s,o,l;return s=W(t,e,r),o=G(t,e,r),l=s-o,i=0==l?null:s==t?(e-r)/l:s==e?(r-t)/l+2:(t-e)/l+4,i=(i+360)%6*60/360,a=(s+o)/2,n=0==l?0:a<.5?l/(2*a):l/(2-2*a),{h:i,s:n,l:a,toString:Rt}},e._path2string=function(){return this.join(",").replace(xt,"$1")};var Dt=e._preload=function(t,e){var r=T.doc.createElement("img");r.style.cssText="position:absolute;left:-9999em;top:-9999em",r.onload=function(){e.call(this),this.onload=null,T.doc.body.removeChild(this)},r.onerror=function(){T.doc.body.removeChild(this)},T.doc.body.appendChild(r),r.src=t};e.getRGB=n(function(t){if(!t||(t=I(t)).indexOf("-")+1)return{r:-1,g:-1,b:-1,hex:"none",error:1,toString:a};if("none"==t)return{r:-1,g:-1,b:-1,hex:"none",toString:a};!(vt[A](t.toLowerCase().substring(0,2))||"#"==t.charAt())&&(t=Pt(t));var r,i,n,s,o,l,h,u=t.match(nt);return u?(u[2]&&(s=ut(u[2].substring(5),16),n=ut(u[2].substring(3,5),16),i=ut(u[2].substring(1,3),16)),u[3]&&(s=ut((l=u[3].charAt(3))+l,16),n=ut((l=u[3].charAt(2))+l,16),i=ut((l=u[3].charAt(1))+l,16)),u[4]&&(h=u[4][q](gt),i=ht(h[0]),"%"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),"%"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),"%"==h[2].slice(-1)&&(s*=2.55),"rgba"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&"%"==h[3].slice(-1)&&(o/=100)),u[5]?(h=u[5][q](gt),i=ht(h[0]),"%"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),"%"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),"%"==h[2].slice(-1)&&(s*=2.55),("deg"==h[0].slice(-3)||"°"==h[0].slice(-1))&&(i/=360),"hsba"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&"%"==h[3].slice(-1)&&(o/=100),e.hsb2rgb(i,n,s,o)):u[6]?(h=u[6][q](gt),i=ht(h[0]),"%"==h[0].slice(-1)&&(i*=2.55),n=ht(h[1]),"%"==h[1].slice(-1)&&(n*=2.55),s=ht(h[2]),"%"==h[2].slice(-1)&&(s*=2.55),("deg"==h[0].slice(-3)||"°"==h[0].slice(-1))&&(i/=360),"hsla"==u[1].toLowerCase().slice(0,4)&&(o=ht(h[3])),h[3]&&"%"==h[3].slice(-1)&&(o/=100),e.hsl2rgb(i,n,s,o)):(u={r:i,g:n,b:s,toString:a},u.hex="#"+(16777216|s|n<<8|i<<16).toString(16).slice(1),e.is(o,"finite")&&(u.opacity=o),u)):{r:-1,g:-1,b:-1,hex:"none",error:1,toString:a}},e),e.hsb=n(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=n(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=n(function(t,e,r){function i(t){return t+.5|0}return"#"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start},e.parsePathString=function(t){if(!t)return null;var r=Vt(t);if(r.arr)return Yt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,Q)&&e.is(t[0],Q)&&(n=Yt(t)),n.length||I(t).replace(yt,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(bt,function(t,e){e&&a.push(+e)}),"m"==s&&a.length>2&&(n.push([e][P](a.splice(0,2))),s="l",e="m"==e?"l":"L"),"r"==s)n.push([e][P](a));else for(;a.length>=i[s]&&(n.push([e][P](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=Yt(n),n},e.parseTransformString=n(function(t){if(!t)return null;var r={r:3,s:4,t:2,m:6},i=[];return e.is(t,Q)&&e.is(t[0],Q)&&(i=Yt(t)),i.length||I(t).replace(mt,function(t,e,r){var n=[],a=O.call(e);r.replace(bt,function(t,e){e&&n.push(+e)}),i.push([e][P](n))}),i.toString=e._path2string,i});var Vt=function(t){var e=Vt.ps=Vt.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[A](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=X(h,3),c=X(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,v=t+2*l*(r-t)+f*(n-2*r+t),x=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,_=h*e+l*i,w=h*n+l*s,k=h*a+l*o,B=90-180*Y.atan2(v-y,x-m)/U;return(v>y||x<m)&&(B+=180),{x:d,y:g,m:{x:v,y:x},n:{x:y,y:m},start:{x:b,y:_},end:{x:w,y:k},alpha:B}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,"array")||(t=[t,r,i,n,a,s,o,l]);var h=Zt.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return d(t,e)},e.pathIntersectionNumber=function(t,e){return d(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&d(t,[["M",r,i],["H",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t("raphael.log",null,"Raphaël: you are calling to method “"+e+"” of removed object",e)}};var Ot=e.pathBBox=function(t){var e=Vt(t);if(e.bbox)return r(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};t=Qt(t);for(var i=0,n=0,a=[],s=[],o,l=0,h=t.length;l<h;l++)if(o=t[l],"M"==o[0])i=o[1],n=o[2],a.push(i),s.push(n);else{var u=Zt(i,n,o[1],o[2],o[3],o[4],o[5],o[6]);a=a[P](u.min.x,u.max.x),s=s[P](u.min.y,u.max.y),i=o[5],n=o[6]}var c=G[z](0,a),f=G[z](0,s),p=W[z](0,a),d=W[z](0,s),g=p-c,v=d-f,x={x:c,y:f,x2:p,y2:d,width:g,height:v,cx:c+g/2,cy:f+v/2};return e.bbox=r(x),x},Yt=function(t){var i=r(t);return i.toString=e._path2string,i},Wt=e._pathToRelative=function(t){var r=Vt(t);if(r.rel)return Yt(r.rel);e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;"M"==t[0][0]&&(n=t[0][1],a=t[0][2],s=n,o=a,l++,i.push(["M",n,a]));for(var h=l,u=t.length;h<u;h++){var c=i[h]=[],f=t[h];if(f[0]!=O.call(f[0]))switch(c[0]=O.call(f[0]),c[0]){case"a":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case"v":c[1]=+(f[1]-a).toFixed(3);break;case"m":s=f[1],o=f[2];default:for(var p=1,d=f.length;p<d;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],"m"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,v=f.length;g<v;g++)i[h][g]=f[g]}var x=i[h].length;switch(i[h][0]){case"z":n=s,a=o;break;case"h":n+=+i[h][x-1];break;case"v":a+=+i[h][x-1];break;default:n+=+i[h][x-2],a+=+i[h][x-1]}}return i.toString=e._path2string,r.rel=Yt(i),i},Gt=e._pathToAbsolute=function(t){var r=Vt(t);if(r.abs)return Yt(r.abs);if(e.is(t,Q)&&e.is(t&&t[0],Q)||(t=e.parsePathString(t)),!t||!t.length)return[["M",0,0]];var i=[],n=0,a=0,o=0,l=0,h=0;"M"==t[0][0]&&(n=+t[0][1],a=+t[0][2],o=n,l=a,h++,i[0]=["M",n,a]);for(var u=3==t.length&&"M"==t[0][0]&&"R"==t[1][0].toUpperCase()&&"Z"==t[2][0].toUpperCase(),c,f,p=h,d=t.length;p<d;p++){if(i.push(c=[]),f=t[p],f[0]!=ct.call(f[0]))switch(c[0]=ct.call(f[0]),c[0]){case"A":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]+n),c[7]=+(f[7]+a);break;case"V":c[1]=+f[1]+a;break;case"H":c[1]=+f[1]+n;break;case"R":for(var g=[n,a][P](f.slice(1)),v=2,x=g.length;v<x;v++)g[v]=+g[v]+n,g[++v]=+g[v]+a;i.pop(),i=i[P](s(g,u));break;case"M":o=+f[1]+n,l=+f[2]+a;default:for(v=1,x=f.length;v<x;v++)c[v]=+f[v]+(v%2?n:a)}else if("R"==f[0])g=[n,a][P](f.slice(1)),i.pop(),i=i[P](s(g,u)),c=["R"][P](f.slice(-2));else for(var y=0,m=f.length;y<m;y++)c[y]=f[y];switch(c[0]){case"Z":n=o,a=l;break;case"H":n=c[1];break;case"V":a=c[1];break;case"M":o=c[c.length-2],l=c[c.length-1];default:n=c[c.length-2],a=c[c.length-1]}}return i.toString=e._path2string,r.abs=Yt(i),i},Ht=function(t,e,r,i){return[t,e,r,i,r,i]},Xt=function(t,e,r,i,n,a){var s=1/3,o=2/3;return[s*t+o*r,s*e+o*i,s*n+o*r,s*a+o*i,n,a]},Ut=function(t,e,r,i,a,s,o,l,h,u){var c=120*U/180,f=U/180*(+a||0),p=[],d,g=n(function(t,e,r){var i=t*Y.cos(r)-e*Y.sin(r),n=t*Y.sin(r)+e*Y.cos(r);return{x:i,y:n}});if(u)S=u[0],A=u[1],B=u[2],C=u[3];else{d=g(t,e,-f),t=d.x,e=d.y,d=g(l,h,-f),l=d.x,h=d.y;var v=Y.cos(U/180*a),x=Y.sin(U/180*a),y=(t-l)/2,m=(e-h)/2,b=y*y/(r*r)+m*m/(i*i);b>1&&(b=Y.sqrt(b),r=b*r,i=b*i);var _=r*r,w=i*i,k=(s==o?-1:1)*Y.sqrt(H((_*w-_*m*m-w*y*y)/(_*m*m+w*y*y))),B=k*r*m/i+(t+l)/2,C=k*-i*y/r+(e+h)/2,S=Y.asin(((e-C)/i).toFixed(9)),A=Y.asin(((h-C)/i).toFixed(9));S=t<B?U-S:S,A=l<B?U-A:A,S<0&&(S=2*U+S),A<0&&(A=2*U+A),o&&S>A&&(S-=2*U),!o&&A>S&&(A-=2*U)}var T=A-S;if(H(T)>c){var E=A,M=l,N=h;A=S+c*(o&&A>S?1:-1),l=B+r*Y.cos(A),h=C+i*Y.sin(A),p=Ut(l,h,r,i,a,0,o,M,N,[A,E,B,C])}T=A-S;var L=Y.cos(S),z=Y.sin(S),F=Y.cos(A),R=Y.sin(A),j=Y.tan(T/4),I=4/3*r*j,D=4/3*i*j,V=[t,e],O=[t+I*z,e-D*L],W=[l+I*R,h-D*F],G=[l,h];if(O[0]=2*V[0]-O[0],O[1]=2*V[1]-O[1],u)return[O,W,G][P](p);p=[O,W,G][P](p).join()[q](",");for(var X=[],$=0,Z=p.length;$<Z;$++)X[$]=$%2?g(p[$-1],p[$],f).y:g(p[$],p[$+1],f).x;return X},$t=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:X(h,3)*t+3*X(h,2)*l*r+3*h*l*l*n+X(l,3)*s,y:X(h,3)*e+3*X(h,2)*l*i+3*h*l*l*a+X(l,3)*o}},Zt=n(function(t,e,r,i,n,a,s,o){var l=n-2*r+t-(s-2*n+r),h=2*(r-t)-2*(n-r),u=t-r,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,p=[e,o],d=[t,s],g;return H(c)>"1e12"&&(c=.5),H(f)>"1e12"&&(f=.5),c>0&&c<1&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&f<1&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),l=a-2*i+e-(o-2*a+i),h=2*(i-e)-2*(a-i),u=e-i,c=(-h+Y.sqrt(h*h-4*l*u))/2/l,f=(-h-Y.sqrt(h*h-4*l*u))/2/l,H(c)>"1e12"&&(c=.5),H(f)>"1e12"&&(f=.5),c>0&&c<1&&(g=$t(t,e,r,i,n,a,s,o,c),d.push(g.x),p.push(g.y)),f>0&&f<1&&(g=$t(t,e,r,i,n,a,s,o,f),d.push(g.x),p.push(g.y)),{min:{x:G[z](0,d),y:G[z](0,p)},max:{x:W[z](0,d),y:W[z](0,p)}}}),Qt=e._path2curve=n(function(t,e){var r=!e&&Vt(t);if(!e&&r.curve)return Yt(r.curve);for(var i=Gt(t),n=e&&Gt(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=(function(t,e,r){var i,n,a={T:1,Q:1};if(!t)return["C",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in a)&&(e.qx=e.qy=null),t[0]){case"M":e.X=t[1],e.Y=t[2];break;case"A":t=["C"][P](Ut[z](0,[e.x,e.y][P](t.slice(1))));break;case"S":"C"==r||"S"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=["C",i,n][P](t.slice(1));break;case"T":"Q"==r||"T"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=["C"][P](Xt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case"Q":e.qx=t[1],e.qy=t[2],t=["C"][P](Xt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case"L":t=["C"][P](Ht(e.x,e.y,t[1],t[2]));break;case"H":t=["C"][P](Ht(e.x,e.y,t[1],e.y));break;case"V":t=["C"][P](Ht(e.x,e.y,e.x,t[1]));break;case"Z":t=["C"][P](Ht(e.x,e.y,e.X,e.Y))}return t}),l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]="A",n&&(c[e]="A"),t.splice(e++,0,["C"][P](r.splice(0,6)));t.splice(e,1),g=W(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&"M"==t[s][0]&&"M"!=e[s][0]&&(e.splice(s,0,["M",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],g=W(i.length,n&&n.length||0))},u=[],c=[],f="",p="",d=0,g=W(i.length,n&&n.length||0);d<g;d++){i[d]&&(f=i[d][0]),"C"!=f&&(u[d]=f,d&&(p=u[d-1])),i[d]=o(i[d],a,p),"A"!=u[d]&&"C"==f&&(u[d]="C"),l(i,d),n&&(n[d]&&(f=n[d][0]),"C"!=f&&(c[d]=f,d&&(p=c[d-1])),n[d]=o(n[d],s,p),"A"!=c[d]&&"C"==f&&(c[d]="C"),l(n,d)),h(i,n,a,s,d),h(n,i,s,a,d);var v=i[d],x=n&&n[d],y=v.length,m=n&&x.length;a.x=v[y-2],a.y=v[y-1],a.bx=ht(v[y-4])||a.x,a.by=ht(v[y-3])||a.y,s.bx=n&&(ht(x[m-4])||s.x),s.by=n&&(ht(x[m-3])||s.y),s.x=n&&x[m-2],s.y=n&&x[m-1]}return n||(r.curve=Yt(i)),n?[i,n]:i},null,Yt),Jt=e._parseDots=n(function(t){for(var r=[],i=0,n=t.length;i<n;i++){var a={},s=t[i].match(/^([^:]*):?([\d\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+"%"),r.push(a)}for(i=1,n=r.length-1;i<n;i++)if(!r[i].offset){for(var o=ht(r[i-1].offset||0),l=0,h=i+1;h<n;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n),l=ht(l);for(var u=(l-o)/(h-i+1);i<h;i++)o+=u,r[i].offset=o+"%"}return r}),Kt=e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)},te=e._tofront=function(t,e){e.top!==t&&(Kt(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},ee=e._toback=function(t,e){e.bottom!==t&&(Kt(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},re=e._insertafter=function(t,e,r){Kt(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},ie=e._insertbefore=function(t,e,r){Kt(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},ne=e.toMatrix=function(t,e){var r=Ot(t),i={_:{transform:R},getBBox:function(){return r}};return se(i,e),i.matrix},ae=e.transformPath=function(t,e){return Mt(t,ne(t,e))},se=e._extractTransform=function(t,r){if(null==r)return t._.transform;r=I(r).replace(/\.{3}|\u2026/g,t._.transform||R);var i=e.parseTransformString(r),n=0,a=0,s=0,o=1,l=1,h=t._,u=new g;if(h.transform=i||[],i)for(var c=0,f=i.length;c<f;c++){var p=i[c],d=p.length,v=I(p[0]).toLowerCase(),x=p[0]!=v,y=x?u.invert():0,m,b,_,w,k;"t"==v&&3==d?x?(m=y.x(0,0),b=y.y(0,0),_=y.x(p[1],p[2]),w=y.y(p[1],p[2]),u.translate(_-m,w-b)):u.translate(p[1],p[2]):"r"==v?2==d?(k=k||t.getBBox(1),u.rotate(p[1],k.x+k.width/2,k.y+k.height/2),n+=p[1]):4==d&&(x?(_=y.x(p[2],p[3]),w=y.y(p[2],p[3]),u.rotate(p[1],_,w)):u.rotate(p[1],p[2],p[3]),n+=p[1]):"s"==v?2==d||3==d?(k=k||t.getBBox(1),u.scale(p[1],p[d-1],k.x+k.width/2,k.y+k.height/2),o*=p[1],l*=p[d-1]):5==d&&(x?(_=y.x(p[3],p[4]),w=y.y(p[3],p[4]),u.scale(p[1],p[2],_,w)):u.scale(p[1],p[2],p[3],p[4]),o*=p[1],l*=p[2]):"m"==v&&7==d&&u.add(p[1],p[2],p[3],p[4],p[5],p[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=n,h.dx=a=u.e,h.dy=s=u.f,1==o&&1==l&&!n&&h.bbox?(h.bbox.x+=+a,h.bbox.y+=+s):h.dirtyT=1},oe=function(t){var e=t[0];switch(e.toLowerCase()){case"t":return[e,0,0];case"m":return[e,1,0,0,1,0,0];case"r":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case"s":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},le=e._equaliseTransform=function(t,r){r=I(r).replace(/\.{3}|\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i=W(t.length,r.length),n=[],a=[],s=0,o,l,h,u;s<i;s++){if(h=t[s]||oe(r[s]),u=r[s]||oe(h),h[0]!=u[0]||"r"==h[0].toLowerCase()&&(h[2]!=u[2]||h[3]!=u[3])||"s"==h[0].toLowerCase()&&(h[3]!=u[3]||h[4]!=u[4]))return;for(n[s]=[],a[s]=[],o=0,l=W(h.length,u.length);o<l;o++)o in h&&(n[s][o]=h[o]),o in u&&(a[s][o]=u[o])}return{from:n,to:a}};e._getContainer=function(t,r,i,n){var a;if(a=null!=n||e.is(t,"object")?t:T.doc.getElementById(t),null!=a)return a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}},e.pathToRelative=Wt,e._engine={},e.path2curve=Qt,e.matrix=function(t,e,r,i,n,a){return new g(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=Y.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}t.add=function(t,e,r,i,n,a){var s=[[],[],[]],o=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],l=[[t,r,n],[e,i,a],[0,0,1]],h,u,c,f;for(t&&t instanceof g&&(l=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),h=0;h<3;h++)for(u=0;u<3;u++){for(f=0,c=0;c<3;c++)f+=o[h][c]*l[c][u];s[h][u]=f}this.a=s[0][0],this.b=s[1][0],this.c=s[0][1],this.d=s[1][1],this.e=s[0][2],this.f=s[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new g(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new g(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){
this.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+Y.cos(t).toFixed(9),a=+Y.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[I.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?"matrix("+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+")":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return"progid:DXImageTransform.Microsoft.Matrix(M11="+this.get(0)+", M12="+this.get(2)+", M21="+this.get(1)+", M22="+this.get(3)+", Dx="+this.get(4)+", Dy="+this.get(5)+", sizingmethod='auto expand')"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=Y.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=Y.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return s<0?(t.rotate=e.deg(Y.acos(s)),a<0&&(t.rotate=360-t.rotate)):t.rotate=e.deg(Y.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[q]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?"t"+[e.dx,e.dy]:R)+(1!=e.scalex||1!=e.scaley?"s"+[e.scalex,e.scaley,0,0]:R)+(e.rotate?"r"+[e.rotate,0,0]:R)):"m"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(g.prototype);for(var he=function(){this.returnValue=!1},ue=function(){return this.originalEvent.preventDefault()},ce=function(){this.cancelBubble=!0},fe=function(){return this.originalEvent.stopPropagation()},pe=function(t){var e=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,r=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},de=function(){return T.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=pe(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),F&&V[e]){var a=function(e){for(var n=pe(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;s<o;s++)if(e.targetTouches[s].target==t){e=e.targetTouches[s],e.originalEvent=a,e.preventDefault=ue,e.stopPropagation=fe;break}return r.call(i,e,n.x,n.y)};t.addEventListener(V[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),F&&V[e]&&t.removeEventListener(V[e],a,!1),!0}}:T.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||T.win.event;var e=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,n=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||he,t.stopPropagation=t.stopPropagation||ce,r.call(i,t,a,s)};t.attachEvent("on"+e,n);var a=function(){return t.detachEvent("on"+e,n),!0};return a}:void 0}(),ge=[],ve=function(e){for(var r=e.clientX,i=e.clientY,n=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,a=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft,s,o=ge.length;o--;){if(s=ge[o],F&&e.touches){for(var l=e.touches.length,h;l--;)if(h=e.touches[l],h.identifier==s.el._drag.id){r=h.clientX,i=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var u=s.el.node,c,f=u.nextSibling,p=u.parentNode,d=u.style.display;T.win.opera&&p.removeChild(u),u.style.display="none",c=s.el.paper.getElementByPoint(r,i),u.style.display=d,T.win.opera&&(f?p.insertBefore(u,f):p.appendChild(u)),c&&t("raphael.drag.over."+s.el.id,s.el,c),r+=a,i+=n,t("raphael.drag.move."+s.el.id,s.move_scope||s.el,r-s.el._drag.x,i-s.el._drag.y,r,i,e)}},xe=function(r){e.unmousemove(ve).unmouseup(xe);for(var i=ge.length,n;i--;)n=ge[i],n.el._drag={},t("raphael.drag.end."+n.el.id,n.end_scope||n.start_scope||n.move_scope||n.el,r);ge=[]},ye=e.el={},me=D.length;me--;)!function(t){e[t]=ye[t]=function(r,i){return e.is(r,"function")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:de(this.shape||this.node||T.doc,t,r,i||this)})),this},e["un"+t]=ye["un"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,"undefined")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(D[me]);ye.data=function(r,i){var n=wt[this.id]=wt[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,"object")){for(var a in r)r[A](a)&&this.data(a,r[a]);return this}return t("raphael.data.get."+this.id,this,n[r],r),n[r]}return n[r]=i,t("raphael.data.set."+this.id,this,i,r),this},ye.removeData=function(t){return null==t?wt[this.id]={}:wt[this.id]&&delete wt[this.id][t],this},ye.getData=function(){return r(wt[this.id]||{})},ye.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},ye.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var be=[];ye.drag=function(r,i,n,a,s,o){function l(l){(l.originalEvent||l).preventDefault();var h=l.clientX,u=l.clientY,c=T.doc.documentElement.scrollTop||T.doc.body.scrollTop,f=T.doc.documentElement.scrollLeft||T.doc.body.scrollLeft;if(this._drag.id=l.identifier,F&&l.touches)for(var p=l.touches.length,d;p--;)if(d=l.touches[p],this._drag.id=d.identifier,d.identifier==this._drag.id){h=d.clientX,u=d.clientY;break}this._drag.x=h+f,this._drag.y=u+c,!ge.length&&e.mousemove(ve).mouseup(xe),ge.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on("raphael.drag.start."+this.id,i),r&&t.on("raphael.drag.move."+this.id,r),n&&t.on("raphael.drag.end."+this.id,n),t("raphael.drag.start."+this.id,s||a||this,l.clientX+f,l.clientY+c,l)}return this._drag={},be.push({el:this,start:l}),this.mousedown(l),this},ye.onDragOver=function(e){e?t.on("raphael.drag.over."+this.id,e):t.unbind("raphael.drag.over."+this.id)},ye.undrag=function(){for(var r=be.length;r--;)be[r].el==this&&(this.unmousedown(be[r].start),be.splice(r,1),t.unbind("raphael.drag.*."+this.id));!be.length&&e.unmousemove(ve).unmouseup(xe),ge=[]},N.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},N.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},N.path=function(t){t&&!e.is(t,Z)&&!e.is(t[0],Q)&&(t+=R);var r=e._engine.path(e.format[z](e,arguments),this);return this.__set__&&this.__set__.push(r),r},N.image=function(t,r,i,n,a){var s=e._engine.image(this,t||"about:blank",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},N.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,I(i));return this.__set__&&this.__set__.push(n),n},N.set=function(t){!e.is(t,"array")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ze(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type="set",r},N.setStart=function(t){this.__set__=t||this.set()},N.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},N.getSize=function(){var t=this.canvas.parentNode;return{width:t.offsetWidth,height:t.offsetHeight}},N.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},N.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},N.top=N.bottom=null,N.raphael=e;var _e=function(t){var e=t.getBoundingClientRect(),r=t.ownerDocument,i=r.body,n=r.documentElement,a=n.clientTop||i.clientTop||0,s=n.clientLeft||i.clientLeft||0,o=e.top+(T.win.pageYOffset||n.scrollTop||i.scrollTop)-a,l=e.left+(T.win.pageXOffset||n.scrollLeft||i.scrollLeft)-s;return{y:o,x:l}};N.getElementByPoint=function(t,e){var r=this,i=r.canvas,n=T.doc.elementFromPoint(t,e);if(T.win.opera&&"svg"==n.tagName){var a=_e(i),s=i.createSVGRect();s.x=t-a.x,s.y=e-a.y,s.width=s.height=1;var o=i.getIntersectionList(s,null);o.length&&(n=o[o.length-1])}if(!n)return null;for(;n.parentNode&&n!=i.parentNode&&!n.raphael;)n=n.parentNode;return n==r.canvas.parentNode&&(n=i),n=n&&n.raphael?r.getById(n.raphaelid):null},N.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i)}),r},N.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},N.forEach=function(t,e){for(var r=this.bottom;r;){if(t.call(e,r)===!1)return this;r=r.next}return this},N.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},ye.isPointInside=function(t,r){var i=this.realPath=Et[this.type](this);return this.attr("transform")&&this.attr("transform").length&&(i=e.transformPath(i,this.attr("transform"))),e.isPointInsidePath(i,t,r)},ye.getBBox=function(t){if(this.removed)return{};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Et[this.type](this),e.bboxwt=Ot(this.realPath),e.bboxwt.toString=x,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Et[this.type](this)),e.bbox=Ot(Mt(this.realPath,this.matrix)),e.bbox.toString=x,e.dirty=e.dirtyT=0),e.bbox)},ye.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},ye.glow=function(t){if("text"==this.type)return null;t=t||{};var e={width:(t.width||10)+(+this.attr("stroke-width")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||"#000"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Et[this.type](this);a=this.matrix?Mt(a,this.matrix):a;for(var s=1;s<r+1;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:"none","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var we={},ke=function(t,r,i,n,a,s,o,u,c){return null==c?l(t,r,i,n,a,s,o,u):e.findDotsAtSegment(t,r,i,n,a,s,o,u,h(t,r,i,n,a,s,o,u,c))},Be=function(t,r){return function(i,n,a){i=Qt(i);for(var s,o,l,h,u="",c={},f,p=0,d=0,g=i.length;d<g;d++){if(l=i[d],"M"==l[0])s=+l[1],o=+l[2];else{if(h=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6]),p+h>n){if(r&&!c.start){if(f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),u+=["C"+f.start.x,f.start.y,f.m.x,f.m.y,f.x,f.y],a)return u;c.start=u,u=["M"+f.x,f.y+"C"+f.n.x,f.n.y,f.end.x,f.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return f=ke(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p),{x:f.x,y:f.y,alpha:f.alpha}}p+=h,s=+l[5],o=+l[6]}u+=l.shift()+l}return c.end=u,f=t?p:r?c:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1),f.alpha&&(f={x:f.x,y:f.y,alpha:f.alpha}),f}},Ce=Be(1),Se=Be(),Ae=Be(0,1);e.getTotalLength=Ce,e.getPointAtLength=Se,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Ae(t,e).end;var i=Ae(t,r,1);return e?Ae(i,e).end:i},ye.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():Ce(t)},ye.getPointAtLength=function(t){var e=this.getPath();if(e)return Se(e,t)},ye.getPath=function(){var t,r=e._getPath[this.type];if("text"!=this.type&&"set"!=this.type)return r&&(t=r(this)),t},ye.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Te=e.easing_formulas={linear:function(t){return t},"<":function(t){return X(t,1.7)},">":function(t){return X(t,.48)},"<>":function(t){var e=.48-t/1.04,r=Y.sqrt(.1734+e*e),i=r-e,n=X(H(i),1/3)*(i<0?-1:1),a=-r-e,s=X(H(a),1/3)*(a<0?-1:1),o=n+s+.5;return 3*(1-o)*o*o+o*o*o},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){t-=1;var e=1.70158;return t*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:X(2,-10*t)*Y.sin((t-.075)*(2*U)/.3)+1},bounce:function(t){var e=7.5625,r=2.75,i;return t<1/r?i=e*t*t:t<2/r?(t-=1.5/r,i=e*t*t+.75):t<2.5/r?(t-=2.25/r,i=e*t*t+.9375):(t-=2.625/r,i=e*t*t+.984375),i}};Te.easeIn=Te["ease-in"]=Te["<"],Te.easeOut=Te["ease-out"]=Te[">"],Te.easeInOut=Te["ease-in-out"]=Te["<>"],Te["back-in"]=Te.backIn,Te["back-out"]=Te.backOut;var Ee=[],Me=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16)},Ne=function(){for(var r=+new Date,i=0;i<Ee.length;i++){var n=Ee[i];if(!n.el.removed&&!n.paused){var a=r-n.start,s=n.ms,o=n.easing,l=n.from,h=n.diff,u=n.to,c=n.t,f=n.el,p={},d,g={},v;if(n.initstatus?(a=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*s,n.status=n.initstatus,delete n.initstatus,n.stop&&Ee.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(a/s))/n.anim.top,!(a<0))if(a<s){var x=o(a/s);for(var y in l)if(l[A](y)){switch(pt[y]){case $:d=+l[y]+x*s*h[y];break;case"colour":d="rgb("+[Le(ot(l[y].r+x*s*h[y].r)),Le(ot(l[y].g+x*s*h[y].g)),Le(ot(l[y].b+x*s*h[y].b))].join(",")+")";break;case"path":d=[];for(var m=0,_=l[y].length;m<_;m++){d[m]=[l[y][m][0]];for(var w=1,k=l[y][m].length;w<k;w++)d[m][w]=+l[y][m][w]+x*s*h[y][m][w];d[m]=d[m].join(j)}d=d.join(j);break;case"transform":if(h[y].real)for(d=[],m=0,_=l[y].length;m<_;m++)for(d[m]=[l[y][m][0]],w=1,k=l[y][m].length;w<k;w++)d[m][w]=l[y][m][w]+x*s*h[y][m][w];else{var B=function(t){return+l[y][t]+x*s*h[y][t]};d=[["m",B(0),B(1),B(2),B(3),B(4),B(5)]]}break;case"csv":if("clip-rect"==y)for(d=[],m=4;m--;)d[m]=+l[y][m]+x*s*h[y][m];break;default:var C=[][P](l[y]);for(d=[],m=f.paper.customAttributes[y].length;m--;)d[m]=+C[m]+x*s*h[y][m]}p[y]=d}f.attr(p),function(e,r,i){setTimeout(function(){t("raphael.anim.frame."+e,r,i)})}(f.id,f,n.anim)}else{if(function(r,i,n){setTimeout(function(){t("raphael.anim.frame."+i.id,i,n),t("raphael.anim.finish."+i.id,i,n),e.is(r,"function")&&r.call(i)})}(n.callback,f,n.anim),f.attr(u),Ee.splice(i--,1),n.repeat>1&&!n.next){for(v in u)u[A](v)&&(g[v]=n.totalOrigin[v]);n.el.attr(g),b(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&b(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}Ee.length&&Me(Ne)},Le=function(t){return t>255?255:t<0?0:t};ye.animateWith=function(t,r,i,n,a,s){var o=this;if(o.removed)return s&&s.call(o),o;var l=i instanceof m?i:e.animation(i,n,a,s),h,u;b(l,o,l.percents[0],null,o.attr());for(var c=0,f=Ee.length;c<f;c++)if(Ee[c].anim==r&&Ee[c].el==t){Ee[f-1].start=Ee[c].start;break}return o},ye.onAnimation=function(e){return e?t.on("raphael.anim.frame."+this.id,e):t.unbind("raphael.anim.frame."+this.id),this},m.prototype.delay=function(t){var e=new m(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},m.prototype.repeat=function(t){var e=new m(this.anim,this.ms);return e.del=this.del,e.times=Y.floor(W(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof m)return t;!e.is(i,"function")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a={},s,o;for(o in t)t[A](o)&&ht(o)!=o&&ht(o)+"%"!=o&&(s=!0,a[o]=t[o]);if(s)return i&&(a.easing=i),n&&(a.callback=n),new m({100:a},r);if(n){var l=0;for(var h in t){var u=ut(h);t[A](h)&&u>l&&(l=u)}l+="%",!t[l].callback&&(t[l].callback=n)}return new m(t,r)},ye.animate=function(t,r,i,n){var a=this;if(a.removed)return n&&n.call(a),a;var s=t instanceof m?t:e.animation(t,r,i,n);return b(s,a,s.percents[0],null,a.attr()),a},ye.setTime=function(t,e){return t&&null!=e&&this.status(t,G(e,t.ms)/t.ms),this},ye.status=function(t,e){var r=[],i=0,n,a;if(null!=e)return b(t,this,-1,G(e,1)),this;for(n=Ee.length;i<n;i++)if(a=Ee[i],a.el.id==this.id&&(!t||a.anim==t)){if(t)return a.status;r.push({anim:a.anim,status:a.status})}return t?0:r},ye.pause=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t("raphael.anim.pause."+this.id,this,Ee[r].anim)!==!1&&(Ee[r].paused=!0);return this},ye.resume=function(e){for(var r=0;r<Ee.length;r++)if(Ee[r].el.id==this.id&&(!e||Ee[r].anim==e)){var i=Ee[r];t("raphael.anim.resume."+this.id,this,i.anim)!==!1&&(delete i.paused,this.status(i.anim,i.status))}return this},ye.stop=function(e){for(var r=0;r<Ee.length;r++)Ee[r].el.id!=this.id||e&&Ee[r].anim!=e||t("raphael.anim.stop."+this.id,this,Ee[r].anim)!==!1&&Ee.splice(r--,1);return this},t.on("raphael.remove",_),t.on("raphael.clear",_),ye.toString=function(){return"Raphaël’s object"};var ze=function(t){if(this.items=[],this.length=0,this.type="set",t)for(var e=0,r=t.length;e<r;e++)!t[e]||t[e].constructor!=ye.constructor&&t[e].constructor!=ze||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},Pe=ze.prototype;Pe.push=function(){for(var t,e,r=0,i=arguments.length;r<i;r++)t=arguments[r],!t||t.constructor!=ye.constructor&&t.constructor!=ze||(e=this.items.length,this[e]=this.items[e]=t,this.length++);return this},Pe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},Pe.forEach=function(t,e){for(var r=0,i=this.items.length;r<i;r++)if(t.call(e,this.items[r],r)===!1)return this;return this};for(var Fe in ye)ye[A](Fe)&&(Pe[Fe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][z](r,e)})}}(Fe));return Pe.attr=function(t,r){if(t&&e.is(t,Q)&&e.is(t[0],"object"))for(var i=0,n=t.length;i<n;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;a<s;a++)this.items[a].attr(t,r);return this},Pe.clear=function(){for(;this.length;)this.pop()},Pe.splice=function(t,e,r){t=t<0?W(this.length+t,0):t,e=W(0,G(this.length-t,e));var i=[],n=[],a=[],s;for(s=2;s<arguments.length;s++)a.push(arguments[s]);for(s=0;s<e;s++)n.push(this[t+s]);for(;s<this.length-t;s++)i.push(this[t+s]);var o=a.length;for(s=0;s<o+i.length;s++)this.items[t+s]=this[t+s]=s<o?a[s]:i[s-o];for(s=this.items.length=this.length-=e-o;this[s];)delete this[s++];return new ze(n)},Pe.exclude=function(t){for(var e=0,r=this.length;e<r;e++)if(this[e]==t)return this.splice(e,1),!0},Pe.animate=function(t,r,i,n){(e.is(i,"function")||!i)&&(n=i||null);var a=this.items.length,s=a,o,l=this,h;if(!a)return this;n&&(h=function(){!--a&&n.call(l)}),i=e.is(i,Z)?i:h;var u=e.animation(t,r,i,h);for(o=this.items[--s].animate(u);s--;)this.items[s]&&!this.items[s].removed&&this.items[s].animateWith(o,u,u),this.items[s]&&!this.items[s].removed||a--;return this},Pe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},Pe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return t=G[z](0,t),e=G[z](0,e),r=W[z](0,r),i=W[z](0,i),{x:t,y:e,x2:r,y2:i,width:r-t,height:i-e}},Pe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;e<r;e++)t.push(this.items[e].clone());return t},Pe.toString=function(){return"Raphaël‘s set"},Pe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t)})}),e},Pe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){if(i.isPointInside(t,e))return r=!0,!1}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face["font-family"];for(var i in t.face)t.face[A](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg){e.face["units-per-em"]=ut(t.face["units-per-em"],10);for(var n in t.glyphs)if(t.glyphs[A](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&"M"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:"L",c:"C",x:"z",t:"m",r:"l",v:"c"}[t]||"M"})+"z"},a.k)for(var s in a.k)a[A](s)&&(e.glyphs[n].k[s]=a.k[s])}}return t},N.getFont=function(t,r,i,n){if(n=n||"normal",i=i||"normal",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a=e.fonts[t];if(!a){var s=new RegExp("(^|\\s)"+t.replace(/[^\w\d\s+!~.:_-]/g,R)+"(\\s|$)","i");for(var o in e.fonts)if(e.fonts[A](o)&&s.test(o)){a=e.fonts[o];break}}var l;if(a)for(var h=0,u=a.length;h<u&&(l=a[h],l.face["font-weight"]!=r||l.face["font-style"]!=i&&l.face["font-style"]||l.face["font-stretch"]!=n);h++);return l}},N.print=function(t,r,i,n,a,s,o,l){s=s||"middle",o=W(G(o||0,1),-1),l=W(G(l||1,3),1);var h=I(i)[q](R),u=0,c=0,f=R,p;if(e.is(n,"string")&&(n=this.getFont(n)),n){p=(a||16)/n.face["units-per-em"];for(var d=n.face.bbox[q](k),g=+d[0],v=d[3]-d[1],x=0,y=+d[1]+("baseline"==s?v+ +n.face.descent:v/2),m=0,b=h.length;m<b;m++){if("\n"==h[m])u=0,w=0,c=0,x+=v*l;else{var _=c&&n.glyphs[h[m-1]]||{},w=n.glyphs[h[m]];u+=c?(_.w||n.w)+(_.k&&_.k[h[m]]||0)+n.w*o:0,c=1}w&&w.d&&(f+=e.transformPath(w.d,["t",u*p,x*p,"s",p,p,g,y,"t",(t-g)/p,(r-y)/p]))}}return this.path(f).attr({fill:"#000",stroke:"none"})},N.add=function(t){if(e.is(t,"array"))for(var r=this.set(),i=0,n=t.length,a;i<n;i++)a=t[i]||{},B[A](a.type)&&r.push(this[a.type]().attr(a));return r},e.format=function(t,r){var i=e.is(r,Q)?[0][P](r):arguments;return t&&e.is(t,Z)&&i.length-1&&(t=t.replace(C,function(t,e){return null==i[++e]?R:i[e]})),t||R},e.fullfill=function(){var t=/\{([^\}]+)\}/g,e=/(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g,r=function(t,r,i){var n=i;return r.replace(e,function(t,e,r,i,a){e=e||i,n&&(e in n&&(n=n[e]),"function"==typeof n&&a&&(n=n()))}),n=(null==n||n==i?t:n)+""};return function(e,i){return String(e).replace(t,function(t,e){return r(t,e,i)})}}(),e.ninja=function(){if(E.was)T.win.Raphael=E.is;else{window.Raphael=void 0;try{delete window.Raphael}catch(t){}}return e},e.st=Pe,t.on("raphael.DOMload",function(){w=!0}),function(t,r,i){function n(){/in/.test(t.readyState)?setTimeout(n,9):e.eve("raphael.DOMload")}null==t.readyState&&t.addEventListener&&(t.addEventListener(r,i=function(){t.removeEventListener(r,i,!1),t.readyState="complete"},!1),t.readyState="loading"),n()}(document,"DOMContentLoaded"),e}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;!function(r){var a="0.5.0",s="hasOwnProperty",o=/[\.\/]/,l=/\s*,\s*/,h="*",u=function(){},c=function(t,e){return t-e},f,p,d={n:{}},g=function(){for(var t=0,e=this.length;t<e;t++)if("undefined"!=typeof this[t])return this[t]},v=function(){for(var t=this.length;--t;)if("undefined"!=typeof this[t])return this[t]},x=Object.prototype.toString,y=String,m=Array.isArray||function(t){return t instanceof Array||"[object Array]"==x.call(t)};eve=function(t,e){var r=d,i=p,n=Array.prototype.slice.call(arguments,2),a=eve.listeners(t),s=0,o=!1,l,h=[],u={},x=[],y=f,m=[];x.firstDefined=g,x.lastDefined=v,f=t,p=0;for(var b=0,_=a.length;b<_;b++)"zIndex"in a[b]&&(h.push(a[b].zIndex),a[b].zIndex<0&&(u[a[b].zIndex]=a[b]));for(h.sort(c);h[s]<0;)if(l=u[h[s++]],x.push(l.apply(e,n)),p)return p=i,x;for(b=0;b<_;b++)if(l=a[b],"zIndex"in l)if(l.zIndex==h[s]){if(x.push(l.apply(e,n)),p)break;do if(s++,l=u[h[s]],l&&x.push(l.apply(e,n)),p)break;while(l)}else u[l.zIndex]=l;else if(x.push(l.apply(e,n)),p)break;return p=i,f=y,x},eve._events=d,eve.listeners=function(t){var e=m(t)?t:t.split(o),r=d,i,n,a,s,l,u,c,f,p=[r],g=[];for(s=0,l=e.length;s<l;s++){for(f=[],u=0,c=p.length;u<c;u++)for(r=p[u].n,n=[r[e[s]],r[h]],a=2;a--;)i=n[a],i&&(f.push(i),g=g.concat(i.f||[]));p=f}return g},eve.separator=function(t){t?(t=y(t).replace(/(?=[\.\^\]\[\-])/g,"\\"),t="["+t+"]",o=new RegExp(t)):o=/[\.\/]/},eve.on=function(t,e){if("function"!=typeof e)return function(){};for(var r=m(t)?m(t[0])?t:[t]:y(t).split(l),i=0,n=r.length;i<n;i++)!function(t){for(var r=m(t)?t:y(t).split(o),i=d,n,a=0,s=r.length;a<s;a++)i=i.n,i=i.hasOwnProperty(r[a])&&i[r[a]]||(i[r[a]]={n:{}});for(i.f=i.f||[],a=0,s=i.f.length;a<s;a++)if(i.f[a]==e){n=!0;break}!n&&i.f.push(e)}(r[i]);return function(t){+t==+t&&(e.zIndex=+t)}},eve.f=function(t){var e=[].slice.call(arguments,1);return function(){eve.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},eve.stop=function(){p=1},eve.nt=function(t){var e=m(f)?f.join("."):f;return t?new RegExp("(?:\\.|\\/|^)"+t+"(?:\\.|\\/|$)").test(e):e},eve.nts=function(){return m(f)?f:f.split(o)},eve.off=eve.unbind=function(t,e){if(!t)return void(eve._events=d={n:{}});var r=m(t)?m(t[0])?t:[t]:y(t).split(l);if(r.length>1)for(var i=0,n=r.length;i<n;i++)eve.off(r[i],e);else{r=m(t)?t:y(t).split(o);var a,u,c,i,n,f,p,g=[d];for(i=0,n=r.length;i<n;i++)for(f=0;f<g.length;f+=c.length-2){if(c=[f,1],a=g[f].n,r[i]!=h)a[r[i]]&&c.push(a[r[i]]);else for(u in a)a[s](u)&&c.push(a[u]);g.splice.apply(g,c)}for(i=0,n=g.length;i<n;i++)for(a=g[i];a.n;){if(e){if(a.f){for(f=0,p=a.f.length;f<p;f++)if(a.f[f]==e){a.f.splice(f,1);break}!a.f.length&&delete a.f}for(u in a.n)if(a.n[s](u)&&a.n[u].f){var v=a.n[u].f;for(f=0,p=v.length;f<p;f++)if(v[f]==e){v.splice(f,1);break}!v.length&&delete a.n[u].f}}else{delete a.f;for(u in a.n)a.n[s](u)&&a.n[u].f&&delete a.n[u].f}a=a.n}}},eve.once=function(t,e){var r=function(){return eve.off(t,r),e.apply(this,arguments)};return eve.on(t,r)},eve.version=a,eve.toString=function(){return"You are running Eve "+a},"undefined"!=typeof t&&t.exports?t.exports=eve:(i=[],n=function(){return eve}.apply(e,i),!(void 0!==n&&(t.exports=n)))}(this)},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.svg){var e="hasOwnProperty",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c="",f=" ",p="http://www.w3.org/1999/xlink",d={block:"M5,0 0,2.5 5,5z",classic:"M5,0 0,2.5 5,5 3.5,3 3.5,2z",diamond:"M2.5,0 5,2.5 2.5,5 0,2.5z",open:"M6,1 1,3.5 6,6",oval:"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"},g={};t.toString=function(){return"Your browser supports SVG.\nYou are running Raphaël "+this.version};var v=function(i,n){if(n){"string"==typeof i&&(i=v(i));for(var a in n)n[e](a)&&("xlink:"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])))}else i=t._g.doc.createElementNS("http://www.w3.org/2000/svg",i),i.style&&(i.style.webkitTapHighlightColor="rgba(0,0,0,0)");return i},x=function(e,n){var h="linear",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,x=d.style,y=t._g.doc.getElementById(u);if(!y){if(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h="radial",e&&r){f=i(e),p=i(r);var n=2*(p>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c}),n=n.split(/\s*\-\s*/),"linear"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0)}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\(\)\s,\xb0#]/g,"_"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){y=v(h+"Gradient",{id:u}),e.gradient=y,v(y,"radial"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(y);for(var B=0,C=k.length;B<C;B++)y.appendChild(v("stop",{offset:k[B].offset?k[B].offset:B?"100%":"0%","stop-color":k[B].color||"#fff","stop-opacity":isFinite(k[B].opacity)?k[B].opacity:1}))}}return v(d,{fill:m(u),opacity:1,"fill-opacity":1}),x.fill=c,x.opacity=1,x.fillOpacity=1,1},y=function(){var t=document.documentMode;return t&&(9===t||10===t)},m=function(t){if(y())return"url('#"+t+"')";var e=document.location,r=e.protocol+"//"+e.host+e.pathname+e.search;return"url('"+r+"#"+t+"')"},b=function(t){var e=t.getBBox(1);v(t.pattern,{patternTransform:t.matrix.invert()+" translate("+e.x+","+e.y+")"})},_=function(i,n,a){if("path"==i.type){for(var s=r(n).toLowerCase().split("-"),o=i.paper,l=a?"end":"start",h=i.node,u=i.attrs,f=u["stroke-width"],p=s.length,x="classic",y,m,b,_,w,k=3,B=3,C=5;p--;)switch(s[p]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":x=s[p];break;case"wide":B=5;break;case"narrow":B=2;break;case"long":k=5;break;case"short":k=2}if("open"==x?(k+=2,B+=2,C+=2,b=1,_=a?4:1,w={fill:"none",stroke:u.stroke}):(_=b=k/2,w={fill:u.stroke,stroke:"none"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},"none"!=x){var S="raphael-marker-"+x,A="raphael-marker-"+l+x+k+B+"-obj"+i.id;t._g.doc.getElementById(S)?g[S]++:(o.defs.appendChild(v(v("path"),{"stroke-linecap":"round",d:d[x],id:S})),g[S]=1);var T=t._g.doc.getElementById(A),E;T?(g[A]++,E=T.getElementsByTagName("use")[0]):(T=v(v("marker"),{id:A,markerHeight:B,markerWidth:k,orient:"auto",refX:_,refY:B/2}),E=v(v("use"),{"xlink:href":"#"+S,transform:(a?"rotate(180 "+k/2+" "+B/2+") ":c)+"scale("+k/C+","+B/C+")","stroke-width":(1/((k/C+B/C)/2)).toFixed(4)}),T.appendChild(E),o.defs.appendChild(T),g[A]=1),v(E,w);var M=b*("diamond"!=x&&"oval"!=x);a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-M*f):(y=M*f,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),w={},w["marker-"+l]="url(#"+A+")",(m||y)&&(w.d=t.getSubpath(u.path,y,m)),v(h,w),i._.arrows[l+"Path"]=S,i._.arrows[l+"Marker"]=A,i._.arrows[l+"dx"]=M,i._.arrows[l+"Type"]=x,i._.arrows[l+"String"]=n}else a?(y=i._.arrows.startdx*f||0,m=t.getTotalLength(u.path)-y):(y=0,m=t.getTotalLength(u.path)-(i._.arrows.enddx*f||0)),i._.arrows[l+"Path"]&&v(h,{d:t.getSubpath(u.path,y,m)}),delete i._.arrows[l+"Path"],delete i._.arrows[l+"Marker"],delete i._.arrows[l+"dx"],delete i._.arrows[l+"Type"],delete i._.arrows[l+"String"];for(w in g)if(g[e](w)&&!g[w]){var N=t._g.doc.getElementById(w);N&&N.parentNode.removeChild(N)}}},w={"-":[3,1],".":[1,1],"-.":[3,1,1,1],"-..":[3,1,1,1,1,1],". ":[1,3],"- ":[4,3],"--":[8,3],"- .":[4,3,1,3],"--.":[8,3,1,3],"--..":[8,3,1,3,1,3]},k=function(t,e,i){if(e=w[r(e).toLowerCase()]){for(var n=t.attrs["stroke-width"]||"1",a={round:n,square:n,butt:0}[t.attrs["stroke-linecap"]||i["stroke-linecap"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;v(t.node,{"stroke-dasharray":s.join(",")})}else v(t.node,{"stroke-dasharray":"none"})},B=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;l.style.visibility="hidden";for(var d in a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case"blur":i.blur(g);break;case"title":var y=l.getElementsByTagName("title");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else{y=v("title");var m=t._g.doc.createTextNode(g);y.appendChild(m),l.appendChild(y)}break;case"href":case"target":var w=l.parentNode;if("a"!=w.tagName.toLowerCase()){var B=v("a");w.insertBefore(B,l),B.appendChild(l),w=B}"target"==d?w.setAttributeNS(p,"show","blank"==g?"new":g):w.setAttributeNS(p,d,g);break;case"cursor":l.style.cursor=g;break;case"transform":i.transform(g);break;case"arrow-start":_(i,g);break;case"arrow-end":_(i,g,1);break;case"clip-rect":var C=r(g).split(h);if(4==C.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var A=v("clipPath"),T=v("rect");A.id=t.createUUID(),v(T,{x:C[0],y:C[1],width:C[2],height:C[3]}),A.appendChild(T),i.paper.defs.appendChild(A),v(l,{"clip-path":"url(#"+A.id+")"}),i.clip=T}if(!g){var E=l.getAttribute("clip-path");if(E){var M=t._g.doc.getElementById(E.replace(/(^url\(#|\)$)/g,c));M&&M.parentNode.removeChild(M),v(l,{"clip-path":c}),delete i.clip}}break;case"path":"path"==i.type&&(v(l,{d:g?u.path=t._pathToAbsolute(g):"M0,0"}),i._.dirty=1,i._.arrows&&("startString"in i._.arrows&&_(i,i._.arrows.startString),"endString"in i._.arrows&&_(i,i._.arrows.endString,1)));break;case"width":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d="x",g=u.x;case"x":u.fx&&(g=-u.x-(u.width||0));case"rx":if("rx"==d&&"rect"==i.type)break;case"cx":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case"height":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d="y",g=u.y;case"y":u.fy&&(g=-u.y-(u.height||0));case"ry":if("ry"==d&&"rect"==i.type)break;case"cy":l.setAttribute(d,g),i.pattern&&b(i),i._.dirty=1;break;case"r":"rect"==i.type?v(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case"src":"image"==i.type&&l.setAttributeNS(p,"href",g);break;case"stroke-width":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u["stroke-dasharray"]&&k(i,u["stroke-dasharray"],a),
i._.arrows&&("startString"in i._.arrows&&_(i,i._.arrows.startString),"endString"in i._.arrows&&_(i,i._.arrows.endString,1));break;case"stroke-dasharray":k(i,g,a);break;case"fill":var N=r(g).match(t._ISURL);if(N){A=v("pattern");var L=v("image");A.id=t.createUUID(),v(A,{x:0,y:0,patternUnits:"userSpaceOnUse",height:1,width:1}),v(L,{x:0,y:0,"xlink:href":N[1]}),A.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;v(e,{width:t,height:r}),v(L,{width:t,height:r})})}(A),i.paper.defs.appendChild(A),v(l,{fill:"url(#"+A.id+")"}),i.pattern=A,i.pattern&&b(i);break}var z=t.getRGB(g);if(z.error){if(("circle"==i.type||"ellipse"==i.type||"r"!=r(g).charAt())&&x(i,g)){if("opacity"in u||"fill-opacity"in u){var P=t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g,c));if(P){var F=P.getElementsByTagName("stop");v(F[F.length-1],{"stop-opacity":("opacity"in u?u.opacity:1)*("fill-opacity"in u?u["fill-opacity"]:1)})}}u.gradient=g,u.fill="none";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,"undefined")&&t.is(a.opacity,"undefined")&&v(l,{opacity:u.opacity}),!t.is(u["fill-opacity"],"undefined")&&t.is(a["fill-opacity"],"undefined")&&v(l,{"fill-opacity":u["fill-opacity"]});z[e]("opacity")&&v(l,{"fill-opacity":z.opacity>1?z.opacity/100:z.opacity});case"stroke":z=t.getRGB(g),l.setAttribute(d,z.hex),"stroke"==d&&z[e]("opacity")&&v(l,{"stroke-opacity":z.opacity>1?z.opacity/100:z.opacity}),"stroke"==d&&i._.arrows&&("startString"in i._.arrows&&_(i,i._.arrows.startString),"endString"in i._.arrows&&_(i,i._.arrows.endString,1));break;case"gradient":("circle"==i.type||"ellipse"==i.type||"r"!=r(g).charAt())&&x(i,g);break;case"opacity":u.gradient&&!u[e]("stroke-opacity")&&v(l,{"stroke-opacity":g>1?g/100:g});case"fill-opacity":if(u.gradient){P=t._g.doc.getElementById(l.getAttribute("fill").replace(/^url\(#|\)$/g,c)),P&&(F=P.getElementsByTagName("stop"),v(F[F.length-1],{"stop-opacity":g}));break}default:"font-size"==d&&(g=n(g,10)+"px");var R=d.replace(/(\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g)}}S(i,a),l.style.visibility=f},C=1.2,S=function(i,a){if("text"==i.type&&(a[e]("text")||a[e]("font")||a[e]("font-size")||a[e]("x")||a[e]("y"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue("font-size"),10):10;if(a[e]("text")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h=r(a.text).split("\n"),u=[],f,p=0,d=h.length;p<d;p++)f=v("tspan"),p&&v(f,{dy:l*C,x:s.x}),f.appendChild(t._g.doc.createTextNode(h[p])),o.appendChild(f),u[p]=f}else for(u=o.getElementsByTagName("tspan"),p=0,d=u.length;p<d;p++)p?v(u[p],{dy:l*C,x:s.x}):v(u[0],{dy:0});v(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),x=s.y-(g.y+g.height/2);x&&t.is(x,"finite")&&v(u[0],{dy:x})}},A=function(t){return t.parentNode&&"a"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},T=function(e,r){function i(){return("0000"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5)}var n=0,a=0;this[0]=this.node=e,e.raphael=!0,this.id=i(),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},E=t.el;T.prototype=E,E.constructor=T,t._engine.path=function(t,e){var r=v("path");e.canvas&&e.canvas.appendChild(r);var i=new T(r,e);return i.type="path",B(i,{fill:"none",stroke:"#000",path:t}),i},E.rotate=function(t,e,n){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([["r",t,e,n]])),this},E.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(h),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([["s",t,e,n,a]])),this},E.translate=function(t,e){return this.removed?this:(t=r(t).split(h),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([["t",t,e]])),this)},E.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&v(this.clip,{transform:this.matrix.invert()}),this.pattern&&b(this),this.node&&v(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e]("stroke-width")?this.attrs["stroke-width"]:1;this.attr({"stroke-width":n})}return this},E.hide=function(){return this.removed||(this.node.style.display="none"),this},E.show=function(){return this.removed||(this.node.style.display=""),this},E.remove=function(){var e=A(this.node);if(!this.removed&&e.parentNode){var r=this.paper;r.__set__&&r.__set__.exclude(this),u.unbind("raphael.*.*."+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData();for(var i in this)this[i]="function"==typeof this[i]?t._removedFactory(i):null;this.removed=!0}},E._getBBox=function(){if("none"==this.node.style.display){this.show();var t=!0}var e=!1,r;this.paper.canvas.parentElement?r=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(r=this.paper.canvas.parentNode.style),r&&"none"==r.display&&(e=!0,r.display="");var i={};try{i=this.node.getBBox()}catch(n){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{i=i||{},e&&(r.display="none")}return t&&this.hide(),i},E.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&"none"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,"string")){if("fill"==r&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if("transform"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],"function")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,"array")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i}else null!=r&&t.is(r,"object")&&(f=r);for(var p in f)u("raphael.attr."+p+"."+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],"function")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));this.attrs[p]=f[p];for(var g in d)d[e](g)&&(f[g]=d[g])}return B(this,f),this},E.toFront=function(){if(this.removed)return this;var e=A(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},E.toBack=function(){if(this.removed)return this;var e=A(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);var i=this.paper;return this},E.insertAfter=function(e){if(this.removed||!e)return this;var r=A(this.node),i=A(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},E.insertBefore=function(e){if(this.removed||!e)return this;var r=A(this.node),i=A(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},E.blur=function(e){var r=this;if(0!==+e){var i=v("filter"),n=v("feGaussianBlur");r.attrs.blur=e,i.id=t.createUUID(),v(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,v(r.node,{filter:"url(#"+i.id+")"})}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute("filter");return r},t._engine.circle=function(t,e,r,i){var n=v("circle");t.canvas&&t.canvas.appendChild(n);var a=new T(n,t);return a.attrs={cx:e,cy:r,r:i,fill:"none",stroke:"#000"},a.type="circle",v(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=v("rect");t.canvas&&t.canvas.appendChild(s);var o=new T(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:"none",stroke:"#000"},o.type="rect",v(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=v("ellipse");t.canvas&&t.canvas.appendChild(a);var s=new T(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:"none",stroke:"#000"},s.type="ellipse",v(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=v("image");v(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:"none"}),s.setAttributeNS(p,"href",e),t.canvas&&t.canvas.appendChild(s);var o=new T(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type="image",o},t._engine.text=function(e,r,i,n){var a=v("text");e.canvas&&e.canvas.appendChild(a);var s=new T(a,e);return s.attrs={x:r,y:i,"text-anchor":"middle",text:n,"font-family":t._availableAttrs["font-family"],"font-size":t._availableAttrs["font-size"],stroke:"none",fill:"#000"},s.type="text",B(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute("width",this.width),this.canvas.setAttribute("height",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container,i=e.x,n=e.y,a=e.width,s=e.height;if(!r)throw new Error("SVG container not found.");var o=v("svg"),l="overflow:hidden;",h;return i=i||0,n=n||0,a=a||512,s=s||342,v(o,{height:s,version:1.1,width:a,xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink"}),1==r?(o.style.cssText=l+"position:absolute;left:"+i+"px;top:"+n+"px",t._g.doc.body.appendChild(o),h=1):(o.style.cssText=l+"position:relative",r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o)),r=new t._Paper,r.width=a,r.height=s,r.canvas=o,r.clear(),r._left=r._top=0,h&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u("raphael.setViewBox",this,this._viewBox,[t,e,r,i,n]);var a=this.getSize(),o=s(r/a.width,i/a.height),l=this.top,h=n?"xMidYMid meet":"xMinYMin",c,p;for(null==t?(this._vbSize&&(o=1),delete this._vbSize,c="0 0 "+this.width+f+this.height):(this._vbSize=o,c=t+f+e+f+r+f+i),v(this.canvas,{viewBox:c,preserveAspectRatio:h});o&&l;)p="stroke-width"in l.attrs?l.attrs["stroke-width"]:1,l.attr({"stroke-width":p}),l._.dirty=1,l._.dirtyT=1,l=l.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t=this.canvas,e=t.style,r;try{r=t.getScreenCTM()||t.createSVGMatrix()}catch(i){r=t.createSVGMatrix()}var n=-r.e%1,a=-r.f%1;(n||a)&&(n&&(this._left=(this._left+n)%1,e.left=this._left+"px"),a&&(this._top=(this._top+a)%1,e.top=this._top+"px"))},t.prototype.clear=function(){t.eve("raphael.clear",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=v("desc")).appendChild(t._g.doc.createTextNode("Created with Raphaël "+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=v("defs"))},t.prototype.remove=function(){u("raphael.remove",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]="function"==typeof this[e]?t._removedFactory(e):null};var M=t.st;for(var N in E)E[e](N)&&!M[e](N)&&(M[N]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(N))}}.apply(e,i),!(void 0!==n&&(t.exports=n))},function(t,e,r){var i,n;i=[r(1)],n=function(t){if(!t||t.vml){var e="hasOwnProperty",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h="fill",u=/[, ]+/,c=t.eve,f=" progid:DXImageTransform.Microsoft",p=" ",d="",g={M:"m",L:"l",C:"c",Z:"x",m:"t",l:"r",c:"v",z:"x"},v=/([clmz]),?([^clmz]*)/gi,x=/ progid:\S+Blur\([^\)]+\)/g,y=/-?[^,\s-]+/g,m="position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)",b=21600,_={path:1,rect:1,image:1},w={circle:1,ellipse:1},k=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(v,function(t,e,r){var i=[],n="m"==e.toLowerCase(),s=g[e];return r.replace(y,function(t){n&&2==i.length&&(s+=i+g["m"==e?"l":"L"],i=[]),i.push(a(t*b))}),s+i});return s}var o=n(e),l,h;s=[];for(var u=0,c=o.length;u<c;u++){l=o[u],h=o[u][0].toLowerCase(),"z"==h&&(h="x");for(var f=1,x=l.length;f<x;f++)h+=a(l[f]*b)+(f!=x-1?",":d);s.push(h)}return s.join(p)},B=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},C=function(t,e,r,i,n,a){var s=t._,o=t.matrix,u=s.fillpos,c=t.node,f=c.style,d=1,g="",v,x=b/e,y=b/r;if(f.visibility="hidden",e&&r){if(c.coordsize=l(x)+p+l(y),f.rotation=a*(e*r<0?-1:1),a){var m=B(a,i,n);i=m.dx,n=m.dy}if(e<0&&(g+="x"),r<0&&(g+=" y")&&(d=-1),f.flip=g,c.coordorigin=i*-x+p+n*-y,u||s.fillsize){var _=c.getElementsByTagName(h);_=_&&_[0],c.removeChild(_),u&&(m=B(a,o.x(u[0],u[1]),o.y(u[0],u[1])),_.position=m.dx*d+p+m.dy*d),s.fillsize&&(_.size=s.fillsize[0]*l(e)+p+s.fillsize[1]*l(r)),c.appendChild(_)}f.visibility="visible"}};t.toString=function(){return"Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël "+this.version};var S=function(t,e,i){for(var n=r(e).toLowerCase().split("-"),a=i?"end":"start",s=n.length,o="classic",l="medium",h="medium";s--;)switch(n[s]){case"block":case"classic":case"oval":case"diamond":case"open":case"none":o=n[s];break;case"wide":case"narrow":h=n[s];break;case"long":case"short":l=n[s]}var u=t.node.getElementsByTagName("stroke")[0];u[a+"arrow"]=o,u[a+"arrowlength"]=l,u[a+"arrowwidth"]=h},A=function(n,l){n.attrs=n.attrs||{};var c=n.node,f=n.attrs,g=c.style,v,x=_[n.type]&&(l.x!=f.x||l.y!=f.y||l.width!=f.width||l.height!=f.height||l.cx!=f.cx||l.cy!=f.cy||l.rx!=f.rx||l.ry!=f.ry||l.r!=f.r),y=w[n.type]&&(f.cx!=l.cx||f.cy!=l.cy||f.r!=l.r||f.rx!=l.rx||f.ry!=l.ry),m=n;for(var B in l)l[e](B)&&(f[B]=l[B]);if(x&&(f.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(c.href=l.href),l.title&&(c.title=l.title),l.target&&(c.target=l.target),l.cursor&&(g.cursor=l.cursor),"blur"in l&&n.blur(l.blur),(l.path&&"path"==n.type||x)&&(c.path=k(~r(f.path).toLowerCase().indexOf("r")?t._pathToAbsolute(f.path):f.path),n._.dirty=1,"image"==n.type&&(n._.fillpos=[f.x,f.y],n._.fillsize=[f.width,f.height],C(n,1,1,0,0,0))),"transform"in l&&n.transform(l.transform),y){var A=+f.cx,E=+f.cy,M=+f.rx||+f.r||0,L=+f.ry||+f.r||0;c.path=t.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x",a((A-M)*b),a((E-L)*b),a((A+M)*b),a((E+L)*b),a(A*b)),n._.dirty=1}if("clip-rect"in l){var z=r(l["clip-rect"]).split(u);if(4==z.length){z[2]=+z[2]+ +z[0],z[3]=+z[3]+ +z[1];var P=c.clipRect||t._g.doc.createElement("div"),F=P.style;F.clip=t.format("rect({1}px {2}px {3}px {0}px)",z),c.clipRect||(F.position="absolute",F.top=0,F.left=0,F.width=n.paper.width+"px",F.height=n.paper.height+"px",c.parentNode.insertBefore(P,c),P.appendChild(c),c.clipRect=P)}l["clip-rect"]||c.clipRect&&(c.clipRect.style.clip="auto")}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l["font-family"]&&(R.fontFamily='"'+l["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g,d)+'"'),l["font-size"]&&(R.fontSize=l["font-size"]),l["font-weight"]&&(R.fontWeight=l["font-weight"]),l["font-style"]&&(R.fontStyle=l["font-style"])}if("arrow-start"in l&&S(m,l["arrow-start"]),"arrow-end"in l&&S(m,l["arrow-end"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l["stroke-width"]||null!=l["stroke-opacity"]||null!=l["fill-opacity"]||null!=l["stroke-dasharray"]||null!=l["stroke-miterlimit"]||null!=l["stroke-linejoin"]||null!=l["stroke-linecap"]){var j=c.getElementsByTagName(h),I=!1;if(j=j&&j[0],!j&&(I=j=N(h)),"image"==n.type&&l.src&&(j.src=l.src),l.fill&&(j.on=!0),null!=j.on&&"none"!=l.fill&&null!==l.fill||(j.on=!1),j.on&&l.fill){var q=r(l.fill).match(t._ISURL);if(q){j.parentNode==c&&c.removeChild(j),j.rotate=!0,j.src=q[1],j.type="tile";var D=n.getBBox(1);j.position=D.x+p+D.y,n._.fillpos=[D.x,D.y],t._preload(q[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else j.color=t.getRGB(l.fill).hex,j.src=d,j.type="solid",t.getRGB(l.fill).error&&(m.type in{circle:1,ellipse:1}||"r"!=r(l.fill).charAt())&&T(m,l.fill,j)&&(f.fill="none",f.gradient=l.fill,j.rotate=!1)}if("fill-opacity"in l||"opacity"in l){var V=((+f["fill-opacity"]+1||2)-1)*((+f.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);V=o(s(V,0),1),j.opacity=V,j.src&&(j.color="none")}c.appendChild(j);var O=c.getElementsByTagName("stroke")&&c.getElementsByTagName("stroke")[0],Y=!1;!O&&(Y=O=N("stroke")),(l.stroke&&"none"!=l.stroke||l["stroke-width"]||null!=l["stroke-opacity"]||l["stroke-dasharray"]||l["stroke-miterlimit"]||l["stroke-linejoin"]||l["stroke-linecap"])&&(O.on=!0),("none"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l["stroke-width"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),V=((+f["stroke-opacity"]+1||2)-1)*((+f.opacity+1||2)-1)*((+W.o+1||2)-1);var G=.75*(i(l["stroke-width"])||1);if(V=o(s(V,0),1),null==l["stroke-width"]&&(G=f["stroke-width"]),l["stroke-width"]&&(O.weight=G),G&&G<1&&(V*=G)&&(O.weight=1),O.opacity=V,l["stroke-linejoin"]&&(O.joinstyle=l["stroke-linejoin"]||"miter"),O.miterlimit=l["stroke-miterlimit"]||8,l["stroke-linecap"]&&(O.endcap="butt"==l["stroke-linecap"]?"flat":"square"==l["stroke-linecap"]?"square":"round"),"stroke-dasharray"in l){var H={"-":"shortdash",".":"shortdot","-.":"shortdashdot","-..":"shortdashdotdot",". ":"dot","- ":"dash","--":"longdash","- .":"dashdot","--.":"longdashdot","--..":"longdashdotdot"};O.dashstyle=H[e](l["stroke-dasharray"])?H[l["stroke-dasharray"]]:d}Y&&c.appendChild(O)}if("text"==m.type){m.paper.canvas.style.display=d;var X=m.paper.span,U=100,$=f.font&&f.font.match(/\d+(?:\.\d*)?(?=px)/);g=X.style,f.font&&(g.font=f.font),f["font-family"]&&(g.fontFamily=f["font-family"]),f["font-weight"]&&(g.fontWeight=f["font-weight"]),f["font-style"]&&(g.fontStyle=f["font-style"]),$=i(f["font-size"]||$&&$[0])||10,g.fontSize=$*U+"px",m.textpath.string&&(X.innerHTML=r(m.textpath.string).replace(/</g,"&#60;").replace(/&/g,"&#38;").replace(/\n/g,"<br>"));var Z=X.getBoundingClientRect();m.W=f.w=(Z.right-Z.left)/U,m.H=f.h=(Z.bottom-Z.top)/U,m.X=f.x,m.Y=f.y+m.H/2,("x"in l||"y"in l)&&(m.path.v=t.format("m{0},{1}l{2},{1}",a(f.x*b),a(f.y*b),a(f.x*b)+1));for(var Q=["x","y","text","font","font-family","font-weight","font-style","font-size"],J=0,K=Q.length;J<K;J++)if(Q[J]in l){m._.dirty=1;break}switch(f["text-anchor"]){case"start":m.textpath.style["v-text-align"]="left",m.bbx=m.W/2;break;case"end":m.textpath.style["v-text-align"]="right",m.bbx=-m.W/2;break;default:m.textpath.style["v-text-align"]="center",m.bbx=0}m.textpath.style["v-text-kern"]=!0}},T=function(e,a,s){e.attrs=e.attrs||{};var o=e.attrs,l=Math.pow,h,u,c="linear",f=".5 .5";if(e.attrs.gradient=a,a=r(a).replace(t._radial_gradient,function(t,e,r){return c="radial",e&&r&&(e=i(e),r=i(r),l(e-.5,2)+l(r-.5,2)>.25&&(r=n.sqrt(.25-l(e-.5,2))*(2*(r>.5)-1)+.5),f=e+p+r),d}),a=a.split(/\s*\-\s*/),"linear"==c){var g=a.shift();if(g=-i(g),isNaN(g))return null}var v=t._parseDots(a);if(!v)return null;if(e=e.shape||e.node,v.length){e.removeChild(s),s.on=!0,s.method="none",s.color=v[0].color,s.color2=v[v.length-1].color;for(var x=[],y=0,m=v.length;y<m;y++)v[y].offset&&x.push(v[y].offset+p+v[y].color);s.colors=x.length?x.join():"0% "+s.color,"radial"==c?(s.type="gradientTitle",s.focus="100%",s.focussize="0 0",s.focusposition=f,s.angle=0):(s.type="gradient",s.angle=(270-g)%360),e.appendChild(s)}return 1},E=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},M=t.el;E.prototype=M,M.constructor=E,M.transform=function(e){if(null==e)return this._.transform;var i=this.paper._viewBoxShift,n=i?"s"+[i.scale,i.scale]+"-1-1t"+[i.dx,i.dy]:d,a;i&&(a=e=r(e).replace(/\.{3}|\u2026/g,this._.transform||d)),t._extractTransform(this,n+e);var s=this.matrix.clone(),o=this.skew,l=this.node,h,u=~r(this.attrs.fill).indexOf("-"),c=!r(this.attrs.fill).indexOf("url(");if(s.translate(1,1),c||u||"image"==this.type)if(o.matrix="1 0 0 1",o.offset="0 0",h=s.split(),u&&h.noRotation||!h.isSimple){l.style.filter=s.toFilter();var f=this.getBBox(),g=this.getBBox(1),v=f.x-g.x,x=f.y-g.y;l.coordorigin=v*-b+p+x*-b,C(this,1,1,v,x,0)}else l.style.filter=d,C(this,h.scalex,h.scaley,h.dx,h.dy,h.rotate);else l.style.filter=d,o.matrix=r(s),o.offset=s.offset();return null!==a&&(this._.transform=a,t._extractTransform(this,a)),this},M.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([["r",t,e,n]])),this}},M.translate=function(t,e){return this.removed?this:(t=r(t).split(u),t.length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([["t",t,e]])),this)},M.scale=function(t,e,n,a){if(this.removed)return this;if(t=r(t).split(u),t.length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([["s",t,e,n,a]])),this._.dirtyT=1,this},M.hide=function(){return!this.removed&&(this.node.style.display="none"),this},M.show=function(){return!this.removed&&(this.node.style.display=d),this},M.auxGetBBox=t.el.getBBox,M.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},M._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},M.remove=function(){if(!this.removed&&this.node.parentNode){this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind("raphael.*.*."+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape);for(var e in this)this[e]="function"==typeof this[e]?t._removedFactory(e):null;this.removed=!0}},M.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&"none"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,"string")){if(r==h&&"none"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(u),o={},l=0,f=s.length;l<f;l++)r=s[l],r in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],"function")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return f-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,"array")){for(o={},l=0,f=r.length;l<f;l++)o[r[l]]=this.attr(r[l]);return o}var p;null!=i&&(p={},p[r]=i),null==i&&t.is(r,"object")&&(p=r);for(var d in p)c("raphael.attr."+d+"."+this.id,this,p[d]);if(p){for(d in this.paper.customAttributes)if(this.paper.customAttributes[e](d)&&p[e](d)&&t.is(this.paper.customAttributes[d],"function")){var g=this.paper.customAttributes[d].apply(this,[].concat(p[d]));this.attrs[d]=p[d];for(var v in g)g[e](v)&&(p[v]=g[v])}p.text&&"text"==this.type&&(this.textpath.string=p.text),A(this,p)}return this},M.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},M.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},M.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},M.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},M.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(x,d),0!==+e?(this.attrs.blur=e,r.filter=i+p+f+".Blur(pixelradius="+(+e||1.5)+")",r.margin=t.format("-{0}px 0 0 -{0}px",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=N("shape");r.style.cssText=m,r.coordsize=b+p+b,r.coordorigin=e.coordorigin;var i=new E(r,e),n={fill:"none",stroke:"#000"};t&&(n.path=t),i.type="path",i.path=[],i.Path=d,A(i,n),e.canvas&&e.canvas.appendChild(r);var a=N("skew");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(d),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type="rect",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path(),s=a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type="ellipse",A(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path(),a=n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type="circle",A(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:"none"}),u=l.attrs,c=l.node,f=c.getElementsByTagName(h)[0];return u.src=r,l.X=u.x=i,l.Y=u.y=n,l.W=u.width=a,l.H=u.height=s,u.path=o,l.type="image",f.parentNode==c&&c.removeChild(f),f.rotate=!0,f.src=r,f.type="tile",l._.fillpos=[i,n],l._.fillsize=[a,s],c.appendChild(f),C(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=N("shape"),l=N("path"),h=N("textpath");i=i||0,n=n||0,s=s||"",l.v=t.format("m{0},{1}l{2},{1}",a(i*b),a(n*b),a(i*b)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=m,o.coordsize=b+p+b,o.coordorigin="0 0";var u=new E(o,e),c={fill:"#000",stroke:"none",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type="text",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,A(u,c),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var f=N("skew");return f.on=!0,o.appendChild(f),u.skew=f,u.transform(d),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+="px"),r==+r&&(r+="px"),i.width=e,i.height=r,i.clip="rect(0 "+e+" "+r+" 0)",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve("raphael.setViewBox",this,this._viewBox,[e,r,i,n,a]);var s=this.getSize(),o=s.width,l=s.height,h,u;return a&&(h=l/n,u=o/i,i*h<o&&(e-=(o-i*h)/2/h),n*u<l&&(r-=(l-n*u)/2/u)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:s},this.forEach(function(t){t.transform("...")}),this};var N;t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(".rvml","behavior:url(#default#VML)"):e.styleSheets[0].addRule(".rvml","behavior:url(#default#VML)");try{!e.namespaces.rvml&&e.namespaces.add("rvml","urn:schemas-microsoft-com:vml"),N=function(t){return e.createElement("<rvml:"+t+' class="rvml">')}}catch(r){N=function(t){return e.createElement("<"+t+' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')}}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n,a=e.width,s=e.x,o=e.y;if(!r)throw new Error("VML container not found.");var l=new t._Paper,h=l.canvas=t._g.doc.createElement("div"),u=h.style;return s=s||0,o=o||0,a=a||512,i=i||342,l.width=a,l.height=i,a==+a&&(a+="px"),i==+i&&(i+="px"),l.coordsize=1e3*b+p+1e3*b,l.coordorigin="0 0",l.span=t._g.doc.createElement("span"),l.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;",h.appendChild(l.span),u.cssText=t.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden",a,i),1==r?(t._g.doc.body.appendChild(h),u.left=s+"px",u.top=o+"px",u.position="absolute"):r.firstChild?r.insertBefore(h,r.firstChild):r.appendChild(h),l.renderfix=function(){},l},t.prototype.clear=function(){t.eve("raphael.clear",this),this.canvas.innerHTML=d,this.span=t._g.doc.createElement("span"),this.span.style.cssText="position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",this.canvas.appendChild(this.span),this.bottom=this.top=null},t.prototype.remove=function(){t.eve("raphael.remove",this),this.canvas.parentNode.removeChild(this.canvas);for(var e in this)this[e]="function"==typeof this[e]?t._removedFactory(e):null;return!0};var L=t.st;for(var z in M)M[e](z)&&!L[e](z)&&(L[z]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(z))}}.apply(e,i),!(void 0!==n&&(t.exports=n))}])});
},{}],16:[function(require,module,exports){
const raphael = require('raphael');
const jQuery = require("jquery");
window.$ = window.jQuery = jQuery;
require("bootstrap");

const w = 1050;
const h = 1160;
const rsr = raphael("map");

// var rsr = Raphael("map");
rsr.setViewBox(0, 0, w, h);
rsr.canvas.setAttribute('preserveAspectRatio', 'none');

var svg = document.querySelector("svg");
svg.removeAttribute("width");
svg.removeAttribute("height");

var regions = [];

var Bodensee = rsr.path("M 784.947,1166.041 781.047,1162.193 778.705,1160.45 777.705,1158.323 776.237,1155.182 773.197,1152.773 768.597,1152.842 766.737,1153.102 765.427,1152.262 763.517,1151.852 762.217,1150.023 760.307,1149.392 754.507,1149.791 751.067,1147.762 749.507,1145.102 746.656,1144.363 745.797,1143.031 743.387,1142.842 742.237,1143.823 738.417,1141.422 738.107,1139.422 736.647,1136.62 735.627,1134.653 727.947,1136.252 720.667,1135.212 713.317,1127.632 712.217,1121.052 709.607,1118.212 709.097,1112.302 700.987,1103.403 691.597,1104.781 684.656,1100.812 681.967,1100.903 677.825,1096.352 673.007,1094.943 668.237,1094.863 661.257,1096.712 655.865,1098.95 645.637,1092.99 641.857,1092.363 631.347,1085.252 625.927,1082.852 616.797,1072.273 613.777,1068.722 612.877,1059.87 600.587,1053.712 593.615,1049.113 584.447,1045.882 579.507,1038.791 574.237,1034.312 568.637,1032.041 561.817,1026.733 559.897,1023.023 552.027,1021.693 548.677,1027.432 554.987,1031.863 558.677,1037.552 564.217,1043.363 569.156,1046.523 577.297,1049.791 581.797,1054.943 585.687,1055.832 587.837,1055.062 591.017,1059.382 596.007,1062.041 598.557,1073.712 598.007,1075.531 597.897,1077.302 599.535,1077.91 600.737,1080.573 604.406,1082.352 608.737,1088.16 608.337,1091.031 610.575,1095.632 607.007,1097.332 601.637,1095.66 598.067,1096.041 597.847,1095.882 595.656,1094.212 592.647,1093.541 587.817,1094.472 584.687,1096.512 579.147,1094.512 578.217,1090.092 575.535,1086.212 568.677,1086.041 565.937,1087.472 553.257,1082.762 552.167,1075.193 555.127,1076.073 556.825,1078.12 557.597,1077.073 567.967,1084.773 568.697,1084.781 574.277,1084.882 572.477,1078.752 542.177,1062.863 536.906,1058.552 533.937,1058.113 533.337,1059.823 535.307,1061.87 538.607,1062.693 544.097,1068.552 543.547,1069.773 530.365,1062.142 528.337,1062.7 525.917,1061.262 521.357,1061.37 519.057,1063.262 519.057,1066.791 524.156,1069.332 529.767,1073.422 537.347,1076.073 540.745,1081.153 539.267,1084.863 535.365,1088.45 530.705,1090.552 529.656,1093.212 525.325,1093.983 518.587,1098.302 518.427,1099.403 514.357,1098.852 510.147,1101.291 503.727,1102.462 497.745,1100.642 497.517,1100.592 493.575,1099.66 492.757,1100.712 494.947,1102.312 499.727,1102.632 502.307,1105.613 508.397,1106.102 510.857,1104.281 513.057,1105.432 516.115,1102.552 523.087,1101.443 523.797,1100.073 528.627,1098.291 529.557,1096.031 531.197,1095.922 532.567,1093.541 535.587,1093.983 542.887,1091.212 545.075,1090.392 547.277,1091.382 553.527,1091.613 556.487,1091.052 561.597,1091.332 563.847,1093.332 565.325,1090.791 567.906,1091.403 569.387,1094.99 577.057,1096.052 580.297,1096.062 584.406,1097.062 587.807,1096.023 588.857,1095.24 590.177,1095.722 590.257,1095.752 590.317,1095.773 590.387,1095.802 591.987,1094.2 594.615,1094.262 597.687,1096.092 598.557,1100.182 599.547,1101.642 600.627,1103.233 607.317,1106.342 608.955,1106.182 610.267,1108.733 614.807,1111.062 628.156,1117.523 638.717,1123.863 648.927,1133.573 665.365,1142.823 664.397,1149.512 666.447,1155.541 676.587,1163.562 678.317,1166.332 683.677,1168.682 683.937,1169.903 682.507,1171.49 682.437,1173.922 685.777,1174.502 686.967,1176.823 693.285,1179.41 696.277,1182.573 696.267,1184.62 698.007,1186.291 703.187,1187.592 712.437,1186.382 717.647,1184.262 718.807,1181.95 724.107,1177.323 724.637,1176.852 725.837,1176.972 726.097,1179.41 731.527,1183.323 738.317,1183.312 741.567,1180.132 744.517,1180.323 749.047,1174.172 751.777,1174.632 748.737,1177.983 751.597,1183.312 752.797,1183.712 754.027,1180.962 757.607,1178.382 757.947,1176.233 754.357,1173.613 756.567,1171.582 759.437,1175.2 760.007,1178.302 763.205,1181.592 765.977,1176.972 764.297,1175.352 766.147,1175.863 769.607,1174.132 780.107,1173.892 783.767,1175.2 785.697,1173.502 786.447,1169.752 z");
Bodensee.attr({
    id: 'Bodensee',
    fill: '#C6ECFF',
    stroke: '#0878AB',
    "stroke-width": '2.38',
    "stroke-linejoin": 'bevel',
    'stroke-opacity': '1'
}).data('id', 'Bodensee');
var Background = rsr.set();
var rect_a = rsr.rect(-57.576, -74.958, 1156.006, 1301.001).attr({
    x: '-57.576',
    y: '-74.958',
    fill: '#FFFFFF',
    parent: 'Background',
    'stroke-width': '0',
    'stroke-opacity': '1'
}).data('id', 'rect_a');
var path_b = rsr.path("M895.447,1200.102l-0.89-0.8l-6.5,0.34l-1.71-2.101l-4.45-5.471h-0.439l-1.311-7.511l-0.12-0.42 l-5.42-1.399l-9.27,0.569l-1.021-1.119l-2.34-2.54l-0.72-4.36l-4.5-6.68l-0.07-2.87l-0.09-3.96l-0.15-6.75l-1.89-1.641l-1.852,1.92 l-2.271,4.301l-2.229-1.311l-3.318-0.399l-3.82,2.84l-1.54,0.609l-4.6-4.88l-2.66-1.529l-4.09,0.52l-6.11,5.591l-0.62-0.699 l-5.55-6.17l-10.72-0.271l-1.25-2.47l2.7-3.511l0.238-5.609l-1.738-5.71l-4.7-3.391l-5.87-1.16l-6.05,2.021l-0.762,1.16 l-1.851,2.84l-5.529,12.051l-0.229,0.489l-1.83,5.79l-0.6,1.91l1,2.13l2.34,1.74l3.897,3.85l1.5,3.71l-0.75,3.75l-1.93,1.7 l-3.66-1.311l-10.5,0.238l-3.46,1.73l-1.85-0.511l1.68,1.619l-2.771,4.619l-3.198-3.29l-0.57-3.1l-2.87-3.62l-2.21,2.03l3.59,2.62 l-0.34,2.147l-3.58,2.58l-1.229,2.75l-1.2-0.399l-2.86-5.328l3.04-3.353l-2.729-0.46l-4.53,6.15l-2.95-0.189l-3.25,3.181 l-6.79,0.011l-5.43-3.91l-0.26-2.439l-1.2-0.119l-0.53,0.471l-5.3,4.63l-1.16,2.312l-5.21,2.119l-9.25,1.21l-5.18-1.301l-1.74-1.67 l0.01-2.05l-2.989-3.16l-6.318-2.59l-1.19-2.32l-3.34-0.58l0.07-2.43l1.43-1.59l-0.26-1.221l-5.36-2.352l-1.729-2.771 l-10.143-8.021l-2.05-6.029l0.971-6.688l-16.438-9.25l-10.21-9.71l-10.562-6.34l-13.351-6.461l-4.54-2.329l-1.311-2.551 l-1.642,0.159l-6.688-3.108l-1.08-1.591l-5.42-0.841l-0.03-0.039l-0.11-0.021l-3.81-5.021l-1.32-0.479l-1.05,0.78l-3.399,1.039 l-4.108-1l-3.24-0.011l-7.67-1.061l-1.479-3.59l-2.58-0.61l-1.479,2.54l-2.25-2l-5.11-0.279l-2.96,0.562l-6.25-0.229l-2.198-0.989 l-2.189,0.819l-7.3,2.771l-3.021-0.44l-1.37,2.381l-1.64,0.109l-0.93,2.26l-4.83,1.78l-0.71,1.37l-6.972,1.108l-3.06,2.881 l-2.2-1.149l-2.46,1.819l-6.09-0.489l-2.58-2.979l-4.78-0.319l-2.188-1.601l0.819-1.051l3.939,0.932v-0.021l-0.75-6.359l-4.4-4.819 l-3.43-0.819l2.2-5.811l-1.79-0.131l-0.11-1.391l3.69-0.46l-0.13,2.351l2.88-0.279l0.398-0.471l0.4-0.039l0.96-1.109l-2.05-2.2 l0.96-1.391l-1.11-1.101l-7.14,0.699l-0.54-3.029l-3.58-1.931l-0.74,0.562l-0.06-0.041l-1.48,1.109l-3.21-1.068l2.48-2.761h-2.48 l-1.93-2.2l-2.75-1.101l1.12-0.729l0.8-0.521v-1.38l-1.66-3.591l-2.33,1.391v0.041l-0.8,0.479l0.01,3.069l-2.77,0.011l-0.54,0.521 h-0.25l-5.62,5.399l0.55,1.931l-0.95,2.899l9.19,1.91l0.7,2.89l3.63,1.552l-2.42,0.979l-0.11,0.229l-0.68,0.278l-2.601,5.392 l0.649,1.84h-1.22l-5.49-3.71l-4.4-3.3l-8.85-1.4l0.26-4.88l1.15-7.229l-6.46-3.29l-1.79-2.34l1.21-4.148l2.79-3.569l5.188-0.91 l-0.09-0.37l0.9-0.149l-0.71-2.898l-3.03-1.78v-1.938l-4.95-2.051l-4.67,1.949l-0.14,0.261l-0.63,0.261l-1.2,2l-1.87-1.399 l-1.38-5.66l0.95-1.8l-2.91-5.779l-6.33-3.29l-0.44-4.142l-2.88,0.979l-0.08,0.29l-0.688,0.239l-1.36,4.7l1.38,3.17l-0.26,4 l1.38,0.271l-2.26,3.78l-4.9,2.909l-3.31-3.989l1.21-4.841l-1.521-0.818l-0.688-3.439l0.87-0.59v-0.011l0.76-0.521l0.28-3.181 l-2.49-3.439l-0.21-0.068l-0.29-0.119l-4.59-0.471l-0.642,0.551l-0.14-0.021l-1.36,1.2l-1.438-1.439l-3.99,0.989l-1.1-3.028 l-2.49,0.011l-0.12,0.528l-0.63,0.012l-1.49,6.488l4.82,1.632l0.54,3.84l-3.19,0.897l-3.43-2.328l-7.55,3.078l-1.66-0.408 l-0.38,0.63l-0.37-0.091l-1.57,2.552l-1.658-1.45l-0.54,0.05l-1.36,0.26l-2.35,0.45l-2.052,1.12l-2.06-0.811l-0.66,0.551 l-0.09-0.03l-5.33,4.46l-1.88,4.98l-2.61,1.948l-2.71,5.682l0.852,3.579l1.39,0.541l-0.95,3.14l-2.41,0.24l-0.699,0.5l-0.051,0.01 l-8.46,6.14l-4.21,5l-0.13,1.803l2.2,0.39l2.36,4.12l-0.98,2.648l-2.229,0.881l-0.101,0.261l-0.63,0.25l-0.95,2.21l2.352,3.438 l4.108-0.027l4.83,5.34l6.04,1.199l0.79-0.421l2.351-1.25l-1.119,6.352l1.79,2.608l2.738-0.29l-0.55-0.358l1.3-0.142l-1.93-1.229 l1.37-1.392l-0.69-1.88l1.65,0.16l0.21,2.069l4.11,1.49l0.02-0.762l0.73,0.262l0.06-1.79l4.59-0.512l3.16,1.229l3.96-0.58 l0.12-0.409l0.64-0.091l0.54-1.8l-2.22-5.229l1.15-0.75l0.56,1.649l2.21,0.95l-0.12-0.881l0.87,0.381l-0.399-3.222l7.021-2.528 l0.55,2.479l4.12,1.92l4.79-2.66l0.061-0.108l0.699-0.392l1.41-2.318l2.33,0.46l0.84,4.271l2.34,0.96l4.69,4.25l-2.062,6.13 l-4.81,1l-0.979-1.238l0.329-0.87l1.78-0.71v-0.2l0.76-0.3l0.131-2.352l-2.189-1.778l-0.41,0.79l-0.37-0.29l-1.09,2.068 l-2.45,2.642l1.2,8.14l2.08,4.812l-0.811,3.181l-4.899,3.899l-1.86,2.209l-6.01-1.42l1.67-5.29l1.24-0.448l-0.101-0.182 l0.859-0.311l-1.38-2.75l-2.061-0.13l-0.979-3.171l-6.58-1.209l-0.42-2.2l-7-1.2l-0.07,0.61l-0.68-0.12l-0.48,4.37l-1.75,0.398 v0.33l-0.75,0.17l0.021,1.92l-4.311,2.029l-3.431-0.8l-0.45,0.561l-0.3-0.068l-4.42,5.56l-3.28,0.631l0.08,0.329l-0.83,0.16 l1.41,5.79l2.34,3.021l6.98-1.841l1.51,3.028l-1.54,1.46l-3.43,0.021l-0.562,0.488h-0.188l-1.71,1.521l-3.83,0.8l-8.46,2.96 l-9.351-5.18l-3.431-0.53l-0.29,0.563l-0.43-0.07l-2.66,5.09l-6.03-1.64l-11.909-0.59l-5.25-5.75l-3.851-2.32l-1.8-2.47l0.76-7.32 l-5.37-2.58l-5.738,1.3l-1.261-2.89l-7.101,1.45l-0.33,0.41l-0.37,0.079l-2.37,3.028l-0.88,0.11l-0.979-2.2l-1.12-4.41l-4.53-1.188 l-3.148,1.06l-0.182,0.32l-0.52,0.18l-3.65,6.642l-2.96,1.358l-0.2,0.262l-0.5,0.229l-2.05,2.87l-1.188,0.41l-3.432-0.932 l-4.75,2.961v0.061l-0.699,0.42l-0.21,2.399l-7.149-0.17l-0.48,0.489l-0.21-0.011l-3.25,3.22l-0.08,5.11l-2.148,3.46l-4.642,0.561 l-3.188-3.409l-3.12,0.858l-0.61,0.46l-0.079,0.021l-5.33,4.02l-8.551,1.48l-4.96-2.563l-7.659,0.65l-6.449-1.57l-0.602,0.5 l-0.06-0.02l-2.021,1.68l-0.88,4.17l-1.14,0.642l-3.44-1.609l-4.1,0.33l-2.891-1.341l-2.131-5.489l1.602-3.62l-1.15-4.12 l-3.89-4.51l-0.01-0.13l-0.392-0.229l-2.08-1.261l-8.77,0.13l-0.65,0.45l-3.279,2.229l-4.79-0.199l-1.119-1.641l-2.75-0.791 l-1.771,0.44l-0.08,0.35l-0.56,0.142l-2.32,8.688l-2.77,1.95l-0.021,0.061l-0.609,0.432l-1.689,3.56l-11.11,3.62l-0.42,0.42 l-0.2,0.062l-1.55,1.511l-11.58,1.688l-7.188,4.261l-3.812,0.2l-6.05-1.689l-2.12-4.801l-3.58-1.181l-2.39-3.688l-2.78-2.57 l0.29-0.739l3.63,1.689l3.79-2.41l6.021,0.45l-0.102-0.53l0.71,0.051l-0.3-1.648l1.29-1.063l0.97,1.771l0.381-0.9l0.239,0.41 l1.182-2.779l-1.521-0.938l-1.569-4.11l-2.909-1.75l2.3-2.108l1.819-2.261l1.619-0.489l0.33-0.399l0.29-0.09l1.33-1.682 l-4.08,0.619l-0.38,0.45l-0.24,0.04l-2.09,2.53l-1.62,0.5l-7.159-2.222l-0.591,0.5l-0.01-0.011l-1.359,1.13l-0.229,1.66l-6.38,6.12 l-5.36-0.18l-0.08-3.721l-4.818-1.989l0.02-0.04l0.01-0.04l1.21-3.12l-0.34-4.41l-5.71-5l-2.898-9.061l-7.78-6.212l-4.75-5.157 l-2.97-5.052l0.119-8.148l-2.29-5.75l0.21-3.182l4.54-4l0.591-0.521l5.27-5.21l1.13-5.68l-0.358-4.28l-0.062-0.34l0.03-0.012 l-0.07-0.318l-5.25-13.29l-0.52-5.11l6.108-19.31l4.25-7.95l1.12-6.93l-2.949-10.71l1.761-5.75l4.779-2.94l0.141-0.271l0.449-0.271 l2.399-4.609l-1.17-11.438l1.44-4.72l6.88-8.271l4.81-8.51l0.61-4.852l-3.91-10.561l-13.75-16.729l1.75-10.109l-1.78-14.33 l3.86-7.939c0,0-0.46-4.369-0.67-6.369v-0.012c-0.062-0.159-0.07-0.31-0.08-0.438c-0.19-1.71-0.08,0.148-0.15-0.722 c-0.079-0.869-0.29-3.479-0.29-3.479l1.25-1.62l2.921-1.72l0.351-0.472l0.25-0.148l3.1-4.189l-0.659-6.341l0.761-3.739 l8.938-11.488l5.521-13.04l6.56-5.46l0.04-0.15l0.57-0.479l4.359-16.271l-0.021,0.011l0.01-0.021l0.062-0.5l3.27-12.07l0.67-9.54 l2.99-4.188l10.53-4.369l0.56-0.62l0.061-0.03l3-3.35l0.479-4.44l-3.899-17.88l-0.561-8.97l1.13-7.189l10.13-27.37l0.721-15.301 l8.771-5.43l0.18-0.42l0.44-0.271l3.771-8.341l-1.66-8.12l1.239-10.1l-2.26-10.59l1.15-6.65l8.47-12.41l3.68-13.17l5.36-1.72 l10.521-6.5l0.539-0.649l0.102-0.069c0,0,4.08-4.909,8.938-10.761c4.86-5.851,10.511-12.641,13.631-16.391 c0.189-0.229,0.359-0.449,0.529-0.649v-0.141l2.601-4.45l-0.801-6.89l1.23-7.21l3.02-1.771l9.11,1.119l4.72-3.369l0.062-0.311 l0.608-0.439l1.86-9.971l4.17-1.51l6.601,1.159l5.979-4.21l0.39-0.55l0.29-0.2l6.892-9.609l1.71-9.96l6.909-20.511l8.529-15.569 l8.16-11.811l5.59-11.149l12.511-4.271l1.881-1.471l-0.102-0.17l0.062-0.05l-0.9-1.41l-0.45-0.609l-2.358-3.279l-1.36-0.021 l-4.729,3.62l-1.819-0.26l-2.351-1.511l-1.181-1.851l-0.819-0.05l-2.989-0.17l-4.591-0.189l-1.229-0.141l-2.37-0.26l-4.68-0.78 l-7.95-2.529l-2.34-1.15l-12.33-6.061l-1.66-3.06l-4.26-3.561l-4.74-2.32l-6.45-1.899l-1.688-1.609l-5.42-2.561l-2.142,0.57 l-4.05,1.09l-2.189-4.04l-2.909-3.63l-1.46-1.37l-1.381-0.369l-0.891-0.229l-2.67-4.091l-0.899-0.351l-2.399,0.53l-2.57,4.569 l-2.63,0.75l-5.729-0.311l-3.261-0.159l-3.779,1.069l-3.8,3.66l-2.051-0.479l-3.239-3.761l-5.189-1.87l-1.271-0.47l-9.109-8.21 l-1.94-0.03l-1.739,2.91l-3.101,1.3l-1.851,2.681l-2.42,1.891l-2.971,0.63l-1.27,0.05l-5.562,0.21l-1.77-4.51l-1.7-0.26 l-1.609,0.89l-2.729,0.08l-4.65-2.2l-0.6,3.7l-3.66,1.17l-3.189,1.011l-3.529-0.609l-3.54-1.711L96,413.509l-1.812-0.14 l-2.369-2.271l-1.189-6.431l-1.229-1.47l-8.95-4.601l-3.649,0.3l-4.109,1.319l-4.439-0.279l-5.32-3.54l-3.729-3.619l-1.271-1.642 l-0.76-0.97l-0.65-2.93l-4.27-7.23l-2.61-0.93l-2.359-4.63l-2.38-1.82l-0.771-2.13l0.58-1.57l3.21-2l1.51-1.899l-1.93-1.93 l-5.24-0.609l0.939-3.36l-0.561-1.47l-1.14-0.351l-9.091,1.409l-4.63,0.721l-1.021-1.12l0.359-1.01l1.95-1.341l-0.171-0.529 l-0.84-2.521l1.17-2.91l-1.79,0.11l-3.01,0.189l-16.1,4.409l-4.261,1.16l-0.671,0.939l0.062,3.221l-1.73,4.38l0.2,2.92l-2.08,2.46 l-20-1.29l-0.91,0.771l-2.409,2.01l-0.091,0.21v840.539h37.29h738.351h144.04l1.119-1.859l-1.04-3.479L895.447,1200.102z").attr({
    fill: '#E0E0E0',
    parent: 'Background',
    'stroke-width': '0',
    'stroke-opacity': '1'
}).data('id', 'path_b');
var path_c = rsr.path("M 1063.267,1144.113 1061.177,1144.802 1060.297,1145.262 1056.987,1147.062 1055.097,1151.733 1052.417,1158.323 1050.337,1159.45 1046.237,1158.932 1036.967,1159.66 1031.887,1159.142 1025.237,1156.281 1018.417,1151.7 1014.797,1149.291 1013.897,1147.95 1017.297,1143.302 1017.387,1140.962 1020.557,1136.443 1019.535,1134.422 1009.927,1134.483 1006.615,1135.642 1005.745,1137.781 1006.017,1142.052 1009.245,1145.281 1009.677,1145.281 1011.365,1148.642 1009.027,1159.87 1006.947,1166.762 1005.057,1173.023 1004.967,1175.153 1006.067,1177.712 1008.447,1183.212 1014.877,1186.87 1016.337,1190.222 1015.767,1201.082 1019.447,1206.142 1019.567,1207.91 1017.057,1210.852 1014.797,1212.031 1065.427,1212.031 1065.427,1144.682 z").attr({
    fill: '#E0E0E0',
    parent: 'Background',
    'stroke-width': '0',
    'stroke-opacity': '1'
}).data('id', 'path_c');
Background.attr({'id': 'Background', 'name': 'Background'});
var Kreise = rsr.set();
var kreis08435 = rsr.path("M 575.543,1010.523 579.262,1007.773 579.271,1007.513 591.601,1008.733 592.213,1010.443 594.24,1010.173 597.932,1007.031 600.293,1010.463 604.753,1008.159 607.24,1003.363 609.722,1002.103 616.093,1004.49 618.593,998.699 619.803,998.433 619.641,996.393 616.231,994.659 615.803,992.949 623.571,990.053 626.151,990.673 626.963,996.909 628.325,999.073 631.408,999.24 630.963,1001.119 637.722,1002.079 642.861,997.903 650.003,1001.031 649.658,1002.903 662.908,1015.829 663.061,1018.483 666.472,1018.829 668.432,1021.323 671.071,1021.943 670.311,1019.619 672.213,1020.133 672.182,1020.24 676.793,1021.813 678.673,1019.173 684.561,1017.653 684.821,1020.473 682.231,1022.173 681.441,1025.093 688.198,1024.522 689.617,1026.409 687.698,1035.673 681.191,1040.159 680.24,1043.573 682.101,1043.753 684.811,1050.723 688.543,1051.853 691.311,1047.673 697.673,1049.753 697.043,1052.843 702.423,1053.813 700.071,1060.753 701.262,1063.409 703.463,1062.653 710.361,1064.082 712.075,1062.713 723.213,1063.893 724.762,1061.693 739.343,1071.633 739.651,1074.233 741.617,1074.24 743.611,1079.403 745.321,1078.031 753.512,1076.99 752.075,1083.99 755.472,1084.793 755.722,1087.723 756.811,1087.903 758.031,1086.803 760.222,1086.713 761.575,1088.443 763.722,1088.449 766.101,1085.332 777.151,1088.253 778.351,1095.103 781.075,1096.513 782.722,1102.433 778.053,1109.403 769.851,1113.022 767.682,1110.853 763.682,1111.753 762.281,1115.103 765.423,1122.272 765.321,1122.49 765.262,1122.603 763.325,1125.563 761.271,1125.193 759.325,1122.531 755.271,1122.823 754.948,1123.272 754.321,1123.323 752.713,1125.582 748.503,1126.633 748.575,1126.863 747.553,1127.123 749.641,1132.883 749.561,1133.053 746.923,1131.763 744.901,1131.903 744.601,1132.343 743.948,1132.393 740.472,1137.553 738.401,1135.723 735.861,1135.323 735.481,1134.603 727.803,1136.199 720.531,1135.153 713.191,1127.582 712.075,1120.99 709.472,1118.159 708.963,1112.24 700.851,1103.343 691.463,1104.723 684.521,1100.763 681.825,1100.853 677.691,1096.293 672.867,1094.893 668.101,1094.813 661.117,1096.653 655.731,1098.893 645.503,1092.933 641.722,1092.313 631.213,1085.193 625.793,1082.803 616.651,1072.213 613.641,1068.673 612.74,1059.823 600.441,1053.653 593.481,1049.053 584.311,1045.823 579.367,1038.74 574.101,1034.263 568.49,1031.983 561.682,1026.673 561.673,1026.643 564.658,1023.763 562.883,1020.723 564.391,1017.553 563.303,1014.923 560.553,1012.443 560.423,1007.193 559.191,1003.74 560.698,1001.813 565.383,1002.503 567.99,1007.063 571.012,1010.103 574.031,1009.143 z").attr({
    id: 'kreis08435',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08435'});
regions.push(kreis08435);

var kreis08436 = rsr.path("M 672.617,1020.24 672.641,1016.383 670.941,1014.653 668.843,1006.093 669.641,1000.793 663.601,999.223 661.321,990.823 669.908,979.823 667.472,973.463 669.021,971.593 670.99,973.483 673.043,971.329 671.361,966.963 669.981,966.513 671.553,961.223 674.198,961.24 674.803,962.619 679.321,962.483 676.521,958.933 679.463,956.303 676.731,950.823 682.117,953.063 686.043,952.473 688.213,949.843 688.803,951.223 697.182,952.213 705.963,940.449 708.303,937.043 709.99,941.253 712.611,943.923 713.793,948.733 716.762,950.023 720.321,945.523 720.472,947.683 723.281,948.363 722.682,940.133 719.432,938.673 719.441,937.293 720.883,936.363 720.271,930.013 723.843,931.74 724.151,934.843 728.343,935.199 728.641,932.063 733.503,931.053 736.762,931.073 737.111,930.983 739.441,939.923 742.633,948.949 744.061,949.119 746.231,946.659 747.762,948.553 750.843,948.853 755.731,944.253 762.811,948.353 762.682,944.653 765.851,940.593 768.611,940.781 769.941,945.763 771.651,946.713 776.043,942.281 782.423,944.659 792.923,947.253 790.867,948.449 790.053,953.293 793.972,953.173 798.408,955.863 801.543,951.043 804.503,953.113 804.793,951.403 809.641,951.463 810.213,954.883 813.803,954.313 820.351,949.863 822.753,942.603 836.448,940.113 840.722,943.253 842.361,948.853 851.633,952.273 855.691,950.281 859.731,948.949 860.271,945.043 862.262,944.949 863.633,949.443 869.561,947.369 869.448,955.593 878.401,958.803 884.173,955.619 889.281,944.653 896.432,942.103 901.24,944.763 897.383,946.503 897.351,946.619 896.361,947.073 894.561,953.893 896.963,959.053 903.408,963.343 901.641,970.773 903.762,972.949 900.713,978.369 901.117,984.563 899.521,988.463 901.651,989.433 901.611,992.199 900.151,992.543 899.981,992.893 899.117,993.093 897.503,996.473 893.271,996.031 893.472,996.713 892.253,996.579 894.198,1003.119 895.198,1002.513 895.222,1002.573 901.24,998.933 901.021,1002.781 897.713,1007.369 898.908,1008.159 899.641,1007.423 899.932,1007.613 902.361,1005.133 903.432,1007.613 901.361,1009.74 903.811,1011.653 908.213,1019.329 910.021,1019.643 912.003,1024.781 907.463,1023.903 906.731,1024.503 906.432,1024.443 903.311,1026.99 905.762,1028.903 905.367,1029.781 899.031,1028.753 898.325,1029.343 898.012,1029.293 889.391,1036.623 888.923,1039.103 894.271,1041.323 894.222,1044.753 905.561,1050.483 904.053,1060.403 905.713,1062.903 904.512,1070.063 906.503,1073.353 911.811,1077.463 912.867,1080.563 909.74,1084.272 909.811,1090.623 904.611,1095.423 900.408,1094.603 897.811,1092.24 898.053,1093.893 896.793,1092.753 897.49,1097.563 894.811,1101.113 892.575,1109.053 892.031,1109.281 891.932,1104.593 891.673,1104.313 892.158,1099.949 887.383,1088.843 884.311,1088.803 883.908,1089.323 883.293,1089.313 882.101,1090.853 877.641,1091.031 877.867,1086.063 868.093,1087.373 867.722,1087.793 867.075,1087.883 858.963,1097.213 859.253,1100.031 856.713,1102.363 843.24,1100.699 830.031,1095.573 827.173,1091.513 818.521,1090.199 812.781,1092.893 812.771,1092.943 811.803,1093.403 810.191,1100.563 806.923,1103.653 804.071,1103.073 799.883,1104.909 799.941,1104.963 798.908,1105.409 800.861,1107.143 799.617,1111.582 795.303,1113.699 795.271,1113.733 794.325,1114.193 785.762,1122.659 786.071,1124.49 784.571,1126.093 782.423,1125.563 784.158,1120.443 783.198,1120.933 781.191,1121.949 780.441,1120.403 779.771,1121.49 779.481,1120.893 777.061,1124.823 773.003,1125.303 772.722,1125.713 772.043,1125.793 770.932,1127.443 767.448,1126.303 766.071,1121.653 765.658,1121.74 765.423,1122.272 762.281,1115.103 763.682,1111.753 767.682,1110.853 769.851,1113.022 778.053,1109.403 782.722,1102.433 781.075,1096.513 778.351,1095.103 777.151,1088.253 766.101,1085.332 763.722,1088.449 761.575,1088.443 760.222,1086.713 758.031,1086.803 756.811,1087.903 755.722,1087.723 755.472,1084.793 752.075,1083.99 753.512,1076.99 745.321,1078.031 743.611,1079.403 741.617,1074.24 739.651,1074.233 739.343,1071.633 724.762,1061.693 723.213,1063.893 712.075,1062.713 710.361,1064.082 703.463,1062.653 701.262,1063.409 700.071,1060.753 702.423,1053.813 697.043,1052.843 697.673,1049.753 691.311,1047.673 688.543,1051.853 684.811,1050.723 682.101,1043.753 680.24,1043.573 681.191,1040.159 687.698,1035.673 689.617,1026.409 688.198,1024.522 681.441,1025.093 682.231,1022.173 684.821,1020.473 684.561,1017.653 678.673,1019.173 676.793,1021.813 672.182,1020.24 672.213,1020.133 z").attr({
    id: 'kreis08436',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08436'});
regions.push(kreis08436);

var kreis08426 = rsr.path("M 913.883,895.933 914.182,905.433 909.053,916.233 911.601,922.949 906.531,929.99 906.803,934.363 905.043,938.193 905.111,943.843 902.383,944.253 902.713,944.093 901.24,944.763 896.432,942.103 889.281,944.653 884.173,955.619 878.401,958.803 869.448,955.593 869.561,947.369 863.633,949.443 862.262,944.949 860.271,945.043 859.731,948.949 855.691,950.281 851.633,952.273 842.361,948.853 840.722,943.253 836.448,940.113 822.753,942.603 820.351,949.863 813.803,954.313 810.213,954.883 809.641,951.463 804.793,951.403 804.503,953.113 801.543,951.043 798.408,955.863 793.972,953.173 790.053,953.293 790.867,948.449 792.923,947.253 782.423,944.659 776.043,942.281 771.651,946.713 769.941,945.763 768.611,940.781 765.851,940.593 762.682,944.653 762.811,948.353 755.731,944.253 750.843,948.853 747.762,948.553 746.231,946.659 744.061,949.119 742.633,948.949 739.441,939.923 737.111,930.983 736.293,927.813 731.972,922.153 729.061,920.753 725.543,911.563 714.851,907.281 711.311,900.909 706.343,900.713 704.543,896.949 702.682,895.113 694.713,896.449 687.432,894.523 686.061,892.031 674.271,887.003 673.691,882.023 668.093,883.713 668.963,886.193 663.698,888.043 652.343,884.903 653.963,880.99 650.981,878.49 644.463,877.079 641.408,868.073 631.463,864.003 632.432,859.043 623.851,859.781 623.253,857.573 625.408,856.813 624.972,854.49 631.781,854.513 635.99,852.483 636.963,844.603 642.117,843.073 641.981,835.449 639.99,834.073 641.408,826.733 638.923,825.673 638.771,822.409 645.641,821.673 647.821,817.153 647.658,816.053 651.867,815.133 651.883,815.133 658.24,822.463 658.908,825.909 665.651,835.329 668.553,835.903 673.408,833.031 677.561,833.74 676.99,836.49 681.151,836.383 682.561,831.973 689.771,829.943 692.521,833.273 691.682,835.483 698.071,832.343 696.561,830.543 702.111,828.503 701.441,825.193 699.923,824.763 701.593,823.263 699.111,821.031 698.811,818.199 701.901,818.223 703.771,820.713 710.021,823.409 711.021,829.49 716.481,833.829 717.053,838.523 721.262,838.723 729.521,837.073 729.722,833.653 732.043,834.273 733.781,830.863 743.441,834.693 744.182,839.173 740.575,839.313 740.74,840.693 745.043,842.443 749.423,841.263 753.321,845.323 754.658,849.973 753.075,854.313 755.231,855.273 762.793,845.24 768.391,844.353 769.031,847.173 772.923,845.329 773.053,848.313 778.981,848.031 783.213,845.153 783.401,842.943 780.601,840.933 777.003,841.343 777.012,839.793 783.117,837.973 781.901,832.393 785.682,831.323 785.851,830.103 789.908,828.433 789.481,821.593 798.601,818.699 796.253,815.579 800.463,815.463 799.281,811.579 811.633,808.013 812.383,810.949 815.641,811.313 816.481,805.423 818.031,805.273 825.003,796.963 828.101,788.773 833.093,788.99 835.698,792.723 840.821,792.013 842.601,800.593 860.843,800.653 859.867,802.949 862.691,803.923 863.343,813.263 870.691,811.199 873.253,818.693 877.803,817.983 879.932,820.49 879.111,823.853 875.981,825.409 876.408,826.963 879.071,826.829 880.472,837.553 886.867,835.323 889.651,838.949 881.003,843.473 882.611,851.383 878.521,854.923 878.043,857.403 870.231,858.233 883.111,862.933 885.481,860.143 891.593,858.193 892.682,855.281 898.191,852.273 903.531,870.773 907.173,874.909 911.343,877.133 912.948,883.829 911.571,894.963 z").attr({
    id: 'kreis08426',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08426'});
regions.push(kreis08426);

var kreis08437 = rsr.path("M 524.231,915.329 523.963,917.949 520.923,917.403 522.303,911.053 516.093,909.403 516.503,903.463 519.948,902.773 520.367,904.699 528.512,905.253 533.901,903.733 536.803,897.943 531.003,890.903 524.923,887.733 522.173,879.781 522.293,879.723 520.771,875.579 522.151,873.793 532.101,871.303 533.49,867.023 540.553,854.053 548.99,851.983 558.253,857.369 565.861,859.449 574.158,855.733 577.198,861.119 581.481,860.99 585.771,863.073 589.351,866.393 590.191,865.281 588.811,862.24 592.003,860.869 592.281,857.153 595.325,857.293 595.061,853.423 597.843,848.603 599.571,848.053 597.093,844.323 594.867,843.903 594.883,842.523 598.198,842.393 595.575,839.903 595.448,835.353 598.231,829.829 595.325,826.383 579.423,819.579 579.012,817.369 574.021,815.853 573.481,809.079 580.843,803.579 586.658,803.723 592.49,800.843 598.867,799.613 599.303,794.369 599.311,794.253 601.658,794.369 603.472,791.613 609.281,793.843 610.367,800.613 611.343,801.443 615.512,799.653 617.861,800.353 618.141,801.043 622.722,799.823 627.031,795.143 625.658,790.579 627.867,792.383 633.843,792.543 633.963,796.543 639.481,802.503 639.611,805.543 645.843,805.983 648.182,810.823 652.463,814.153 651.617,814.843 651.867,815.133 647.658,816.053 647.821,817.153 645.641,821.673 638.771,822.409 638.923,825.673 641.408,826.733 639.99,834.073 641.981,835.449 642.117,843.073 636.963,844.603 635.99,852.483 631.781,854.513 624.972,854.49 625.408,856.813 623.253,857.573 623.851,859.781 632.432,859.043 631.463,864.003 641.408,868.073 644.463,877.079 650.981,878.49 653.963,880.99 652.343,884.903 663.698,888.043 668.963,886.193 668.093,883.713 673.691,882.023 674.271,887.003 686.061,892.031 687.432,894.523 694.713,896.449 702.682,895.113 704.543,896.949 706.343,900.713 711.311,900.909 714.851,907.281 725.543,911.563 729.061,920.753 731.972,922.153 736.293,927.813 737.111,930.983 736.762,931.073 733.503,931.053 728.641,932.063 728.343,935.199 724.151,934.843 723.843,931.74 720.271,930.013 720.883,936.363 719.441,937.293 719.432,938.673 722.682,940.133 723.281,948.363 720.472,947.683 720.321,945.523 716.762,950.023 713.793,948.733 712.611,943.923 709.99,941.253 708.303,937.043 705.963,940.449 697.182,952.213 688.803,951.223 688.213,949.843 686.043,952.473 682.117,953.063 676.731,950.823 679.463,956.303 676.521,958.933 679.321,962.483 674.803,962.619 674.198,961.24 671.553,961.223 669.981,966.513 671.361,966.963 673.043,971.329 670.99,973.483 669.021,971.593 667.472,973.463 669.908,979.823 661.321,990.823 663.601,999.223 669.641,1000.793 668.843,1006.093 670.941,1014.653 672.641,1016.383 672.617,1020.24 672.213,1020.133 670.311,1019.619 671.071,1021.943 668.432,1021.323 666.472,1018.829 663.061,1018.483 662.908,1015.829 649.658,1002.903 650.003,1001.031 642.861,997.903 637.722,1002.079 630.963,1001.119 631.408,999.24 628.325,999.073 626.963,996.909 626.151,990.673 623.571,990.053 615.803,992.949 616.231,994.659 619.641,996.393 619.803,998.433 618.593,998.699 616.093,1004.49 609.722,1002.103 607.24,1003.363 604.753,1008.159 600.293,1010.463 597.932,1007.031 594.24,1010.173 592.213,1010.443 591.601,1008.733 579.271,1007.513 579.408,1004.183 576.383,1001.693 579.825,1000.043 582.713,1001.433 582.713,1000.323 580.521,998.531 583.408,996.183 585.762,993.983 586.191,984.463 586.883,983.633 585.512,982.943 579.722,982.369 574.771,978.923 572.021,978.363 569.553,974.773 561.843,973.24 558.673,973.793 560.472,966.199 564.472,961.933 561.031,960.823 553.031,964.263 541.74,963.573 541.731,963.573 541.601,960.943 544.075,958.463 541.74,955.699 544.093,950.733 542.158,949.073 541.198,944.24 544.367,942.449 543.543,937.409 539.821,934.103 539.963,931.893 542.173,930.513 539.972,919.613 530.031,915.74 528.101,912.573 525.891,912.983 z").attr({
    id: 'kreis08437',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08437'});
regions.push(kreis08437);

var kreis08415 = rsr.path("M 578.031,743.813 577.481,740.909 579.851,740.093 578.74,737.74 582.222,734.023 584.311,734.023 585.851,729.329 578.213,725.182 575.99,721.733 577.101,720.49 575.303,718.973 578.932,712.762 583.253,707.803 581.441,706.829 582.981,702.003 577.141,699.653 580.071,694.823 588.158,690.563 582.191,682.949 583.311,676.063 588.753,673.449 590.981,675.943 594.053,674.281 595.043,667.113 593.793,662.829 586.963,664.613 586.825,660.053 582.803,656.053 579.031,653.829 579.325,645.693 580.731,642.384 580.883,637.553 580.883,637.49 582.321,637.403 587.463,635.369 587.463,635.323 597.111,635.723 598.503,638.593 604.99,636.119 605.651,638.563 605.141,641.199 602.512,641.973 602.561,643.634 605.682,645.903 605.781,651.531 611.851,654.579 616.053,648.579 621.061,651.964 620.948,653.182 626.408,655.012 634.271,654.579 635.74,650.363 640.325,647.449 643.561,649.843 643.321,653.182 639.851,656.031 643.24,658.313 641.213,663.932 643.658,664.053 644.432,666.602 647.222,666.99 649.521,663.143 656.698,666.044 659.253,669.813 665.043,669.673 667.101,671.403 672.303,668.273 673.861,668.829 679.173,665.49 682.231,666.781 685.932,664.384 690.222,665.233 690.821,667.393 699.093,671.863 698.575,673.563 695.351,673.369 695.343,675.093 690.571,679.363 693.303,680.602 693.133,679.602 695.821,678.073 698.722,678.313 698.173,676.983 702.191,676.512 701.383,679.762 702.601,680.602 704.111,679.449 703.281,678.563 705.133,677.909 704.151,673.714 705.432,673.773 706.031,676.044 711.972,680.003 714.003,676.923 712.731,675.262 712.793,673.884 717.543,673.079 723.575,670.044 723.867,668.159 729.481,667.659 730.053,668.903 729.075,672.464 730.321,674.544 731.803,680.634 731.222,683.943 728.561,685.432 731.472,687.531 729.481,692.199 731.281,693.602 732.361,698.432 739.158,700.829 743.803,712.193 746.908,723.119 749.271,723.553 749.361,728.24 745.441,731.659 744.213,729.031 742.821,729.023 743.325,734.823 741.908,737.983 734.981,736.544 728.981,738.573 728.691,739.813 731.722,744.113 729.071,745.329 729.191,746.99 735.021,747.723 735.713,749.384 731.093,753.079 732.281,760.949 728.325,768.932 728.593,771.693 721.111,769.423 718.843,775.483 713.432,776.133 713.133,778.063 717.003,781.133 720.321,782.393 720.691,788.329 713.321,791.183 711.641,793.103 704.271,795.119 704.521,800.363 710.891,800.683 708.793,803.983 712.111,804.143 709.463,806.883 710.151,808.273 698.325,813.713 698.811,818.199 699.111,821.031 701.593,823.263 699.923,824.763 701.441,825.193 702.111,828.503 696.561,830.543 698.071,832.343 691.682,835.483 692.521,833.273 689.771,829.943 682.561,831.973 681.151,836.383 676.99,836.49 677.561,833.74 673.408,833.031 668.553,835.903 665.651,835.329 658.908,825.909 658.24,822.463 651.883,815.133 651.867,815.133 651.617,814.843 652.463,814.153 648.182,810.823 645.843,805.983 639.611,805.543 639.481,802.503 633.963,796.543 633.843,792.543 627.867,792.383 625.658,790.579 627.031,795.143 622.722,799.823 618.141,801.043 617.861,800.353 615.512,799.653 611.343,801.443 610.367,800.613 609.281,793.843 603.472,791.613 601.658,794.369 599.311,794.253 599.021,794.233 596.401,789.803 593.641,783.863 590.867,782.199 590.321,779.159 606.691,781.281 608.923,775.763 608.383,771.343 611.321,765.563 608.117,767.343 606.722,768.852 600.071,766.49 599.101,764.003 595.49,764.134 592.593,760.262 593.561,757.923 596.213,755.852 596.771,752.262 581.771,749.893 580.941,749.199 579.825,749.193 579.691,749.214 579.281,745.602 576.781,745.884 575.673,744.363 z").attr({
    id: 'kreis08415',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08415'});
regions.push(kreis08415);

var kreis08425 = rsr.path("M 746.441,670.159 747.883,670.829 747.932,671.659 751.851,675.723 752.012,677.003 754.571,677.682 753.698,675.193 757.99,674.893 758.762,676.063 760.941,675.909 763.512,678.199 764.463,677.932 762.311,674.884 766.825,668.794 766.231,666.74 770.691,666.781 770.99,664.803 775.401,664.343 775.481,661.693 774.281,658.753 777.093,657.352 776.762,656.464 777.941,655.923 780.99,657.329 782.963,655.753 785.908,656.159 789.133,657.523 790.423,657.423 789.141,656.579 791.061,654.659 793.182,654.964 793.883,657.512 800.281,658.294 800.722,659.134 805.861,658.464 807.658,656.773 806.793,654.829 809.24,655.409 810.543,653.932 812.861,650.369 811.948,647.544 813.173,648.113 814.383,644.973 818.158,646.281 821.682,645.223 820.262,643.273 824.325,643.262 829.173,635.173 833.691,630.699 829.948,630.159 831.158,626.973 838.321,626.723 838.343,625.119 848.367,622.102 848.383,622.063 851.093,623.159 849.531,624.673 849.932,625.909 852.173,625.943 853.391,628.303 857.271,630.829 854.682,637.012 855.061,639.909 864.281,639.343 864.753,635.073 873.682,635.74 879.691,634.852 883.101,640.693 887.932,644.634 898.891,648.503 901.771,652.134 904.722,659.352 908.367,658.159 917.24,661.74 917.698,658.852 921.303,660.153 922.111,662.093 924.762,662.273 928.173,658.323 928.543,660.813 927.682,663.012 930.271,666.363 933.472,666.964 937.012,671.983 937.311,679.579 944.093,682.031 946.043,681.74 946.053,681.773 942.575,682.932 942.867,683.182 941.531,683.634 942.141,684.134 945.932,684.031 946.49,686.852 945.543,687.281 946.262,690.869 944.948,692.323 939.753,692.393 927.448,698.384 927.383,698.593 926.408,699.063 923.981,705.949 910.981,708.403 906.271,698.733 902.843,697.24 902.133,698.063 901.821,697.932 895.553,705.153 887.311,708.073 880.49,706.262 879.633,706.99 879.481,706.949 877.698,708.449 876.781,709.223 876.771,709.233 873.963,707.369 873.391,704.384 860.691,704.99 860.111,702.329 858.213,702.973 858.601,707.281 855.043,707.119 856.213,711.329 852.571,713.281 850.601,710.613 846.981,710.723 837.383,716.964 835.851,724.393 839.448,725.869 841.843,721.699 846.861,720.223 847.321,723.153 842.423,724.031 843.071,725.579 845.231,725.943 845.651,728.432 847.682,729.99 847.481,732.923 843.003,731.153 837.99,731.762 836.391,734.99 834.49,735.753 833.963,738.829 825.408,737.964 824.012,747.714 816.843,748.573 817.867,750.294 814.867,755.829 816.391,758.659 825.151,760.313 826.561,758.619 829.222,759.143 829.031,761.119 830.74,762.409 830.713,764.733 834.325,764.003 833.851,761.964 839.031,760.473 838.673,762.949 843.191,765.653 842.941,772.49 836.811,774.134 836.351,776.119 841.141,779.263 847.253,778.893 847.571,780.173 854.24,778.983 856.173,775.753 863.722,771.323 862.367,768.384 858.593,768.932 858.793,766.182 862.093,764.182 861.071,761.682 865.423,760.031 865.851,760.432 869.593,763.943 871.061,770.813 874.617,774.443 881.633,789.113 888.391,794.003 887.601,806.573 889.472,807.713 887.061,813.909 889.698,822.943 892.191,823.253 892.781,828.563 894.481,830.133 895.182,842.893 898.043,851.763 898.053,851.793 898.191,852.273 892.682,855.281 891.593,858.193 885.481,860.143 883.111,862.933 870.231,858.233 878.043,857.403 878.521,854.923 882.611,851.383 881.003,843.473 889.651,838.949 886.867,835.323 880.472,837.553 879.071,826.829 876.408,826.963 875.981,825.409 879.111,823.853 879.932,820.49 877.803,817.983 873.253,818.693 870.691,811.199 863.343,813.263 862.691,803.923 859.867,802.949 860.843,800.653 842.601,800.593 840.821,792.013 835.698,792.723 833.093,788.99 828.101,788.773 825.003,796.963 818.031,805.273 816.481,805.423 815.641,811.313 812.383,810.949 811.633,808.013 799.281,811.579 800.463,815.463 796.253,815.579 798.601,818.699 789.481,821.593 789.908,828.433 785.851,830.103 785.682,831.323 781.901,832.393 783.117,837.973 777.012,839.793 777.003,841.343 780.601,840.933 783.401,842.943 783.213,845.153 778.981,848.031 773.053,848.313 772.923,845.329 769.031,847.173 768.391,844.353 762.793,845.24 755.231,855.273 753.075,854.313 754.658,849.973 753.321,845.323 749.423,841.263 745.043,842.443 740.74,840.693 740.575,839.313 744.182,839.173 743.441,834.693 733.781,830.863 732.043,834.273 729.722,833.653 729.521,837.073 721.262,838.723 717.053,838.523 716.481,833.829 711.021,829.49 710.021,823.409 703.771,820.713 701.901,818.223 698.811,818.199 698.325,813.713 710.151,808.273 709.463,806.883 712.111,804.143 708.793,803.983 710.891,800.683 704.521,800.363 704.271,795.119 711.641,793.103 713.321,791.183 720.691,788.329 720.321,782.393 717.003,781.133 713.133,778.063 713.432,776.133 718.843,775.483 721.111,769.423 728.593,771.693 728.325,768.932 732.281,760.949 731.093,753.079 735.713,749.384 735.021,747.723 729.191,746.99 729.071,745.329 731.722,744.113 728.691,739.813 728.981,738.573 734.981,736.544 741.908,737.983 743.325,734.823 742.821,729.023 744.213,729.031 745.441,731.659 749.361,728.24 749.271,723.553 746.908,723.119 743.803,712.193 739.158,700.829 732.361,698.432 731.281,693.602 729.481,692.199 731.472,687.531 728.561,685.432 731.222,683.943 731.803,680.634 730.321,674.544 729.075,672.464 730.053,668.903 730.111,669.031 730.173,669.044 731.351,667.393 734.908,668.134 739.053,666.673 740.043,668.563 745.731,668.773 z").attr({
    id: 'kreis08425',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08425'});
regions.push(kreis08425);

var kreis08421 = rsr.path("M 864.611,753.659 866.941,753.973 865.343,758.153 865.923,760.363 865.851,760.432 865.423,760.031 861.071,761.682 862.093,764.182 858.793,766.182 858.593,768.932 862.367,768.384 863.722,771.323 856.173,775.753 854.24,778.983 847.571,780.173 847.253,778.893 841.141,779.263 836.351,776.119 836.811,774.134 842.941,772.49 843.191,765.653 838.673,762.949 839.031,760.473 833.851,761.964 834.325,764.003 830.713,764.733 830.74,762.409 829.031,761.119 829.222,759.143 826.561,758.619 825.151,760.313 816.391,758.659 814.867,755.829 817.867,750.294 816.843,748.573 824.012,747.714 825.408,737.964 833.963,738.829 834.49,735.753 836.391,734.99 837.99,731.762 843.003,731.153 847.481,732.923 847.682,729.99 845.651,728.432 845.231,725.943 843.071,725.579 842.423,724.031 847.321,723.153 846.861,720.223 841.843,721.699 839.448,725.869 835.851,724.393 837.383,716.964 846.981,710.723 850.601,710.613 852.571,713.281 856.213,711.329 855.043,707.119 858.601,707.281 858.213,702.973 860.111,702.329 860.691,704.99 873.391,704.384 873.963,707.369 876.771,709.233 876.781,709.223 878.481,710.794 879.325,714.044 877.361,714.949 877.383,715.153 876.351,715.634 876.803,719.659 880.101,718.602 880.673,721.423 872.303,727.329 872.213,733.973 864.361,738.852 864.321,738.923 863.361,739.523 861.311,743.031 856.071,748.432 858.673,753.762 861.271,754.403 861.281,753.503 862.281,753.74 862.311,751.113 864.158,750.852 z").attr({
    id: 'kreis08421',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08421'});
regions.push(kreis08421);

var kreis08135 = rsr.path("M 1017.093,573.863 1019.158,574.869 1019.271,576.943 1021.963,582.103 1025.441,583.133 1025.262,585.443 1023.792,586.213 1023.867,586.329 1022.698,586.943 1025.292,590.723 1027.111,590.619 1029.908,594.433 1027.391,595.393 1027.042,595.843 1026.303,596.119 1022.401,601.093 1016.601,603.883 1010.117,606.253 1003.133,606.393 1002.553,604.043 1005.771,602.773 1005.972,602.383 1006.851,602.043 1007.861,600.133 1006.651,597.763 1007.133,592.823 1007.351,592.733 1009.117,595.523 1010.101,594.643 1010.198,594.793 1012.472,592.763 1012.383,590.273 1010.043,588.293 1006.101,589.883 1002.762,588.853 1001.891,589.653 1001.682,589.593 996.423,594.463 995.173,604.199 989.158,605.869 989.021,606.329 988.093,606.593 987.061,610.003 986.281,610.513 983.213,609.903 982.561,607.273 983.311,604.383 982.571,598.853 978.611,593.673 972.891,592.603 972.633,593.49 971.825,593.343 971.021,596.079 965.351,591.793 961.641,588.003 956.361,586.113 956.512,587.281 955.311,586.853 956.423,595.563 954.731,597.869 951.972,597.233 952.633,598.353 950.932,597.963 953.781,602.829 951.361,604.863 950.383,605.683 954.423,608.853 953.448,609.403 953.512,609.503 952.401,610.133 955.117,614.723 958.867,615.483 958.972,617.823 963.383,621.352 965.117,625.653 973.361,633.393 972.101,635.303 965.158,635.693 965.133,636.352 964.101,636.409 963.851,642.753 967.981,646.134 970.658,660.253 966.851,662.949 966.281,672.193 969.753,672.384 970.423,674.473 967.401,677.473 958.713,678.253 956.367,676.693 950.222,677.563 950.213,678.102 949.173,678.253 949.133,680.781 945.948,681.369 946.043,681.74 944.093,682.031 937.311,679.579 937.012,671.983 933.472,666.964 930.271,666.363 927.682,663.012 928.543,660.813 928.173,658.323 924.762,662.273 922.111,662.093 921.303,660.153 917.698,658.852 917.24,661.74 908.367,658.159 904.722,659.352 901.771,652.134 898.891,648.503 887.932,644.634 883.101,640.693 879.691,634.852 873.682,635.74 864.753,635.073 864.281,639.343 855.061,639.909 854.682,637.012 857.271,630.829 853.391,628.303 852.173,625.943 849.932,625.909 849.531,624.673 851.093,623.159 848.383,622.063 848.617,620.329 843.111,618.613 841.698,619.923 840.698,619.523 840.531,614.383 842.633,612.093 843.851,612.383 844.111,604.883 849.731,607.153 856.722,602.713 856.923,600.403 854.99,589.883 856.651,591.013 857.891,590.363 857.883,586.773 860.191,585.043 861.351,586.653 864.151,586.473 864.99,581.619 862.611,575.563 873.012,571.423 870.771,561.869 873.49,556.523 879.793,556.603 879.762,558.813 882.117,560.781 882.321,566.023 889.053,565.563 894.713,560.673 898.191,562.523 899.932,557.853 901.731,559.813 905.231,559.723 905.821,557.523 911.151,556.633 911.053,554.563 912.762,552.103 914.803,547.303 916.503,546.079 917.593,547.903 916.821,552.713 920.851,554.153 918.682,558.813 923.075,563.99 924.753,564.843 926.641,551.343 940.141,547.973 941.74,553.093 949.141,553.903 949.771,558.329 953.512,560.323 961.74,562.393 962.262,564.753 967.367,568.281 975.601,570.223 972.053,573.193 981.575,572.393 985.472,573.563 986.851,566.829 989.173,570.043 993.391,569.153 993.74,565.153 997.24,565.223 998.861,568.563 1007.281,567.063 1014.133,575.053 1014.481,573.463 1015.213,574.313 1015.821,571.531 1018.963,571.273 z").attr({
    id: 'kreis08135',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08135'});
regions.push(kreis08135);

var kreis08117 = rsr.path("M 729.481,667.659 727.861,664.159 723.463,663.74 722.191,661.863 728.133,651.634 732.481,651.393 733.673,642.432 730.932,635.393 733.883,632.99 732.463,629.781 723.713,623.753 713.611,622.134 713.617,620.693 719.851,617.483 719.981,610.803 715.253,608.393 705.932,609.603 700.321,604.823 698.432,594.433 699.781,589.193 696.571,584.423 699.891,582.073 698.133,576.383 705.825,564.613 702.867,562.383 707.722,558.053 715.191,562.803 716.825,568.159 718.673,568.733 720.093,565.869 724.593,563.579 728.891,564.443 730.24,557.173 725.617,553.213 726.093,550.023 730.753,548.949 739.503,554.423 743.383,552.409 754.351,554.003 760.641,552.281 761.932,551.133 769.281,550.153 773.093,550.403 772.781,553.053 778.762,555.103 780.762,551.079 785.391,557.863 784.075,560.119 785.173,563.281 789.158,562.323 788.731,565.619 791.803,566.983 791.713,565.103 794.49,566.183 794.901,569.883 795.811,568.463 798.133,571.353 796.401,571.449 798.722,573.733 796.972,575.323 798.281,578.813 800.633,578.553 801.617,579.829 803.191,580.403 802.771,576.923 807.641,576.909 813.213,574.159 815.293,574.073 818.391,576.653 820.303,575.893 824.682,579.643 826.771,578.173 827.575,580.781 828.793,581.733 829.981,580.923 829.891,579.153 831.682,578.843 834.908,580.699 836.521,576.363 835.883,573.699 834.908,575.563 833.271,576.433 831.74,574.531 832.821,572.829 830.923,572.543 830.012,568.829 829.432,570.531 828.151,570.079 828.231,563.673 829.293,563.193 831.521,564.263 830.367,566.903 835.423,565.973 835.061,563.531 837.198,562.233 837.141,567.143 844.351,568.613 844.351,572.483 844.731,573.813 848.213,572.473 848.861,574.523 853.061,574.133 856.111,576.263 862.401,575.023 862.611,575.563 864.99,581.619 864.151,586.473 861.351,586.653 860.191,585.043 857.883,586.773 857.891,590.363 856.651,591.013 854.99,589.883 856.923,600.403 856.722,602.713 849.731,607.153 844.111,604.883 843.851,612.383 842.633,612.093 840.531,614.383 840.698,619.523 841.698,619.923 843.111,618.613 848.617,620.329 848.383,622.063 848.367,622.102 838.343,625.119 838.321,626.723 831.158,626.973 829.948,630.159 833.691,630.699 829.173,635.173 824.325,643.262 820.262,643.273 821.682,645.223 818.158,646.281 814.383,644.973 813.173,648.113 811.948,647.544 812.861,650.369 810.543,653.932 809.24,655.409 806.793,654.829 807.658,656.773 805.861,658.464 800.722,659.134 800.281,658.294 793.883,657.512 793.182,654.964 791.061,654.659 789.141,656.579 790.423,657.423 789.133,657.523 785.908,656.159 782.963,655.753 780.99,657.329 777.941,655.923 776.762,656.464 777.093,657.352 774.281,658.753 775.481,661.693 775.401,664.343 770.99,664.803 770.691,666.781 766.231,666.74 766.825,668.794 762.311,674.884 764.463,677.932 763.512,678.199 760.941,675.909 758.762,676.063 757.99,674.893 753.698,675.193 754.571,677.682 752.012,677.003 751.851,675.723 747.932,671.659 747.883,670.829 746.441,670.159 745.731,668.773 740.043,668.563 739.053,666.673 734.908,668.134 731.351,667.393 730.173,669.044 730.111,669.031 730.053,668.903 z").attr({
    id: 'kreis08117',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08117'});
regions.push(kreis08117);

var kreis08136 = rsr.path("M 833.271,576.433 834.908,575.563 835.883,573.699 836.521,576.363 834.908,580.699 831.682,578.843 829.891,579.153 829.981,580.923 828.793,581.733 827.575,580.781 826.771,578.173 824.682,579.643 820.303,575.893 818.391,576.653 815.293,574.073 813.213,574.159 807.641,576.909 802.771,576.923 803.191,580.403 801.617,579.829 800.633,578.553 798.281,578.813 796.972,575.323 798.722,573.733 796.401,571.449 798.133,571.353 795.811,568.463 794.901,569.883 794.49,566.183 791.713,565.103 791.803,566.983 788.731,565.619 789.158,562.323 785.173,563.281 784.075,560.119 785.391,557.863 780.762,551.079 778.762,555.103 772.781,553.053 773.093,550.403 769.281,550.153 761.932,551.133 760.641,552.281 754.351,554.003 743.383,552.409 743.383,552.303 741.561,549.909 741.698,546.003 749.481,540.933 748.891,537.113 752.281,534.869 747.891,529.49 753.383,530.863 754.472,527.503 766.463,528.763 766.481,526.943 771.141,525.773 774.271,532.643 785.191,528.113 790.682,523.423 789.391,517.393 785.383,515.303 789.325,512.863 781.633,502.803 784.843,501.723 784.601,497.253 780.253,495.223 780.198,494.503 783.682,494.369 783.543,491.443 776.117,486.353 773.762,486.823 774.861,483.353 773.851,483.073 769.673,486.119 767.012,482.119 768.303,476.753 763.463,477.531 759.531,470.659 760.383,469.173 766.575,467.633 767.271,465.699 763.923,464.183 765.74,459.119 768.713,458.753 769.117,461.103 772.325,462.513 775.222,454.403 778.601,454.153 781.481,460.943 789.173,464.603 799.173,463.053 799.821,468.031 805.141,470.153 813.682,472.043 815.901,474.543 810.811,477.803 812.731,481.823 822.031,478.753 826.071,481.829 833.682,468.263 831.463,465.473 839.293,457.423 845.133,462.323 849.401,458.369 848.481,453.673 870.593,450.643 870.617,447.883 867.271,446.523 863.521,432.263 858.472,431.093 858.111,426.673 861.781,426.031 861.383,423.683 858.601,421.163 860.311,419.523 864.24,420.543 863.213,423.843 864.321,425.513 871.851,419.813 873.173,416.103 881.691,420.773 894.253,418.873 904.463,423.159 905.803,418.483 915.061,420.833 915.543,417.253 924.351,412.133 929.811,414.013 927.941,416.333 931.101,421.353 936.182,420.743 940.031,417.353 944.658,418.663 944.575,414.933 947.021,412.353 951.531,411.873 951.521,411.933 949.423,420.393 950.231,422.199 951.262,421.353 951.281,421.393 953.713,419.373 957.575,420.393 957.561,421.633 960.481,423.473 960.932,422.281 961.543,422.659 962.253,420.773 965.463,420.933 966.781,425.653 974.448,429.369 974.99,428.313 975.521,428.563 976.617,426.403 981.941,428.119 980.867,432.653 983.932,434.773 983.432,439.043 992.101,441.403 991.575,446.923 996.932,446.463 1001.981,452.369 1001.101,452.963 1001.093,453.043 1000.031,453.763 999.682,457.483 1005.593,457.313 1008.753,468.409 1012.543,468.073 1015.003,471.903 1012.821,472.923 1012.99,473.119 1011.731,473.713 1017.361,480.579 1013.673,484.883 1007.512,485.659 1007.383,486.323 1006.441,486.443 1005.972,488.781 1011.271,490.813 1015.803,495.593 1013.891,500.253 1014.825,502.343 1015.141,508.143 1016.075,513.99 1008.325,516.613 1008.361,517.003 1007.253,517.383 1007.593,521.383 1013.722,523.699 1014.49,534.483 1011.367,538.013 1006.641,538.803 1006.633,539.383 1005.561,539.563 1005.531,541.353 1008.981,543.903 1007.803,547.473 1009.561,551.49 1003.722,552.281 1004.053,552.843 1008.198,559.963 1005.891,563.503 1007.811,565.893 1008.361,566.313 1014.481,573.463 1014.133,575.053 1007.281,567.063 998.861,568.563 997.24,565.223 993.74,565.153 993.391,569.153 989.173,570.043 986.851,566.829 985.472,573.563 981.575,572.393 972.053,573.193 975.601,570.223 967.367,568.281 962.262,564.753 961.74,562.393 953.512,560.323 949.771,558.329 949.141,553.903 941.74,553.093 940.141,547.973 926.641,551.343 924.753,564.843 923.075,563.99 918.682,558.813 920.851,554.153 916.821,552.713 917.593,547.903 916.503,546.079 914.803,547.303 912.762,552.103 911.053,554.563 911.151,556.633 905.821,557.523 905.231,559.723 901.731,559.813 899.932,557.853 898.191,562.523 894.713,560.673 889.053,565.563 882.321,566.023 882.117,560.781 879.762,558.813 879.793,556.603 873.49,556.523 870.771,561.869 873.012,571.423 862.611,575.563 862.401,575.023 856.111,576.263 853.061,574.133 848.861,574.523 848.213,572.473 844.731,573.813 844.351,572.483 844.351,568.613 837.141,567.143 837.198,562.233 835.061,563.531 835.423,565.973 830.367,566.903 831.521,564.263 829.293,563.193 828.231,563.673 828.151,570.079 829.432,570.531 830.012,568.829 830.923,572.543 832.821,572.829 831.74,574.531 z").attr({
    id: 'kreis08136',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08136'});
regions.push(kreis08136);

var kreis08119 = rsr.path("M 702.867,562.383 702.843,562.423 701.198,561.103 700.173,555.909 696.311,556.433 692.753,552.443 689.941,553.909 684.753,550.683 681.325,551.653 678.731,555.173 679.222,556.613 675.173,559.903 672.423,551.053 666.182,545.393 663.361,548.023 664.575,550.683 664.448,554.053 657.843,554.183 655.053,552.843 648.793,556.183 641.071,552.893 641.093,552.233 641.141,550.193 634.867,548.893 635.722,546.693 633.101,544.423 628.448,544.513 627.503,543.353 619.043,542.653 621.821,534.223 620.512,530.293 617.213,528.24 617.901,522.449 615.781,519.573 617.593,516.763 622.611,508.943 625.303,510.273 633.883,509.043 637.281,502.813 635.343,497.503 641.321,489.031 648.021,486.24 648.972,487.733 655.481,488.103 660.432,486.079 662.521,483.159 662.361,482.393 657.351,485.013 655.173,481.281 656.698,479.023 652.74,474.253 649.24,476.449 646.158,474.673 642.173,474.869 641.351,469.619 637.198,466.573 637.658,465.253 646.762,465.563 650.948,458.793 658.658,457.503 659.972,455.963 659.361,453.253 651.531,444.281 644.731,443.143 645.021,441.383 649.923,440.903 656.191,433.983 664.031,431.753 663.031,428.383 664.963,426.183 668.963,425.103 669.021,422.853 669.101,420.073 669.133,419.963 672.99,419.713 674.908,417.853 674.972,417.793 676.213,418.013 677.575,415.653 679.698,417.923 682.531,416.063 680.923,411.643 686.481,405.163 690.531,406.393 694.271,404.213 700.571,404.643 702.222,402.333 702.408,402.473 705.075,404.503 708.408,403.803 708.851,404.913 707.762,407.663 710.851,410.003 710.673,410.993 713.771,410.193 712.74,412.553 717.182,414.133 723.713,414.513 725.883,418.393 727.367,414.983 731.101,413.743 736.673,414.223 735.867,416.043 739.803,416.783 739.908,417.503 733.932,418.953 734.191,420.713 739.021,423.573 737.141,425.763 739.133,429.423 734.231,437.613 734.771,439.543 746.981,439.531 749.651,443.753 753.408,444.553 757.071,444.579 760.141,446.713 760.133,447.593 756.075,448.159 760.012,455.543 752.173,457.683 756.101,457.713 757.213,460.043 762.071,456.823 765.883,458.74 765.74,459.119 763.923,464.183 767.271,465.699 766.575,467.633 760.383,469.173 759.531,470.659 763.463,477.531 768.303,476.753 767.012,482.119 769.673,486.119 773.851,483.073 774.861,483.353 773.762,486.823 776.117,486.353 783.543,491.443 783.682,494.369 780.198,494.503 780.253,495.223 784.601,497.253 784.843,501.723 781.633,502.803 789.325,512.863 785.383,515.303 789.391,517.393 790.682,523.423 785.191,528.113 774.271,532.643 771.141,525.773 766.481,526.943 766.463,528.763 754.472,527.503 753.383,530.863 747.891,529.49 752.281,534.869 748.891,537.113 749.481,540.933 741.698,546.003 741.561,549.909 743.383,552.303 743.383,552.409 739.503,554.423 730.753,548.949 726.093,550.023 725.617,553.213 730.24,557.173 728.891,564.443 724.593,563.579 720.093,565.869 718.673,568.733 716.825,568.159 715.191,562.803 707.722,558.053 z").attr({
    id: 'kreis08119',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08119'});
regions.push(kreis08119);

var kreis08127 = rsr.path("M 762.071,456.823 757.213,460.043 756.101,457.713 752.173,457.683 760.012,455.543 756.075,448.159 760.133,447.593 760.141,446.713 757.071,444.579 753.408,444.553 749.651,443.753 746.981,439.531 734.771,439.543 734.231,437.613 739.133,429.423 737.141,425.763 739.021,423.573 734.191,420.713 733.932,418.953 739.908,417.503 739.803,416.783 735.867,416.043 736.673,414.223 731.101,413.743 727.367,414.983 725.883,418.393 723.713,414.513 717.182,414.133 712.74,412.553 713.771,410.193 710.673,410.993 710.851,410.003 707.762,407.663 708.851,404.913 708.408,403.803 705.075,404.503 702.408,402.473 703.908,398.433 701.383,398.003 701.133,393.173 703.531,392.493 702.691,391.113 710.99,388.293 711.031,388.403 714.811,391.323 715.117,387.193 712.191,384.273 713.343,380.833 715.867,380.983 718.173,376.033 723.383,376.763 725.191,379.393 722.367,380.343 722.351,383.103 726.731,381.483 733.043,385.393 731.481,386.483 732.182,387.733 738.231,389.293 738.561,382.533 731.948,381.243 728.611,375.693 735.691,371.333 736.432,367.063 738.401,367.773 737.932,373.563 742.441,374.283 746.262,373.213 749.213,374.203 748.182,378.883 750.867,378.223 751.448,376.153 750.231,370.623 752.908,370.233 752.901,371.613 752.053,372.153 752.883,374.373 757.117,372.753 759.158,365.733 758.908,361.863 765.003,359.573 765.191,354.613 767.361,348.553 774.043,344.203 782.213,346.213 785.553,337.963 782.771,333.113 779.401,331.423 780.262,329.773 789.432,331.383 789.093,322.823 787.003,320.453 789.553,319.233 791.093,320.633 796.222,316.683 805.021,314.423 809.293,311.433 809.071,305.773 807.531,304.243 808.821,303.013 811.198,304.973 812.948,300.573 820.311,300.383 819.781,297.203 818.803,296.503 819.423,291.263 814.481,289.963 819.182,287.531 816.117,283.223 820.682,280.513 814.99,270.243 819.133,267.803 818.793,260.623 825.481,257.943 828.713,260.323 831.571,258.143 833.24,260.781 837.351,260.833 839.658,257.553 843.061,257.313 843.682,264.493 847.49,265.781 854.182,263.663 858.658,256.543 867.981,259.423 879.731,260.123 877.561,253.333 889.521,249.083 903.021,247.203 903.713,248.453 903.151,252.283 903.075,252.723 901.901,255.323 905.231,260.483 904.043,264.323 907.408,266.031 907.281,268.403 903.731,267.153 903.391,268.273 902.713,268.031 900.771,274.353 903.391,279.353 906.901,281.063 911.99,281.273 914.343,285.313 910.423,291.873 912.571,298.531 917.343,301.773 914.963,309.043 911.553,311.853 909.441,310.993 908.101,306.143 907.271,307.713 907.071,307.003 904.74,311.393 904.401,315.113 910.173,316.853 906.441,320.793 910.043,334.783 912.571,335.373 912.543,337.813 909.611,336.953 909.593,338.103 908.575,337.803 908.481,344.013 918.74,347.333 922.031,353.313 925.713,352.683 925.941,356.273 930.281,358.133 932.158,364.233 933.99,364.813 934.963,363.963 935.031,363.983 937.901,361.463 947.753,368.763 950.923,377.323 942.351,382.313 942.401,382.503 941.303,383.143 941.963,385.593 938.923,385.163 938.575,386.093 937.867,385.993 934.923,394.083 940.003,394.023 941.075,396.803 948.843,396.243 947.901,401.743 945.325,403.993 944.325,404.863 951.191,407.043 953.543,410.803 952.571,411.103 952.575,411.063 951.867,411.323 952.571,411.103 952.441,411.643 951.521,411.933 951.531,411.873 947.021,412.353 944.575,414.933 944.658,418.663 940.031,417.353 936.182,420.743 931.101,421.353 927.941,416.333 929.811,414.013 924.351,412.133 915.543,417.253 915.061,420.833 905.803,418.483 904.463,423.159 894.253,418.873 881.691,420.773 873.173,416.103 871.851,419.813 864.321,425.513 863.213,423.843 864.24,420.543 860.311,419.523 858.601,421.163 861.383,423.683 861.781,426.031 858.111,426.673 858.472,431.093 863.521,432.263 867.271,446.523 870.617,447.883 870.593,450.643 848.481,453.673 849.401,458.369 845.133,462.323 839.293,457.423 831.463,465.473 833.682,468.263 826.071,481.829 822.031,478.753 812.731,481.823 810.811,477.803 815.901,474.543 813.682,472.043 805.141,470.153 799.821,468.031 799.173,463.053 789.173,464.603 781.481,460.943 778.601,454.153 775.222,454.403 772.325,462.513 769.117,461.103 768.713,458.753 765.74,459.119 765.883,458.74 z").attr({
    id: 'kreis08127',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08127'});
regions.push(kreis08127);

var kreis08126 = rsr.path("M 683.74,262.531 683.691,262.563 683.601,262.393 682.901,260.043 686.043,256.883 683.963,249.283 690.503,247.113 693.731,251.823 705.173,256.723 711.293,254.143 725.021,256.593 727.463,252.333 732.867,249.473 730.641,244.623 727.101,243.633 725.448,237.003 736.262,231.783 736.423,231.973 748.351,230.283 747.713,237.863 757.222,237.803 758.891,240.993 769.003,236.803 771.391,238.893 772.031,245.523 784.932,246.753 787.093,243.043 787.633,245.813 793.423,247.383 797.891,240.803 801.423,241.953 801.793,247.613 804.173,250.113 811.99,248.273 816.441,255.073 815.111,259.893 818.367,260.343 818.793,260.623 819.133,267.803 814.99,270.243 820.682,280.513 816.117,283.223 819.182,287.531 814.481,289.963 819.423,291.263 818.803,296.503 819.781,297.203 820.311,300.383 812.948,300.573 811.198,304.973 808.821,303.013 807.531,304.243 809.071,305.773 809.293,311.433 805.021,314.423 796.222,316.683 791.093,320.633 789.553,319.233 787.003,320.453 789.093,322.823 789.432,331.383 780.262,329.773 779.401,331.423 782.771,333.113 785.553,337.963 782.213,346.213 774.043,344.203 767.361,348.553 765.191,354.613 765.003,359.573 758.908,361.863 759.158,365.733 757.117,372.753 752.883,374.373 752.053,372.153 752.901,371.613 752.908,370.233 750.231,370.623 751.448,376.153 750.867,378.223 748.182,378.883 749.213,374.203 746.262,373.213 742.441,374.283 737.932,373.563 738.401,367.773 736.432,367.063 735.691,371.333 728.611,375.693 731.948,381.243 738.561,382.533 738.231,389.293 732.182,387.733 731.481,386.483 733.043,385.393 726.731,381.483 722.351,383.103 722.367,380.343 725.191,379.393 723.383,376.763 718.173,376.033 715.867,380.983 713.343,380.833 712.191,384.273 715.117,387.193 714.811,391.323 711.031,388.403 710.99,388.293 711.448,388.133 708.367,385.353 705.271,385.333 706.293,381.063 705.053,376.083 702.367,376.483 698.867,372.733 696.173,375.753 699.367,381.433 698.351,386.393 695.101,387.613 688.071,386.193 687.762,390.053 683.658,391.543 682.383,394.163 680.698,391.943 682.151,385.323 684.561,383.403 680.367,376.073 678.521,379.093 676.401,380.053 676.151,374.113 681.673,371.253 678.311,367.233 670.821,370.083 664.481,367.983 661.543,363.693 660.141,360.653 650.698,357.433 650.851,356.053 659.053,353.473 657.651,351.113 661.49,345.063 668.281,344.133 674.762,346.513 682.74,334.963 686.698,332.783 683.753,330.003 678.253,329.423 674.198,320.293 678.617,313.963 677.075,311.893 680.101,302.803 683.923,302.963 682.811,298.813 689.883,300.093 694.722,295.023 706.901,292.753 706.941,288.203 693.521,284.383 690.49,270.293 688.093,269.733 689.948,266.843 z").attr({
    id: 'kreis08126',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08126'});
regions.push(kreis08126);

var kreis08128 = rsr.path("M903.981,251.503C903.851,251.473,903.722,251.543,903.981,251.503 L903.981,251.503z M674.713,114.373l-5.25-3.184l4.38-1.39l-0.591-0.479l1.483-0.47l-2.55-2.09l4.74-6.6l-0.66-7.87l-6.37-9.83 l-4.71-1.54l-0.14,1.21l-0.767-0.25l-1.523,12.83l-7.354-0.04l-0.68-5.8l-2.479-1.53l4.173-1.49l3.146-2.33l-0.31-0.08l1.21-0.89 l-10.99-2.67l-3.141,1.09l-10.279-2.66l-0.2-0.356l7.609-0.44l0.341-0.94l0.55-0.026l1.15-3.17l-3.98-4.98l0.146-4.52l11.432,0.438 l6.74-5.489l5.688,5.133l10.91-10.014l4.14,0.57l2.82,7.061l5.7,2.369l3.01-2.188l0.13-0.4l0.79-0.567l1.021-3.029l1.576-3.44 l7.106-0.08l3.972,3.61l-1.734,4.82l1.26,3.316l4.7,1.271l1.08-0.75l2.657-1.84l3.133,0.71l2.79,9.68l3.42,1.13l0.31-1.17l0.62,0.2 l1.03-3.86l-2.969-4.438l-1.146-8.24l5.87-2.2l0.12,3.04l22.92-6.99l1.54,5.11l-1.511,0.8l0.101,0.433l-1.05,0.551l1.235,5.39 l-3.188,6.32l-0.479,9.35l-2.526,0.69l0.55,0.56l-1.5,0.4l4.39,4.449l-4.34,6.867l1.94,7.054l6.67,3.229l7.3-2.56l0.04-0.644 l0.91-0.316l0.63-10.771l6.38-1.029l0.38-0.868l0.58-0.092l0.71-1.641l2.37-0.95l2.729,11.473l2.563,1.131l0.08,6.487l3.28,0.171 l0.943-0.961h0.017l4.18-4.237l0.63-6.66l6.82-5.271l3.854-0.647l0.199-0.83l0.771-0.13l0.773-3.262l2,0.528l-1.051,4.82 l10.761,7.7l2.976,10.96l-1.989,0.51l-0.28,0.771l-0.699,0.182l-2.061,5.77l3.311,9.7l7.096,2.7l5.563,16.67l-8.85,5.938 l0.065,0.222l-1.052,0.71l2.71,8.54l-11.908,9.54l0.118,0.04l-1.101,0.88l16.021,5.01l0.267-1.148l0.72,0.222l2.101-9.222 l2.949-5.562l6.301-3.89l5.399,0.197l-4.271,11.683l8.104,0.51l-1.8,7.57l3.06,5.56l-3.489,6.03l2.199,5.95l-3.5,7.276l4.063,4.87 l8.484,2.313l6.42-2.263l15.62,0.473l0.329-0.933l0.682,0.021l3.039-8.46l6.354-2.49l0.37-0.67l0.64-0.25l3.07-5.479l-6.646-4.421 l6.479-4.721l0.03-0.21l0.979-0.71l0.421-2.49l6.265,2.41l2.392,4.28l-3.33,2.229l0.03,0.224l-1.055,0.697l0.897,6.359 l10.091,0.141l2.34,3.869l-5.863,4.95l0.02,0.03l-1.04,0.88l6.95,14.03l-5.899,2.31l-0.211,0.59l-0.813,0.32l-1.78,5.08 l12.563,5.147l5.857,15.711l-2.25-0.29l1.99,1.278l-3.021-0.38l6.604,4.23l-0.03,2.026l-4.561,2.521l-5.5-1.46 c0,0-3.739,0.88-4.989,1.17c-0.16,0.04-0.28,0.06-0.36,0.08c0.104,0.026,0.17,0.106,0.07,0.33c-0.04,0.09-0.09,0.21-0.16,0.35 l-0.568,0.13l-0.222-0.028l0.563-3.828l-0.689-1.25l-13.5,1.88l-11.96,4.25l2.17,6.79l-11.75-0.7l-9.319-2.88l-4.479,7.12 l-6.69,2.118l-3.81-1.29l-0.62-7.182l-3.397,0.24l-2.313,3.28l-4.109-0.054l-1.671-2.64l-2.854,2.18l-3.229-2.38l-6.688,2.684 l-0.422-0.28l-3.264-0.45l1.33-4.82l-4.446-6.8l-7.816,1.84l-2.382-2.5l-0.368-5.658l-3.53-1.148l-4.47,6.58l-5.79-1.57l-0.54-2.77 l-2.16,3.71l-12.896-1.23l-0.644-6.63l-2.391-2.09l-10.109,4.188l-1.67-3.188l-9.51,0.06l0.64-7.578l-11.93,1.688l-0.16-0.188 l-5.05-5.922l-14.569-5.76l-10.538,5.313l-2.359-7.189l3.604-7.84l-1.104-4.29l-6.646-4.04l1.462-5.93l6.302-6.99l5.83-0.51 l2.76-8.12l-5.8-3.08l-7.95-23.23l2.762-8.396l6.396,2.25l3.59-3.15l-0.521-6.897l4.854-0.933l-4.063-9.76l-5,2.04l-1.552-3.188 l-5.852,1.341l-17.063-5.069l0.012-2.76l-10.729-3.9l-1.158-1.528L674.713,114.373z").attr({
    id: 'kreis08128',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08128'});
regions.push(kreis08128);

var kreis08225 = rsr.path("M 727.101,243.633 725.448,237.003 736.262,231.783 731.213,225.863 716.641,220.103 706.101,225.413 703.74,218.223 707.343,210.383 706.24,206.093 699.593,202.053 701.053,196.123 707.351,189.133 713.182,188.623 715.941,180.503 710.141,177.423 702.191,154.193 704.948,145.793 711.343,148.043 714.932,144.893 714.408,137.993 719.262,137.063 715.198,127.303 710.198,129.343 708.651,126.153 702.803,127.493 685.74,122.423 685.753,119.663 675.021,115.763 676.691,117.973 673.24,123.133 672.932,123.173 672.325,124.073 662.923,125.413 658.682,118.763 653.673,122.053 649.24,125.203 640.281,120.063 638.891,120.133 639.173,121.043 638.262,121.933 638.281,121.993 630.99,129.133 627.883,128.793 627.861,132.733 632.111,138.273 631.031,138.953 631.231,139.213 625.321,142.953 624.24,149.143 623.531,149.143 623.361,150.083 620.401,150.073 620.948,153.553 619.963,153.793 620.071,154.483 599.281,159.533 590.463,156.613 575.803,159.623 572.553,156.743 571.682,157.723 571.521,165.593 570.691,165.313 570.673,166.513 570.601,166.853 568.49,168.893 569.173,171.543 566.463,172.133 566.821,173.863 575.351,177.603 579.891,183.823 579.031,187.683 578.321,187.923 578.173,188.603 572.481,190.523 570.361,182.933 565.213,183.313 565.101,183.523 564.825,183.343 564.821,183.343 564.24,184.443 561.262,190.103 565.658,195.623 561.253,200.863 555.003,202.513 557.271,205.273 555.423,207.063 554.003,205.273 551.575,208.163 546.043,208.993 552.99,222.513 544.191,232.033 545.472,235.203 539.793,238.243 537.383,235.893 537.24,231.893 531.99,235.483 534.691,244.453 528.883,248.183 526.321,245.973 518.101,249.153 518.111,258.123 521.651,259.773 526.901,265.563 526.325,271.223 529.593,273.563 533.843,273.013 535.821,276.053 538.231,275.493 548.423,284.193 553.521,282.123 551.821,286.403 556.343,292.473 553.793,297.853 553.531,297.933 554.351,300.613 558.74,302.133 560.571,304.893 568.351,303.943 575.281,305.463 575.561,307.953 587.593,306.593 588.441,301.353 581.658,300.643 580.253,298.023 582.231,295.823 584.923,297.613 589.158,295.833 588.762,288.513 591.182,280.383 594.851,282.593 602.361,280.963 604.771,281.933 606.731,286.623 610.825,290.223 612.111,288.303 616.061,292.723 617.043,295.073 619.867,294.673 623.423,291.093 626.441,279.103 632.383,279.263 634.543,270.993 641.222,266.043 638.99,256.653 642.271,252.663 647.803,251.173 655.271,261.413 662.061,262.553 669.722,261.763 677.49,265.803 683.691,262.563 683.601,262.393 682.901,260.043 686.043,256.883 683.963,249.283 690.503,247.113 693.731,251.823 705.173,256.723 711.293,254.143 725.021,256.593 727.463,252.333 732.867,249.473 730.641,244.623 z").attr({
    id: 'kreis08225',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08225'});
regions.push(kreis08225);

var kreis08121 = rsr.path("M 551.923,344.213 573.383,344.923 573.531,340.513 575.231,338.853 590.061,339.853 592.021,347.443 607.821,349.963 610.061,357.423 614.851,357.853 615.825,361.023 622.753,361.463 623.441,364.363 620.901,365.733 621.593,367.943 627.512,370.723 627.222,372.653 628.901,374.733 628.311,382.043 635.361,382.623 637.321,384.833 633.793,386.343 632.111,384.953 621.24,388.783 621.658,390.303 608.553,388.603 607.571,386.393 604.325,385.833 600.803,390.243 595.575,389.673 596.423,392.433 595.012,395.743 589.512,395.043 586.561,391.173 587.133,386.483 580.24,379.433 589.99,371.033 590.698,368.133 581.253,364.533 580.281,357.903 568.003,358.163 563.071,351.123 556.021,346.013 551.781,344.903 z").attr({
    id: 'kreis08121',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08121'});
regions.push(kreis08121);

var kreis08125 = rsr.path("M480.431,347.673l0.05-0.22l14.271,8.8l3.39-2.76l4.51-1.53 l-0.85-6.21l-1.854-3.72l23.87-5.41l2.4-7.04l2.54-0.13l5.93-5.66l4.813-0.83l1.271-4.28l-3.96-1.24l1.42-3.17l-1.56-3.59 l6.22,5.103l1.84-1.103l-2.54-2.07l9.76-7.856l-3.25-4l-1.982,0.688l-2.54-4.83l1.27-2.066l8.07,3.31l0.02,0.08l0.82,2.68 l4.393,1.521l1.828,2.76l7.779-0.95l6.931,1.521l0.279,2.49l12.03-1.36l0.85-5.24l-6.773-0.71l-1.409-2.62l1.979-2.198l2.689,1.789 l4.238-1.777l-0.398-7.32l2.42-8.13l3.67,2.21l7.511-1.63l2.409,0.97l1.961,4.69l4.104,3.6l1.274-1.92l3.949,4.42l0.98,2.353 l2.829-0.399l3.551-3.58l3.02-11.99l5.94,0.16l2.16-8.27l6.68-4.95l-2.229-9.392l3.275-3.988l5.53-1.49l7.47,10.24l6.79,1.14 l7.66-0.79l7.771,4.04l6.197-3.239l0.053-0.028l6.212,4.311l-1.857,2.892l2.398,0.562l3.024,14.09l13.42,3.82l-0.04,4.55 l-12.18,2.271l-4.84,5.068l-7.07-1.278l1.11,4.148l-3.82-0.16l-3.021,9.092l1.54,2.068l-4.425,6.33l4.057,9.13l5.5,0.58 l2.943,2.779l-3.961,2.181l-7.979,11.55l-6.48-2.38l-6.789,0.932l-3.841,6.051l1.4,2.357l-8.2,2.58l-0.15,1.38l9.44,3.223 l1.398,3.04l2.938,4.289l6.34,2.102l7.49-2.852l3.359,4.021l-5.521,2.859l0.25,5.938l2.12-0.96l1.852-3.021l4.188,7.33l-2.41,1.92 l-1.45,6.62l1.688,2.221l1.275-2.62l4.104-1.49l0.31-3.857l7.03,1.42l3.25-1.222l1.021-4.96l-3.198-5.681l2.698-3.021l3.5,3.75 l2.682-0.399l1.24,4.979l-1.021,4.271l3.104,0.021l3.08,2.778L711,388.31l-8.305,2.819l0.845,1.381l-2.397,0.68l0.25,4.83 l2.528,0.431l-1.5,4.039l-0.188-0.14l-1.646,2.311l-6.304-0.431l-3.735,2.181l-4.055-1.229l-5.56,6.479l1.607,4.421l-2.829,1.858 l-2.119-2.271l-1.369,2.357l-1.24-0.22l-0.062,0.061l-0.108-0.118l-1.46-0.83l0.813-3.813l-1-2.54l-8.119,2.33l-1.593,2.689 l2.133,0.729l-2.197,0.932l0.171,0.988l6.188-0.52l-0.6,2.26h-0.03v0.109l-0.08,2.777l-0.34-0.013l-6.479,0.303L661.155,421 l-7.105,2.327l-0.487-2.089l-4.563-0.25l-1.711,3.089l-2.3-1.17l-10.54,2.881l-2.354-1.391l0.188-3.913l-1.521-0.51l-2.33,3.91 l-5.618-1.841l0.21,3.261l2.869,0.67l0.061,0.66l-1.64,1.103l-2.313,0.33l-6.815,3.34l-1.854-4.09l-3.431-1.938l-1.859,2.197 l-10.188-1.396l-4.88-5.479l1.867-4.633l-6.593-2.606l-2.078,1.76l-4.063-0.83l-2.859-4.09l-8.564,0.04l1.564,5.58l-14.021,3.13 l-0.96,4.188l0.39,5.688l-11.09,0.71l1.01-1.987l-4.56-0.438l1.01,2.479l-2.188,1.438l-8.446-3.369l0.341-5.46l-7.771-1.271 l-0.063,3.199l-3.2-0.72l0.051-1.601l-4.221,1.391l-1.58-1.771l-2.479-0.05l-0.843,2.149l-1.58-1.54l-12-2.529l-0.271,2.38 l-3.438,1.439l-0.053-0.063l-0.979-0.143l0.27-5.93l1.69-0.28l-0.015-5.24l-0.013-3.45l-3.938-1.646l2.945-2.49l-1.828-0.97 l7.605-1.394l-0.87-17.106l-3.81-1.92l-1.99-6.07l-3.521,1.11l-0.278,1.93l-6.49-0.54l-4.93,0.29l1.12-2.21l0.42-4.144l2.25-0.56 l-0.436-4.27l1.688-0.844l-3.681-5.646l-3.239,2.91l-1.42-2.62L480.431,347.673z M637.321,384.833l-1.96-2.21l-7.05-0.58 l0.59-7.313l-1.68-2.08l0.29-1.93l-5.92-2.78l-0.69-2.21l2.54-1.368l-0.688-2.898l-6.927-0.44l-0.979-3.17l-4.79-0.43l-2.24-7.46 l-15.8-2.521l-1.96-7.59l-14.83-1l-1.7,1.66l-0.146,4.41l-21.46-0.71l-0.146,0.688l4.24,1.109l7.05,5.11l4.935,7.04l12.275-0.264 l0.975,6.634l9.445,3.6l-0.71,2.9l-9.75,8.396l6.896,7.05l-0.57,4.69l2.95,3.87l5.5,0.699l1.409-3.313l-0.847-2.76l5.228,0.568 l3.522-4.408l3.24,0.56l0.979,2.21l13.104,1.7l-0.42-1.521l10.87-3.829l1.681,1.391L637.321,384.833z").attr({
    id: 'kreis08125',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08125'});
regions.push(kreis08125);

var kreis08222 = rsr.path("M 396.681,236.943 396.553,237.253 388.463,236.613 387.198,239.513 381.673,239.273 381.651,236.243 372.441,239.463 372.448,239.143 374.441,233.043 376.401,228.613 374.673,224.353 370.262,222.723 358.472,222.663 354.472,219.383 355.061,215.633 359.923,212.923 360.133,212.323 360.673,212.023 362.061,208.003 355.031,198.813 347.151,172.643 344.963,166.303 348.463,159.103 347.651,154.503 352.803,154.343 353.431,153.403 353.543,153.403 355.593,150.853 364.891,152.023 367.503,158.213 372.061,159.833 383.177,172.542 385.677,179.292 392.927,185.292 398.677,185.042 401.271,194.733 396.321,198.623 390.651,200.453 387.281,206.263 392.271,208.443 396.281,215.593 402.253,215.973 398.731,222.483 401.173,225.643 401.198,231.853 397.948,233.803 z").attr({
    id: 'kreis08222',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08222'});
regions.push(kreis08222);

var kreis08221 = rsr.path("M 468.012,229.643 469.043,243.163 464.222,244.693 462.681,250.773 459.281,250.783 461.141,255.603 451.365,258.263 446.972,257.583 448.401,261.163 447.141,265.723 440.071,267.133 429.571,264.133 427.321,267.733 422.931,267.063 424.611,262.913 419.213,259.633 416.843,268.063 412.731,266.833 413.281,264.623 405.891,260.663 409.407,255.673 421.012,251.343 421.571,249.413 418.575,247.633 416.981,238.113 410.325,242.013 407.198,240.783 398.972,238.763 396.681,236.943 397.948,233.803 401.198,231.853 404.74,230.453 409.293,233.323 415.351,223.773 421.031,226.923 440.883,222.563 443.99,219.373 452.941,222.103 453.781,218.653 453.198,215.343 460.731,217.393 458.753,219.873 461.053,226.773 z").attr({
    id: 'kreis08221',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08221'});
regions.push(kreis08221);

var kreis08226 = rsr.path("M 399.097,186.041 401.275,194.721 396.325,198.613 390.655,200.442 387.285,206.253 392.275,208.433 396.285,215.583 402.259,215.963 398.737,222.473 401.179,225.633 401.205,231.843 404.745,230.444 409.299,233.313 415.357,223.763 421.037,226.913 440.891,222.553 443.997,219.365 452.947,222.094 453.787,218.644 453.207,215.334 460.737,217.384 458.759,219.864 461.059,226.762 468.018,229.632 469.049,243.153 464.228,244.682 462.687,250.762 459.287,250.773 461.147,255.592 451.374,258.252 446.978,257.572 448.406,261.151 447.147,265.712 440.077,267.122 429.577,264.122 427.327,267.722 422.937,267.052 424.616,262.903 419.221,259.624 416.851,268.054 412.739,266.824 413.289,264.615 405.899,260.655 409.418,255.665 421.022,251.335 421.581,249.405 418.588,247.625 416.99,238.104 410.338,242.004 407.211,240.775 398.982,238.754 396.691,236.934 396.563,237.246 388.473,236.604 387.209,239.504 381.683,239.264 381.661,236.235 372.45,239.456 372.263,243.546 371.553,244.046 371.513,244.436 362.053,251.186 361.563,255.216 364.553,256.987 368.626,254.386 370.418,251.615 370.668,251.506 371.168,250.735 374.143,249.464 373.621,256.924 370.571,265.914 366.92,270.771 366.661,271.002 366.17,271.651 357.621,279.201 357.661,283.672 359.378,286.972 366.765,288.992 370.055,293.663 369.805,298.083 369.661,298.362 369.055,298.902 369.055,298.952 379.7,305.641 381.281,310.181 386.67,312.081 388.49,308.761 397.7,312.99 395.878,316.031 411.611,322.99 415.143,322.001 420.531,325.7 421.081,323.081 429.861,328.281 439.191,329.49 446.24,324.22 448.804,329.04 453.612,330.399 457.031,341.29 469.752,343.88 475.686,343.17 480.444,347.66 480.493,347.439 494.766,356.24 498.154,353.479 502.664,351.949 501.816,345.74 499.962,342.019 523.832,336.609 526.233,329.569 528.773,329.439 534.702,323.78 539.515,322.949 540.782,318.67 536.823,317.43 538.242,314.26 536.685,310.67 542.903,315.77 544.743,314.67 542.203,312.6 551.964,304.741 548.714,300.741 546.727,301.43 544.187,296.6 545.455,294.531 553.526,297.842 553.545,297.922 553.809,297.842 556.359,292.462 551.837,286.392 553.537,282.113 548.439,284.182 538.247,275.483 535.837,276.044 533.859,273.004 529.609,273.554 526.343,271.214 526.915,265.554 521.665,259.764 518.125,258.115 518.115,249.144 526.335,245.964 528.898,248.174 534.706,244.445 532.006,235.474 537.256,231.884 537.4,235.884 539.81,238.235 545.489,235.195 544.208,232.025 553.008,222.504 546.062,208.983 551.595,208.153 554.022,205.262 555.442,207.052 557.29,205.262 555.022,202.502 561.272,200.852 565.658,195.623 561.262,190.102 564.24,184.442 559.031,181.022 555.715,184.902 551.305,195.802 550.845,195.752 550.45,196.712 540.795,195.61 532.982,192.43 532.692,190.91 531.674,190.72 530.118,194.281 529.73,194.172 529.28,195.192 522.78,193.334 523.86,197.322 522.44,202.843 521.89,202.693 521.618,203.755 518.924,203.045 516.344,209.613 521.892,215.683 520.329,218.583 519.966,218.623 519.506,219.481 513.765,220.111 512.951,224.111 512.264,224.341 512.12,225.011 507.159,226.671 505.264,223.569 502.175,234.331 501.49,234.729 501.351,235.229 496.431,238.139 493.391,243.459 492.74,244.067 492.577,244.347 489.044,247.667 486.345,246.017 484.635,242.437 480.903,241.698 478.796,246.528 478.483,246.267 477.983,247.417 473.433,243.565 473.135,236.935 473.943,236.145 473.943,236.045 477.62,232.445 481.573,233.365 483.903,230.013 482.595,216.213 479.893,214.013 479.885,211.393 480.693,210.683 480.693,210.484 483.662,207.853 490.766,203.013 494.324,207.143 491.914,212.393 496.889,212.115 500.534,208.905 501.315,206.255 501.985,205.845 502.137,205.345 505.355,203.395 503.435,193.965 500.025,193.285 486.226,195.175 484.074,199.715 483.824,199.455 483.275,200.625 477.284,194.435 478.259,183.526 475.832,182.565 472.018,185.366 471.259,188.846 470.705,188.616 470.455,189.757 463.622,186.877 461.074,188.267 453.245,184.989 450.405,186.647 446.855,185.278 447.945,184.477 447.637,184.357 448.895,183.437 445.414,180.458 440.719,178.816 440.406,172.198 435.415,169.316 433.206,151.948 434.083,151.816 433.986,151.006 437.299,150.536 437.872,146.126 436.155,143.926 432.745,144.906 431.889,142.974 436.122,136.204 431.414,134.283 424.445,136.384 421.887,137.224 404.296,141.844 403.065,147.974 407.485,149.196 412.735,171.675 408.797,180.245 408.476,180.194 406.235,179.843 400.285,184.843 z").attr({
    id: 'kreis08226',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08226'});
regions.push(kreis08226);

var path_d = rsr.path(" M320.657,402.013c0.058-0.07,0.146-0.21,0.24-0.36C320.762,401.843,320.691,401.953,320.657,402.013z").attr({
    fill: '#BB9EA0',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data('id', 'path_d');

var kreis08215_2 = rsr.path(" M320.74,401.513c0.63-0.69,0.438-0.3,0.2,0.08c0.063-0.1,0.14-0.23,0.24-0.37c1.6-2.36,6.104-9.15,6.104-9.15l4.279-27.3l-1.3-3.16 l-0.17-3.31l4.18-7.35l1.011-7.354l3.119-2.06l0.21-0.513l0.521-0.341l3.33-7.89l-0.594-2.76l-3.25-0.11l-0.554,0.86l-0.188-0.014 l-1.21,1.91l-0.99,0.44l1.21-7.33l3.188-4.23l8.433-5.22l5.34-4.59l0.49-0.641l0.25-0.223l5.68-7.51l0.62-0.82l7.2-2.81 l0.938-0.853v0.053l10.649,6.688l1.58,4.54l5.39,1.9l1.82-3.32l9.21,4.229l-1.82,3.04l15.729,6.96l3.525-0.989l5.396,3.7l0.55-2.62 l8.779,5.199l9.329,1.21l7.052-5.271l2.561,4.82l4.813,1.357l3.42,10.893l12.72,2.59l5.934-0.71l4.764,4.49l-3.592,14.408 l1.422,2.619l3.233-2.908l3.687,5.647l-1.69,0.84l0.438,4.271l-2.25,0.56l-0.424,4.143l-1.116,2.211l4.93-0.29l6.49,0.54 l0.272-1.934l3.521-1.106l1.989,6.067l3.811,1.92l0.87,17.109l-7.61,1.391l1.83,0.973l-2.948,2.487l3.938,1.649l0.01,3.45h-0.42 l-13.1-0.67l1.407,1.79l-2.104,4.97l1.143,4.97l-6.195,0.221l-1.265,1.659l-3.938-0.54l-1.271-1.521l2.813-0.63l-2.96-2.61 l-7.04-0.81l-0.563,2l-4.922,1.396l-0.289-3.106l-5.193,4.089l0.154,3.04l-3.802,1.801l-0.39,7.729l1.698,3.856l-1.672,4.563 l-6.316,3.063l-3.67-3.71l-5.063,1.813l-5.771-0.671l-0.854-3.17l-2.131-3.16l-3.776,1.95l-0.817,6.617l-6.479-2.027l-3.091,0.421 l-5.04,3.34l-8.024-2.021l-3.055,6.5l-3.369,1.813l0.313,5.382l-3.34,4.158l-0.99-0.408l-2.688,0.897l-0.25,0.08l0.329-0.66 l1.328-2.659l-4.93-1.618l0.7-1.802l-6.62-1.198l-0.58-3.313l0.68-3.183l-1.13-0.961l-1.854-5.092l3.92-2.79l0.25-5.237 l3.354-1.396l-1.022-8.271l-3.12-2.473l-1.71-3.438l-1.98-1.359l-5.54-8.38l-1.55,0.699l0.86,1.65l-0.671,4.83l-2.229,3.88 l-2.271-2.88l-2.96-0.263l-8.819-12.221l2.74-10.09l-4.5,0.45l-2.23,3.737l-2.104,0.57l0.023,3.72l1.99,1.513l-2.229,3.46 l-5.229-2.301l-6.2-0.092l-5.92-1.33l-0.26,3.04l-3.94-0.25l0.687-2.897l-2.017-3.853l0.49-0.729 C320.691,401.573,320.713,401.543,320.74,401.513z").attr({
    id: 'kreis08215_2',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08215_2'});
regions.push(kreis08215_2);

var kreis08212 = rsr.path(" M320.157,402.333l2.018,3.85l-0.688,2.9l3.94,0.25l0.26-3.04l5.92,1.33l6.2,0.09l5.229,2.3l2.229-3.46l-1.99-1.51l-0.022-3.724 l2.104-0.566l2.23-3.74l4.5-0.45l-2.74,10.09l8.82,12.224l2.96,0.26l2.27,2.88l2.23-3.88l0.67-4.83l-0.86-1.65l1.55-0.696 l5.54,8.38l1.98,1.356l1.71,3.44l3.12,2.473l1.022,8.271l-3.354,1.397l-0.25,5.237l-3.92,2.79l1.854,5.09l1.131,0.961l-0.681,3.182 l0.58,3.313l6.62,1.199l-0.7,1.801l4.93,1.62l-1.324,2.659l-0.063-0.029l-5.61,1.279l-3.34,4.157l-16.438,0.66l-0.15-1.521 l-7.03-1.188l0.138-1.103l1.54-0.434l-0.021-3.17l2.79-3.473l-4.39-3.97l-8.396,5.17l-7.16,1.021l-2.272-3.566l0.12-2.49 l-2.83-2.04l-0.96,2.21l-4.53-3.55l-5.36-1.75l-4.54-4.647l-2.646,1.397l0.438,2.21l-3.8-0.107l-3.97-3.271l-1.24,2.353 l-4.49,1.147l-1.563-2.881l0.71-0.803l3.04-3.38l0.72-0.8l3.433-9.563l3.092-16.184l4.813-8.236l0.04-0.08c0,0,3.92-4.32,5.354-5.9 L320.157,402.333z").attr({
    id: 'kreis08212',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08212'});
regions.push(kreis08212);

var kreis08215 = rsr.path("M 300.173,445.74 299.462,446.543 301.031,449.423 305.521,448.273 306.762,445.923 310.731,449.193 314.531,449.303 314.093,447.093 316.74,445.693 321.281,450.343 326.641,452.093 331.173,455.643 332.133,453.433 334.963,455.473 334.843,457.963 337.115,461.531 344.281,460.513 352.673,455.343 357.061,459.313 354.271,462.781 354.293,465.949 352.753,466.383 352.615,467.483 359.651,468.673 359.803,470.193 376.24,469.531 379.575,465.369 385.191,464.093 385.253,464.119 384.923,464.781 385.173,464.699 385.198,464.781 384.657,468.369 386.651,472.503 383.731,477.073 391.173,476.753 390.213,480.763 387.691,481.323 383.941,488.523 379.031,489.933 378.651,496.563 381.213,500.823 376.361,510.369 373.843,510.673 368.681,515.393 362.521,516.949 364.222,519.699 365.24,525.213 370.157,529.613 370.601,530.013 354.891,529.013 354.093,533.853 350.303,532.773 351.115,530.003 345.74,523.281 345.698,522.723 345.271,516.393 341.722,511.173 339.351,512.013 336.431,515.353 332.762,512.619 328.133,512.793 325.941,518.473 316.771,511.653 314.948,512.49 309.463,510.063 307.271,500.829 303.311,497.423 306.222,493.393 304.651,490.643 306.141,484.281 312.553,478.983 323.075,479.173 324.861,473.49 311.593,466.293 305.133,466.773 304.981,465.393 297.382,463.943 297.361,462.293 293.842,461.213 293.743,451.281 294.311,450.763 294.452,450.483 299.891,445.603 z").attr({
    id: 'kreis08215',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08215'});
regions.push(kreis08215);

var kreis08216 = rsr.path(" M271.611,522.363l-0.021,0.067l-8.319,8.37l1.146,1.5l-2.33,4.856l0.841,0.684l-6.359,6.83l2.266,2.18l5.891,0.9l5.396,7.116 l3.527,3l1.313,5.229l-6.398,2.688l-0.12,2.762l-5.04-0.631l-6.854-0.479l-2.75,4.438l-1.08,3.188l-3.37-0.79l-0.159-2.34 l-6.119,2.96l2.239,0.391l0.159,1.659l5.188,1.183l6.188,3.104l1.392-0.7l4.608,0.091l3.527,2.723l4.723-3.093l8.352,10.271 l3.763-2.109l0.147,1.104l-1.37,2.908l0.841,0.688l2.354,11.147l12.012-0.25l9.29-7.683l-0.74-4.681l6.399-3.512l1.761-6.644 l-0.935-10.761l-4.79-3.54l-3.405-5.898l-2.813-0.812l-1.72-3.979l3.729-5.276l-0.183-4.145l1.11-1.802l-2.813-1.22l-2.22,2.37 l-1.566-3.16l-0.021-2.21l-2.801,0.17l-3.223,0.99l-1.607-7.305l-7.318-4.065l-2.698-3.563l-2.106-0.802l-0.16-1.93l-3.079,0.986 l-0.301-2.063L271.611,522.363z M285.071,636.829l-3.773-0.786l3.061-1.409l5.029,1.33l0.396-2.211l-4.342-1.619l-0.17-2.621 l2.229-0.16l-0.477-6.065l-3.5-0.646l-0.97,1.25l-8.37-0.188l-7.04-5.027l-5.87-0.631l0.676-2.771l-8.29-4.46l-3.489-0.1 l-1.359,3.188l-6.17-2.143l-10.88-10.08l-12.721-0.95l0.8-2.771l-1.271-1.078l-4.31,1.84l0.521-3.04l-1.971-1.08l-0.67,2.5 l-4.78-2.146l-7.84-1l1.762-4.301l2.924-1.143l0.524-2.5l-2.681-1.479l-0.729-2.473l-6.05-2.22c0.186-0.229,0.359-0.45,0.529-0.647 v-0.143l2.601-4.45l-0.8-6.891l1.229-7.212l3.021-1.771l9.109,1.119l4.721-3.369l0.063-0.312l0.605-0.438l1.859-9.971l4.17-1.513 l6.601,1.159l5.976-4.21l0.391-0.551l0.29-0.199l6.891-9.607l1.71-9.962l6.91-20.511l8.529-15.563l8.159-11.817l5.591-11.143 l12.511-4.271l1.88-1.473l-0.101-0.17l6.601-5.17l-0.564,0.521l0.102,9.934l3.521,1.077l0.021,1.648l7.6,1.448l0.15,1.382 l6.46-0.479l13.27,7.199l-1.774,5.684l-10.528-0.188l-6.41,5.301l-1.488,6.358l1.568,2.75l-2.91,4.029l3.96,3.407l2.19,9.229 l5.485,2.432l1.817-0.841l9.17,6.818l2.19-5.684l4.63-0.17l3.67,2.729l2.92-3.34l2.37-0.842l3.55,5.222l0.433,6.33l-0.229,1.67 l-2.66,0.567l-4.63-1.341l-3.95-3.147l-1.237,3.461l2.54,2.46l5.771,2.313l0.021,2.341l1.148,3.989l-2.95-0.938l-2.21,3.471 l3.933,1.897l2.829,3.432l3.921,0.107l3.594,11.843l-4.979,7.066l0.881,5.521l6.819-4.88l0.12-3.04l4.05-0.58l1.95-1.528 l4.771,0.932l2.818,3.159l-3.72,9.818l0.59,4.131l-1.104,3.318l-4.473,0.729l0.04,5.238l2.261,3.567l-2.221,1.948l-3.647-1.771 l-2.5,2.222l2.408,3.988l-0.198,11.87l-1.103,2.352l-2.521-0.938l-2.517,0.563l2.396,2.33l-2.341,4.989l-4.329-0.108l-1.24,2.358 l-0.58,0.17l-3.87,1.103l-3.771,0.028l0.461,5.38l-1.79,3.33l-5.71,1.699l-0.267,2.068l-5.146,1.432l3.1,3.83l-10.01,4.775 l-10.148,2.854l-13.271-1.813L285.071,636.829z").attr({
    id: 'kreis08216',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08216'});
regions.push(kreis08216);

var kreis08211 = rsr.path("M 312.948,570.74 313.883,581.503 312.115,588.143 305.722,591.653 306.463,596.329 297.172,604.013 285.161,604.263 282.811,593.113 281.972,592.423 283.342,589.513 283.191,588.409 279.431,590.523 271.081,580.253 266.361,583.343 262.831,580.619 258.222,580.531 256.831,581.233 250.641,578.133 245.452,576.949 245.292,575.293 243.053,574.903 249.172,571.943 249.331,574.281 252.702,575.073 253.781,571.883 256.531,567.443 263.391,567.923 268.431,568.553 268.553,565.793 274.952,563.103 273.641,557.869 270.111,554.869 264.712,547.753 258.821,546.853 256.561,544.673 262.922,537.843 262.081,537.159 264.411,532.303 263.271,530.803 271.592,522.433 271.611,522.363 274.962,523.503 275.262,525.563 278.342,524.573 278.502,526.503 280.611,527.303 283.311,530.863 290.632,534.933 292.243,542.233 295.462,541.24 298.262,541.073 298.281,543.281 299.851,546.443 302.071,544.073 304.883,545.293 303.771,547.093 303.948,551.233 300.222,556.513 301.941,560.49 304.753,561.303 308.157,567.199 z").attr({
    id: 'kreis08211',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08211'});
regions.push(kreis08211);

var kreis08235 = rsr.path("M 345.907,619.602 345.923,620.983 341.448,620.464 341.575,619.634 342.981,619.903 344.231,619.343 343.253,618.383 343.222,618.273 343.803,618.103 345.043,615.74 349.365,615.853 351.713,610.863 349.321,608.531 351.825,607.973 354.351,608.909 355.448,606.563 355.651,594.693 353.24,590.699 355.74,588.483 359.391,590.253 361.611,588.303 359.351,584.733 359.311,579.49 363.781,578.763 364.883,575.443 364.293,571.313 368.012,561.49 365.191,558.329 360.423,557.403 358.472,558.933 354.423,559.513 354.303,562.553 347.481,567.433 346.601,561.909 351.575,554.843 347.99,543.003 344.071,542.893 341.24,539.463 337.311,537.563 339.521,534.093 342.472,535.031 341.321,531.043 341.303,528.699 335.531,526.393 332.99,523.933 334.231,520.473 338.181,523.619 342.811,524.963 345.472,524.393 345.698,522.723 345.74,523.281 351.115,530.003 350.303,532.773 354.093,533.853 354.891,529.013 370.601,530.013 370.157,529.613 370.173,529.603 373.262,530.133 374.262,532.473 378.883,533.133 383.391,537.523 382.698,539.183 378.641,539.483 378.651,540.723 382.611,546.633 387.365,547.013 390.561,541.753 390.691,538.443 392.615,534.013 401.713,530.933 403.821,533.119 403.843,535.473 408.601,534.483 408.012,530.073 409.681,526.473 411.222,526.183 416.133,528.513 423.441,533.303 427.512,534.113 430.575,531.613 436.753,531.593 438.407,527.449 436.448,526.619 437.423,524.963 436.012,522.213 435.865,521.933 435.722,520.563 437.731,520.763 439.657,524.273 442.753,525.773 441.923,528.531 443.325,529.633 443.891,532.113 445.861,533.619 445.74,537.633 447.713,540.659 451.343,538.159 453.731,540.633 457.101,543.803 458.941,549.043 465.673,552.193 466.781,550.119 469.861,549.423 472.948,550.793 473.012,550.853 471.423,552.603 476.133,556.673 483.311,562.233 481.321,571.073 490.771,571.933 497.157,576.503 496.771,577.773 492.691,579.433 493.593,581.803 492.753,583.74 489.851,585.24 491.811,587.603 492.365,589.983 488.075,596.343 483.553,597.173 482.49,599.223 480.431,600.159 479.931,603.693 477.361,603.923 477.981,606.073 471.503,608.619 470.762,614.863 471.883,616.133 468.713,619.563 469.883,620.659 468.222,624.593 470.731,625.303 472.198,632.423 470.031,633.579 469.883,640.699 458.531,636.044 454.681,635.723 454.141,639.923 455.531,641.409 456.681,649.573 455.293,652.119 457.24,652.223 457.883,659.233 460.111,659.829 460.115,662.923 462.851,662.531 462.24,664.74 457.891,665.134 457.74,668.113 459.133,668.113 459.472,671.593 457.753,671.983 458.198,673.409 456.923,674.363 461.553,675.964 461.543,675.99 461.553,677.369 459.74,678.073 460.575,679.579 458.781,683.863 456.972,683.973 451.821,684.303 451.698,689.403 449.061,693.003 443.771,692.884 443.361,694.134 439.463,693.313 439.181,694.423 436.681,694.573 435.825,690.294 434.021,690.159 430.521,685.214 429.803,681.903 425.49,682.613 423.972,685.233 418.948,685.119 417.151,686.781 412.407,686.119 412.407,684.602 411.012,682.813 408.651,684.619 407.253,684.214 404.731,680.909 407.213,675.102 409.431,675.093 412.472,669.423 415.531,668.159 410.093,666.119 409.803,664.053 407.843,662.823 406.311,663.523 405.601,661.449 402.948,660.223 401.157,664.653 397.811,663.153 397.401,664.393 392.931,662.483 392.771,659.313 397.907,656.943 398.601,654.173 397.448,649.073 393.431,652.682 389.231,649.531 386.115,643.619 375.512,641.329 371.173,639.294 370.593,636.119 363.311,631.903 362.213,635.079 357.861,631.24 357.698,629.031 354.633,628.653 354.325,625.199 350.553,624.403 349.141,621.794 z").attr({
    id: 'kreis08235',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08235'});
regions.push(kreis08235);

var kreis08231 = rsr.path("M 435.865,521.933 436.012,522.213 435.731,522.353 432.512,522.363 430.391,519.753 428.012,519.213 427.321,522.523 425.781,522.393 422.963,520.329 416.781,517.603 414.803,513.199 413.948,512.369 418.851,511.113 418.698,507.659 420.657,507.653 422.031,500.473 420.061,498.543 420.181,495.233 417.781,490.553 415.673,490.423 414.681,488.773 415.222,484.363 421.941,480.733 423.923,483.353 426.74,485.823 432.781,486.213 431.651,484.281 437.101,479.013 444.543,479.813 446.923,476.49 453.521,476.74 456.481,478.253 459.441,483.49 458.061,490.813 463.262,494.103 463.972,497.143 467.481,496.443 469.157,495.053 468.753,499.613 469.472,505.949 473.963,509.119 472.99,511.323 464.441,513.423 461.093,517.433 461.24,521.983 458.157,523.103 454.512,521.593 455.061,518.973 451.133,517.603 449.593,517.613 450.157,520.093 452.115,520.079 452.271,522.423 454.803,525.183 453.407,527.943 450.053,528.233 445.99,529.49 444.861,527.829 444.293,524.659 441.191,521.773 441.611,520.119 438.391,520.823 437.731,520.763 435.722,520.563 z").attr({
    id: 'kreis08231',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08231'});
regions.push(kreis08231);

var kreis08236 = rsr.path("M 385.173,464.699 387.861,463.803 388.851,464.213 392.191,460.053 391.883,454.673 395.253,452.863 398.303,446.363 406.325,448.383 411.365,445.043 414.463,444.619 420.941,446.653 421.762,440.031 425.543,438.079 427.673,441.24 428.521,444.409 434.293,445.079 439.351,443.273 443.021,446.983 449.343,443.923 451.012,439.363 449.311,435.503 449.698,427.773 453.503,425.973 453.343,422.933 458.543,418.843 458.825,421.952 463.753,420.553 464.311,418.553 471.351,419.363 474.311,421.973 471.503,422.603 472.771,424.119 476.713,424.659 477.972,423.003 484.173,422.781 483.031,417.813 485.133,412.843 483.722,411.053 496.821,411.723 497.24,411.723 497.253,416.963 495.561,417.243 495.293,423.173 496.271,423.313 496.321,423.369 497.74,426.293 500.503,426.893 506.075,430.909 510.811,437.863 510.593,438.803 515.543,445.973 511.441,446.909 512.901,448.183 511.441,450.281 514.601,455.633 517.191,456.843 519.771,462.193 520.117,470.693 514.003,472.353 505.843,468.829 505.972,477.383 504.851,479.043 512.99,480.963 512.432,483.063 506.762,485.053 506.883,487.153 508.448,487.483 509.691,490.793 508.292,492.343 513.861,506.573 514.061,506.579 514.061,506.653 514.061,507.263 510.811,507.043 505.262,509.699 502.851,516.883 495.012,522.023 499.781,524.723 496.423,527.49 496.698,528.531 495.472,528.593 495.423,531.793 496.865,531.013 496.865,529.693 500.351,530.24 501.521,527.983 502.923,527.593 504.825,532.003 501.575,533.49 501.811,537.909 504.615,538.963 503.391,540.563 500.407,538.303 494.423,542.173 493.981,543.393 486.972,543.013 485.615,539.983 482.198,540.763 473.012,550.853 472.948,550.793 469.861,549.423 466.781,550.119 465.673,552.193 458.941,549.043 457.101,543.803 453.731,540.633 451.343,538.159 447.713,540.659 445.74,537.633 445.861,533.619 443.891,532.113 443.325,529.633 441.923,528.531 442.753,525.773 439.657,524.273 437.731,520.763 438.391,520.823 441.611,520.119 441.191,521.773 444.293,524.659 444.861,527.829 445.99,529.49 450.053,528.233 453.407,527.943 454.803,525.183 452.271,522.423 452.115,520.079 450.157,520.093 449.593,517.613 451.133,517.603 455.061,518.973 454.512,521.593 458.157,523.103 461.24,521.983 461.093,517.433 464.441,513.423 472.99,511.323 473.963,509.119 469.472,505.949 468.753,499.613 469.157,495.053 467.481,496.443 463.972,497.143 463.262,494.103 458.061,490.813 459.441,483.49 456.481,478.253 453.521,476.74 446.923,476.49 444.543,479.813 437.101,479.013 431.651,484.281 432.781,486.213 426.74,485.823 423.923,483.353 421.941,480.733 415.222,484.363 414.681,488.773 415.673,490.423 417.781,490.553 420.181,495.233 420.061,498.543 422.031,500.473 420.657,507.653 418.698,507.659 418.851,511.113 413.948,512.369 414.803,513.199 416.781,517.603 422.963,520.329 425.781,522.393 427.321,522.523 428.012,519.213 430.391,519.753 432.512,522.363 435.731,522.353 436.012,522.213 437.423,524.963 436.448,526.619 438.407,527.449 436.753,531.593 430.575,531.613 427.512,534.113 423.441,533.303 416.133,528.513 411.222,526.183 409.681,526.473 408.012,530.073 408.601,534.483 403.843,535.473 403.821,533.119 401.713,530.933 392.615,534.013 390.691,538.443 390.561,541.753 387.365,547.013 382.611,546.633 378.651,540.723 378.641,539.483 382.698,539.183 383.391,537.523 378.883,533.133 374.262,532.473 373.262,530.133 370.173,529.603 370.157,529.613 365.24,525.213 364.222,519.699 362.521,516.949 368.681,515.393 373.843,510.673 376.361,510.369 381.213,500.823 378.651,496.563 379.031,489.933 383.941,488.523 387.691,481.323 390.213,480.763 391.173,476.753 383.731,477.073 386.651,472.503 384.657,468.369 385.198,464.781 z").attr({
    id: 'kreis08236',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08236'});
regions.push(kreis08236);

var kreis08118 = rsr.path("M 506.762,485.053 512.432,483.063 512.99,480.963 504.851,479.043 505.972,477.383 505.843,468.829 514.003,472.353 520.117,470.693 519.771,462.193 517.191,456.843 514.601,455.633 511.441,450.281 512.901,448.183 511.441,446.909 515.543,445.973 510.593,438.803 510.811,437.863 506.075,430.909 500.503,426.893 497.74,426.293 496.321,423.369 499.762,421.933 500.031,419.553 512.031,422.079 513.611,423.619 514.448,421.473 516.932,421.523 518.512,423.293 522.731,421.903 522.682,423.503 525.883,424.223 525.941,421.023 533.713,422.293 533.367,427.753 541.821,431.119 544.012,429.683 543.003,427.199 547.561,427.643 546.553,429.633 557.641,428.923 557.253,423.233 558.213,419.043 572.231,415.913 570.658,410.333 579.231,410.293 582.093,414.383 586.151,415.213 588.231,413.453 594.821,416.063 592.948,420.693 597.825,426.173 608.021,427.573 609.883,425.369 613.311,427.313 615.158,431.403 621.981,428.063 624.293,427.733 625.932,426.633 625.867,425.973 623.003,425.303 622.793,422.043 628.408,423.883 630.74,419.973 632.262,420.483 632.071,424.393 634.432,425.781 644.972,422.903 647.271,424.073 648.981,420.983 653.543,421.233 654.031,423.323 661.141,420.993 662.198,423.143 668.682,422.843 669.021,422.853 668.963,425.103 664.963,426.183 663.031,428.383 664.031,431.753 656.191,433.983 649.923,440.903 645.021,441.383 644.731,443.143 651.531,444.281 659.361,453.253 659.972,455.963 658.658,457.503 650.948,458.793 646.762,465.563 637.658,465.253 637.198,466.573 641.351,469.619 642.173,474.869 646.158,474.673 649.24,476.449 652.74,474.253 656.698,479.023 655.173,481.281 657.351,485.013 662.361,482.393 662.521,483.159 660.432,486.079 655.481,488.103 648.972,487.733 648.021,486.24 641.321,489.031 635.343,497.503 637.281,502.813 633.883,509.043 625.303,510.273 622.611,508.943 617.593,516.763 617.472,516.683 614.673,515.949 614.343,513.303 613.271,512.909 613.231,508.223 609.141,507.053 608.293,508.483 605.198,509.909 605.861,513.943 601.49,514.863 600.075,516.24 593.908,515.343 589.651,513.403 589.99,512.079 588.262,511.409 588.031,509.923 584.281,509.693 584.271,512.073 581.691,511.403 581.463,513.393 583.432,514.443 584.601,517.973 581.463,517.973 583.861,521.063 582.843,525.973 575.158,528.173 568.658,522.423 566.361,523.909 564.948,529.923 562.883,532.463 566.182,535.113 565.173,541.013 562.981,542.449 562.531,545.763 566.391,548.693 564.762,555.031 562.633,555.693 562.901,561.883 560.101,561.213 559.821,561.023 554.512,557.403 551.262,547.903 551.771,544.699 547.512,540.233 550.367,537.753 549.762,535.369 551.325,534.823 551.101,533.003 552.391,531.949 551.553,529.303 545.611,525.443 538.722,525.99 535.633,523.513 534.343,523.343 531.99,524.723 527.673,523.843 526.213,525.053 524.641,521.023 523.293,520.363 525.141,516.393 523.633,512.753 516.611,506.683 514.061,506.579 513.861,506.573 508.292,492.343 509.691,490.793 508.448,487.483 506.883,487.153 z").attr({
    id: 'kreis08118',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08118'});
regions.push(kreis08118);

var kreis08111 = rsr.path("M 615.932,585.433 616.361,589.949 618.698,591.343 612.213,592.699 603.713,592.403 593.941,586.313 583.99,584.24 577.222,585.003 572.673,583.531 566.093,581.403 561.901,577.093 558.158,575.213 559.611,573.723 559.503,572.119 556.198,572.233 554.351,569.031 550.101,568.473 553.408,565.213 559.682,565.553 560.012,565.063 558.391,564.563 558.061,563.013 559.821,561.023 560.101,561.213 562.901,561.883 562.633,555.693 564.762,555.031 566.391,548.693 562.531,545.763 562.981,542.449 565.173,541.013 566.182,535.113 562.883,532.463 564.948,529.923 566.361,523.909 568.658,522.423 575.158,528.173 582.843,525.973 583.861,521.063 581.463,517.973 584.601,517.973 583.432,514.443 581.463,513.393 581.691,511.403 584.271,512.073 584.281,509.693 588.031,509.923 588.262,511.409 589.99,512.079 589.651,513.403 593.908,515.343 600.075,516.24 601.49,514.863 605.861,513.943 605.198,509.909 608.293,508.483 609.141,507.053 613.231,508.223 613.271,512.909 614.343,513.303 614.673,515.949 617.472,516.683 617.593,516.763 615.781,519.573 617.901,522.449 617.213,528.24 620.512,530.293 621.821,534.223 619.043,542.653 627.503,543.353 628.448,544.513 633.101,544.423 635.722,546.693 634.867,548.893 641.141,550.193 641.093,552.233 640.963,552.233 639.003,552.659 636.771,551.613 631.99,555.063 628.521,554.723 627.053,557.813 628.271,561.119 626.698,561.063 623.158,566.573 623.601,567.513 619.901,569.103 618.173,567.159 616.262,570.193 611.722,571.781 612.271,573.213 608.191,573.043 607.401,575.523 613.698,583.933 615.99,583.223 616.891,583.613 z").attr({
    id: 'kreis08111',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08111'});
regions.push(kreis08111);

var kreis08116 = rsr.path("M 566.408,596.909 570.441,594.823 572.561,595.263 575.253,593.503 571.512,590.133 573.24,589.579 571.061,586.543 570.391,587.483 568.271,585.933 572.641,583.613 572.673,583.531 577.222,585.003 583.99,584.24 593.941,586.313 603.713,592.403 612.213,592.699 618.698,591.343 616.361,589.949 615.932,585.433 616.891,583.613 615.99,583.223 613.698,583.933 607.401,575.523 608.191,573.043 612.271,573.213 611.722,571.781 616.262,570.193 618.173,567.159 619.901,569.103 623.601,567.513 623.158,566.573 626.698,561.063 628.271,561.119 627.053,557.813 628.521,554.723 631.99,555.063 636.771,551.613 639.003,552.659 640.963,552.233 641.093,552.233 641.071,552.893 648.793,556.183 655.053,552.843 657.843,554.183 664.448,554.053 664.575,550.683 663.361,548.023 666.182,545.393 672.423,551.053 675.173,559.903 679.222,556.613 678.731,555.173 681.325,551.653 684.753,550.683 689.941,553.909 692.753,552.443 696.311,556.433 700.173,555.909 701.198,561.103 702.843,562.423 702.867,562.383 705.825,564.613 698.133,576.383 699.891,582.073 696.571,584.423 699.781,589.193 698.432,594.433 700.321,604.823 705.932,609.603 715.253,608.393 719.981,610.803 719.851,617.483 713.617,620.693 713.611,622.134 723.713,623.753 732.463,629.781 733.883,632.99 730.932,635.393 733.673,642.432 732.481,651.393 728.133,651.634 722.191,661.863 723.463,663.74 727.861,664.159 729.481,667.659 723.867,668.159 723.575,670.044 717.543,673.079 712.793,673.884 712.731,675.262 714.003,676.923 711.972,680.003 706.031,676.044 705.432,673.773 704.151,673.714 705.133,677.909 703.281,678.563 704.111,679.449 702.601,680.602 701.383,679.762 702.191,676.512 698.173,676.983 698.722,678.313 695.821,678.073 693.133,679.602 693.303,680.602 690.571,679.363 695.343,675.093 695.351,673.369 698.575,673.563 699.093,671.863 690.821,667.393 690.222,665.233 685.932,664.384 682.231,666.781 679.173,665.49 673.861,668.829 672.303,668.273 667.101,671.403 665.043,669.673 659.253,669.813 656.698,666.044 649.521,663.143 647.222,666.99 644.432,666.602 643.658,664.053 641.213,663.932 643.24,658.313 639.851,656.031 643.321,653.182 643.561,649.843 640.325,647.449 635.74,650.363 634.271,654.579 626.408,655.012 620.948,653.182 621.061,651.964 616.053,648.579 611.851,654.579 605.781,651.531 605.682,645.903 602.561,643.634 602.512,641.973 605.141,641.199 605.651,638.563 604.99,636.119 598.503,638.593 597.111,635.723 587.463,635.323 587.293,635.313 584.851,628.794 592.617,625.99 591.793,621.409 594.811,621.531 585.731,606.773 584.173,606.103 578.253,602.619 578.093,601.233 579.601,600.303 575.908,599.023 575.117,600.073 569.198,598.573 567.24,599.903 568.133,601.443 565.561,601.329 565.571,598.619 z").attr({
    id: 'kreis08116',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08116'});
regions.push(kreis08116);

var kreis08115 = rsr.path("M 462.722,675.223 461.657,676.003 461.553,675.964 456.923,674.363 458.198,673.409 457.753,671.983 459.472,671.593 459.133,668.113 457.74,668.113 457.891,665.134 462.24,664.74 462.851,662.531 460.115,662.923 460.111,659.829 457.883,659.233 457.24,652.223 455.293,652.119 456.681,649.573 455.531,641.409 454.141,639.923 454.681,635.723 458.531,636.044 469.883,640.699 470.031,633.579 472.198,632.423 470.731,625.303 468.222,624.593 469.883,620.659 468.713,619.563 471.883,616.133 470.762,614.863 471.503,608.619 477.981,606.073 477.361,603.923 479.931,603.693 480.431,600.159 482.49,599.223 483.553,597.173 488.075,596.343 492.365,589.983 491.811,587.603 489.851,585.24 492.753,583.74 493.593,581.803 492.691,579.433 496.771,577.773 497.157,576.503 490.771,571.933 481.321,571.073 483.311,562.233 476.133,556.673 471.423,552.603 473.012,550.853 482.198,540.763 485.615,539.983 486.972,543.013 493.981,543.393 494.423,542.173 500.407,538.303 503.391,540.563 504.615,538.963 501.811,537.909 501.575,533.49 504.825,532.003 502.923,527.593 501.521,527.983 500.351,530.24 496.865,529.693 496.865,531.013 495.423,531.793 495.472,528.593 496.698,528.531 496.423,527.49 499.781,524.723 495.012,522.023 502.851,516.883 505.262,509.699 510.811,507.043 514.061,507.263 514.061,506.653 514.061,506.579 516.611,506.683 523.633,512.753 525.141,516.393 523.293,520.363 524.641,521.023 526.213,525.053 527.673,523.843 531.99,524.723 534.343,523.343 535.633,523.513 538.722,525.99 545.611,525.443 551.553,529.303 552.391,531.949 551.101,533.003 551.325,534.823 549.762,535.369 550.367,537.753 547.512,540.233 551.771,544.699 551.262,547.903 554.512,557.403 559.821,561.023 558.061,563.013 558.391,564.563 560.012,565.063 559.682,565.553 553.408,565.213 550.101,568.473 554.351,569.031 556.198,572.233 559.503,572.119 559.611,573.723 558.158,575.213 561.901,577.093 566.093,581.403 572.673,583.531 572.641,583.613 568.271,585.933 570.391,587.483 571.061,586.543 573.24,589.579 571.512,590.133 575.253,593.503 572.561,595.263 570.441,594.823 566.408,596.909 565.571,598.619 565.561,601.329 568.133,601.443 567.24,599.903 569.198,598.573 575.117,600.073 575.908,599.023 579.601,600.303 578.093,601.233 578.253,602.619 584.173,606.103 585.731,606.773 594.811,621.531 591.793,621.409 592.617,625.99 584.851,628.794 587.293,635.313 587.463,635.323 587.463,635.369 582.321,637.403 580.883,637.49 577.293,637.723 573.843,635.733 575.575,630.323 573.012,629.884 573.012,626.682 569.158,627.173 569.213,629.823 565.191,631.803 566.861,636.602 563.617,638.863 563.281,643.003 560.771,641.073 556.472,641.843 555.908,641.119 551.075,643.384 548.963,649.233 544.158,647.573 542.432,645.031 539.531,643.653 535.731,645.363 530.321,642.932 520.391,644.102 520.948,647.579 516.481,648.852 519.003,653.813 515.151,654.863 514.698,653.602 509.351,651.449 504.503,655.044 501.321,655.714 500.722,665.044 500.271,666.483 488.851,668.813 488.571,670.973 491.641,673.449 489.691,675.384 490.198,678.253 492.762,678.523 493.321,679.602 486.593,683.093 486.981,685.409 486.262,687.843 483.811,687.893 483.075,686.634 483.691,684.753 478.512,683.553 472.883,683.531 469.531,680.613 468.407,677.143 z").attr({
    id: 'kreis08115',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08115'});
regions.push(kreis08115);

var kreis08416 = rsr.path("M 461.553,675.964 461.657,676.003 462.722,675.223 468.407,677.143 469.531,680.613 472.883,683.531 478.512,683.553 483.691,684.753 483.075,686.634 483.811,687.893 486.262,687.843 486.981,685.409 486.593,683.093 493.321,679.602 492.762,678.523 490.198,678.253 489.691,675.384 491.641,673.449 488.571,670.973 488.851,668.813 500.271,666.483 500.722,665.044 501.321,655.714 504.503,655.044 509.351,651.449 514.698,653.602 515.151,654.863 519.003,653.813 516.481,648.852 520.948,647.579 520.391,644.102 530.321,642.932 535.731,645.363 539.531,643.653 542.432,645.031 544.158,647.573 548.963,649.233 551.075,643.384 555.908,641.119 556.472,641.843 560.771,641.073 563.281,643.003 563.617,638.863 566.861,636.602 565.191,631.803 569.213,629.823 569.158,627.173 573.012,626.682 573.012,629.884 575.575,630.323 573.843,635.733 577.293,637.723 580.883,637.49 580.883,637.553 580.731,642.384 579.325,645.693 579.031,653.829 582.803,656.053 586.825,660.053 586.963,664.613 593.793,662.829 595.043,667.113 594.053,674.281 590.981,675.943 588.753,673.449 583.311,676.063 582.191,682.949 588.158,690.563 580.071,694.823 577.141,699.653 582.981,702.003 581.441,706.829 583.253,707.803 578.932,712.762 575.303,718.973 577.101,720.49 575.99,721.733 578.213,725.182 585.851,729.329 584.311,734.023 582.222,734.023 578.74,737.74 579.851,740.093 577.481,740.909 578.031,743.813 575.673,744.363 576.781,745.884 579.281,745.602 579.691,749.214 579.825,750.443 574.003,748.773 572.883,751.393 568.158,752.352 569.271,750.143 565.101,751.803 565.658,753.323 560.383,754.003 561.49,751.653 556.49,752.483 557.053,750.273 560.24,749.449 560.101,747.932 554.408,749.303 548.432,749.99 539.408,748.063 536.633,745.159 537.883,741.983 535.383,742.119 533.851,745.294 528.99,742.949 523.698,745.443 521.901,744.613 520.793,741.573 507.173,738.693 503.003,739.384 501.325,736.352 498.543,735.943 496.883,737.602 494.101,736.503 496.043,732.773 494.781,728.079 484.771,730.303 482.141,732.653 471.713,732.134 470.031,727.579 461.431,728.143 463.771,725.803 459.448,723.063 461.531,720.153 461.101,717.393 464.441,717.113 465.133,715.173 465.133,712.964 467.633,712.949 468.74,710.884 475.691,707.003 477.633,705.619 481.391,705.193 477.615,701.619 475.681,702.449 472.883,697.352 470.512,696.393 470.365,693.903 464.521,694.473 461.021,686.343 456.972,684.829 456.972,683.973 458.781,683.863 460.575,679.579 459.74,678.073 461.553,677.369 461.543,675.99 z").attr({
    id: 'kreis08416',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08416'});
regions.push(kreis08416);

var kreis08237 = rsr.path("M 281.151,636.182 281.292,636.044 285.071,636.829 292.803,642.964 306.071,644.773 316.222,641.923 326.231,637.143 323.133,633.313 328.281,631.884 328.543,629.813 334.253,628.113 336.043,624.781 335.575,619.403 339.351,619.369 343.222,618.273 343.253,618.383 344.231,619.343 342.981,619.903 341.575,619.634 341.448,620.464 345.923,620.983 345.907,619.602 349.141,621.794 350.553,624.403 354.325,625.199 354.633,628.653 357.698,629.031 357.861,631.24 362.213,635.079 363.311,631.903 370.593,636.119 371.173,639.294 375.512,641.329 386.115,643.619 389.231,649.531 393.431,652.682 397.448,649.073 398.601,654.173 397.907,656.943 392.771,659.313 392.931,662.483 397.401,664.393 397.811,663.153 401.157,664.653 402.948,660.223 405.601,661.449 406.311,663.523 407.843,662.823 409.803,664.053 410.093,666.119 415.531,668.159 412.472,669.423 409.431,675.093 407.213,675.102 404.731,680.909 407.253,684.214 408.651,684.619 411.012,682.813 412.407,684.602 412.407,686.119 417.151,686.781 418.948,685.119 423.972,685.233 425.49,682.613 429.803,681.903 430.521,685.214 434.021,690.159 435.825,690.294 436.681,694.573 439.181,694.423 439.463,693.313 443.361,694.134 443.771,692.884 449.061,693.003 451.698,689.403 451.821,684.303 456.972,683.973 456.972,684.829 461.021,686.343 464.521,694.473 470.365,693.903 470.512,696.393 472.883,697.352 475.681,702.449 477.615,701.619 481.391,705.193 477.633,705.619 475.691,707.003 468.74,710.884 467.633,712.949 465.133,712.964 465.133,715.173 464.441,717.113 461.101,717.393 461.531,720.153 459.448,723.063 463.771,725.803 461.431,728.143 460.031,729.544 460.731,731.473 459.213,734.24 457.003,739.483 454.641,741.281 457.851,744.733 451.463,746.813 451.24,746.643 449.512,745.303 444.651,746.294 444.093,745.329 438.531,743.553 434.351,741.634 434.762,738.464 430.303,736.134 423.503,738.233 420.861,738.102 419.181,734.943 414.601,736.199 408.633,737.753 405.561,736.393 404.151,731.563 399.575,733.932 395.691,734.923 391.253,736.193 389.713,734.262 388.043,733.723 385.821,735.393 379.571,735.432 377.611,733.781 376.512,734.762 380.141,738.464 378.901,740.262 379.472,741.923 373.361,742.233 368.093,744.753 368.531,747.503 367.861,752.063 371.213,753.423 372.615,757.409 370.821,757.573 369.99,759.503 366.948,761.182 365.003,760.223 362.931,762.173 364.883,763.134 367.673,764.619 367.972,768.903 373.253,769.693 370.941,777.853 359.713,778.483 354.615,784.449 350.99,780.893 351.111,778.683 350.657,774.134 346.771,773.329 341.093,774.199 335.657,772.723 332.861,769.573 328.553,768.093 328.111,766.023 326.593,765.903 326.825,761.753 325.075,751.553 326.321,750.443 326.293,746.723 322.521,743.99 316.391,742.659 314.611,744.884 312.021,751.253 313.593,755.932 313.325,757.593 309.731,759.553 308.633,760.813 308.191,760.884 306.825,761.102 303.883,756.852 298.161,754.281 296.651,755.531 295.931,753.329 294.111,752.253 291.771,754.063 291.191,751.449 294.762,746.579 290.012,743.733 289.542,738.49 285.351,736.053 285.191,734.673 287.681,733.403 287.661,730.503 289.452,729.113 291.821,729.909 293.571,723.823 292.031,723.012 291.861,719.423 294.092,719.682 295.191,718.699 294.891,716.363 296.243,711.794 295.993,700.613 298.74,697.003 296.891,692.193 291.581,689.893 287.271,690.49 281.941,686.682 279.941,681.869 281.462,680.473 280.452,677.313 278.493,676.363 279.121,669.593 280.641,668.343 279.781,666.409 278.592,658.829 283.441,655.473 283.691,652.99 286.181,650.343 285.311,647.323 283.361,647.329 280.821,644.464 279.931,639.781 276.422,637.473 276.271,636.093 279.191,635.093 z").attr({
    id: 'kreis08237',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08237'});
regions.push(kreis08237);

var kreis08325 = rsr.path("M 308.633,760.813 309.731,759.553 313.325,757.593 313.593,755.932 312.021,751.253 314.611,744.884 316.391,742.659 322.521,743.99 326.293,746.723 326.321,750.443 325.075,751.553 326.825,761.753 326.593,765.903 328.111,766.023 328.553,768.093 332.861,769.573 335.657,772.723 341.093,774.199 346.771,773.329 350.657,774.134 351.111,778.683 350.99,780.893 354.615,784.449 359.713,778.483 370.941,777.853 373.253,769.693 367.972,768.903 367.673,764.619 364.883,763.134 362.931,762.173 365.003,760.223 366.948,761.182 369.99,759.503 370.821,757.573 372.615,757.409 371.213,753.423 367.861,752.063 368.531,747.503 368.093,744.753 373.361,742.233 379.472,741.923 378.901,740.262 380.141,738.464 376.512,734.762 377.611,733.781 379.571,735.432 385.821,735.393 388.043,733.723 389.713,734.262 391.253,736.193 395.691,734.923 399.575,733.932 404.151,731.563 405.561,736.393 408.633,737.753 414.601,736.199 419.181,734.943 420.861,738.102 423.503,738.233 430.303,736.134 434.762,738.464 434.351,741.634 438.531,743.553 444.093,745.329 444.651,746.294 449.512,745.303 451.24,746.643 449.262,752.619 450.512,753.313 449.821,755.794 453.303,756.329 453.448,761.443 446.803,764.503 443.191,765.613 442.231,769.343 436.407,771.573 444.611,774.863 445.181,777.753 433.543,783.323 427.99,783.063 426.198,785.829 426.351,787.353 421.907,788.613 421.781,790.683 424.981,793.153 432.061,793.263 433.593,795.603 431.365,796.159 427.793,800.593 433.753,801.813 437.793,805.803 440.423,806.199 441.401,808.403 439.325,809.793 437.948,812.829 439.151,817.383 441.503,817.369 442.198,819.173 439.575,821.113 439.722,823.449 440.972,823.449 443.213,829.933 448.061,832.253 452.633,833.353 450.851,839.983 444.907,842.763 447.151,848.823 454.351,850.869 455.463,854.043 455.633,853.99 456.021,856.933 453.543,858.043 453.691,860.813 451.891,862.193 449.821,861.793 448.303,863.863 441.383,863.329 438.633,867.199 433.941,870.119 433.948,873.303 431.753,874.553 426.901,872.223 419.053,878.329 420.441,880.531 417.262,880.693 418.101,882.619 411.061,885.273 408.181,888.603 406.657,889.433 405.575,894.133 406.825,896.473 406.753,896.543 405.321,897.863 399.651,897.063 399.641,894.853 395.351,893.223 398.512,888.369 396.012,885.903 396.271,883.143 395.293,882.323 393.781,884.119 386.698,876.983 389.575,872.409 389.825,869.103 391.222,869.643 391.633,868.263 384.561,864.853 385.512,862.223 379.825,860.603 381.753,858.523 378.253,850.673 366.198,849.233 365.633,846.063 369.49,844.24 369.071,843.143 365.061,844.409 362.021,843.883 361.198,845.683 359.383,843.483 357.601,845.153 356.071,843.923 351.503,843.263 351.24,846.159 354.713,848.353 353.071,851.263 355.303,852.893 354.213,855.531 349.503,854.043 347.673,850.329 342.271,850.093 341.431,848.443 339.503,848.603 334.222,846.983 325.948,850.909 318.771,852.633 316.431,853.763 313.657,852.673 313.093,850.883 309.601,847.603 307.423,850.933 302.293,850.293 302.561,849.053 301.031,848.369 301.003,848.353 305.262,842.119 307.481,841.963 310.213,837.803 311.021,827.863 306.571,825.553 304.561,817.699 306.883,813.949 303.407,812.603 303.391,810.949 305.571,806.103 302.923,804.053 303.99,800.463 302.681,793.699 300.891,794.693 299.462,790.423 309.021,788.273 314.293,788.909 314.401,785.183 316.615,785.853 313.851,770.281 312.012,766.159 309.361,763.973 308.222,761.093 308.191,760.884 z").attr({
    id: 'kreis08325',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08325'});
regions.push(kreis08325);

var kreis08417 = rsr.path("M 441.401,808.403 440.423,806.199 437.793,805.803 433.753,801.813 427.793,800.593 431.365,796.159 433.593,795.603 432.061,793.263 424.981,793.153 421.781,790.683 421.907,788.613 426.351,787.353 426.198,785.829 427.99,783.063 433.543,783.323 445.181,777.753 444.611,774.863 436.407,771.573 442.231,769.343 443.191,765.613 446.803,764.503 453.448,761.443 453.303,756.329 449.821,755.794 450.512,753.313 449.262,752.619 451.24,746.643 451.463,746.813 457.851,744.733 454.641,741.281 457.003,739.483 459.213,734.24 460.731,731.473 460.031,729.544 461.431,728.143 470.031,727.579 471.713,732.134 482.141,732.653 484.771,730.303 494.781,728.079 496.043,732.773 494.101,736.503 496.883,737.602 498.543,735.943 501.325,736.352 503.003,739.384 507.173,738.693 520.793,741.573 521.901,744.613 523.698,745.443 528.99,742.949 533.851,745.294 535.383,742.119 537.883,741.983 536.633,745.159 539.408,748.063 548.432,749.99 554.408,749.303 560.101,747.932 560.24,749.449 557.053,750.273 556.49,752.483 561.49,751.653 560.383,754.003 565.658,753.323 565.101,751.803 569.271,750.143 568.158,752.352 572.883,751.393 574.003,748.773 579.825,750.443 579.691,749.214 579.825,749.193 580.941,749.199 581.771,749.893 596.771,752.262 596.213,755.852 593.561,757.923 592.593,760.262 595.49,764.134 599.101,764.003 600.071,766.49 606.722,768.852 608.117,767.343 611.321,765.563 608.383,771.343 608.923,775.763 606.691,781.281 590.321,779.159 590.867,782.199 593.641,783.863 596.401,789.803 599.021,794.233 599.311,794.253 599.303,794.369 598.867,799.613 592.49,800.843 586.658,803.723 580.843,803.579 573.481,809.079 574.021,815.853 579.012,817.369 579.423,819.579 595.325,826.383 598.231,829.829 595.448,835.353 595.575,839.903 598.198,842.393 594.883,842.523 594.867,843.903 597.093,844.323 599.571,848.053 597.843,848.603 595.061,853.423 595.325,857.293 592.281,857.153 592.003,860.869 588.811,862.24 590.191,865.281 589.351,866.393 585.771,863.073 581.481,860.99 577.198,861.119 574.158,855.733 565.861,859.449 558.253,857.369 548.99,851.983 540.553,854.053 533.49,867.023 532.101,871.303 522.151,873.793 520.771,875.579 522.293,879.723 522.173,879.781 517.867,881.933 512.198,880.843 508.883,878.353 504.321,878.363 503.907,880.293 499.351,880.303 497.963,874.503 494.222,870.093 491.575,861.949 487.571,859.343 482.173,858.803 481.191,849.003 477.575,846.943 475.771,842.113 466.503,842.553 465.115,844.073 464.981,843.523 461.521,843.673 461.253,845.74 459.463,847.403 460.021,852.643 455.633,853.99 455.463,854.043 454.351,850.869 447.151,848.823 444.907,842.763 450.851,839.983 452.633,833.353 448.061,832.253 443.213,829.933 440.972,823.449 439.722,823.449 439.575,821.113 442.198,819.173 441.503,817.369 439.151,817.383 437.948,812.829 439.325,809.793 z").attr({
    id: 'kreis08417',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08417'});
regions.push(kreis08417);

var kreis08336 = rsr.path("M 73.601,1133.443 74.811,1130.323 74.462,1125.909 68.762,1120.909 65.861,1111.853 58.081,1105.643 53.331,1100.483 50.361,1095.433 50.481,1087.281 48.191,1081.531 48.401,1078.353 52.941,1074.353 53.531,1073.832 58.792,1068.623 59.922,1062.943 59.571,1058.659 59.502,1058.323 60.472,1058.063 64.081,1052.74 68.222,1042.733 69.891,1043.813 69.462,1046.433 73.121,1044.159 81.342,1043.053 81.202,1050.781 82.452,1051.723 93.342,1046.013 97.252,1042.213 99.901,1044.24 118.031,1036.213 131.592,1034.063 134.493,1035.113 136.262,1033.853 134.821,1029.593 138.521,1029.253 143.172,1027.803 143.952,1024.753 148.901,1024.683 149.803,1020.943 158.262,1016.263 156.281,1012.829 157.641,1011.713 161.081,1011.523 167.803,1005.633 168.571,1002.031 172.271,991.213 174.621,991.323 176.161,993.363 189.222,992.903 203.111,998.383 212.601,998.119 215.262,1001.543 214.202,1005.409 210.941,1008.49 213.962,1008.173 214.371,1009.99 208.303,1017.223 207.521,1031.863 209.592,1033.213 209.331,1045.223 205.641,1046.933 201.391,1046.983 198.303,1052.543 199.321,1057.223 198.411,1061.103 194.752,1064.873 201.851,1073.343 201.361,1077.763 199.641,1082.613 188.792,1092.013 182.502,1092.923 182.401,1095.409 179.271,1097.383 178.811,1104.013 173.311,1107.403 170.092,1107.173 169.212,1108.153 165.561,1106.693 166.542,1113.022 168.472,1114.373 167.861,1119.772 170.821,1125.659 175.502,1127.943 174.972,1129.193 175.941,1130.423 174.222,1135.253 172.132,1133.99 163.371,1134.123 162.712,1134.573 159.441,1136.803 154.651,1136.603 153.531,1134.963 150.781,1134.173 149.012,1134.613 148.922,1134.963 148.371,1135.103 146.042,1143.793 143.281,1145.74 143.252,1145.803 142.651,1146.233 140.952,1149.793 129.851,1153.409 129.422,1153.832 129.231,1153.893 127.672,1155.403 116.101,1157.093 108.911,1161.353 105.092,1161.553 99.042,1159.863 96.922,1155.063 93.342,1153.883 90.952,1150.193 88.181,1147.623 88.462,1146.883 92.092,1148.573 95.882,1146.159 101.911,1146.613 101.811,1146.082 102.521,1146.133 102.222,1144.483 103.512,1143.423 104.481,1145.193 104.861,1144.293 105.092,1144.699 106.281,1141.923 104.762,1140.983 103.191,1136.873 100.281,1135.123 102.581,1133.013 104.401,1130.753 106.021,1130.263 106.342,1129.863 106.632,1129.772 107.972,1128.093 103.882,1128.713 103.512,1129.159 103.271,1129.199 101.181,1131.733 99.553,1132.233 92.401,1130.013 91.811,1130.513 91.792,1130.503 90.441,1131.633 90.202,1133.293 83.831,1139.409 78.462,1139.233 78.391,1135.513 73.571,1133.522 z").attr({
    id: 'kreis08336',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08336'});
regions.push(kreis08336);

var kreis08337 = rsr.path("M 282.371,1123.753 281.243,1119.343 276.712,1118.153 273.571,1119.213 273.391,1119.531 272.871,1119.713 269.222,1126.353 266.252,1127.713 266.061,1127.973 265.561,1128.199 263.502,1131.073 262.321,1131.483 258.891,1130.553 254.132,1133.513 254.132,1133.573 253.441,1133.99 253.231,1136.393 246.081,1136.223 245.592,1136.713 245.391,1136.699 242.141,1139.923 242.061,1145.031 239.911,1148.49 235.271,1149.053 232.081,1145.643 228.952,1146.503 228.342,1146.963 228.271,1146.983 222.941,1151.003 214.382,1152.483 209.422,1149.923 201.771,1150.573 195.321,1149.003 194.722,1149.503 194.661,1149.483 192.632,1151.159 191.752,1155.332 190.621,1155.973 187.181,1154.363 183.081,1154.693 180.191,1153.353 178.061,1147.863 179.661,1144.24 178.512,1140.123 174.621,1135.613 174.611,1135.483 174.222,1135.253 175.941,1130.423 174.972,1129.193 175.502,1127.943 170.821,1125.659 167.861,1119.772 168.472,1114.373 166.542,1113.022 165.561,1106.693 169.212,1108.153 170.092,1107.173 173.311,1107.403 178.811,1104.013 179.271,1097.383 182.401,1095.409 182.502,1092.923 188.792,1092.013 199.641,1082.613 201.361,1077.763 201.851,1073.343 194.752,1064.873 198.411,1061.103 199.321,1057.223 198.303,1052.543 201.391,1046.983 205.641,1046.933 209.331,1045.223 209.592,1033.213 207.521,1031.863 208.303,1017.223 214.371,1009.99 214.401,1010.103 216.851,1008.003 217.101,1006.073 222.993,1004.199 222.972,1002.409 230.121,1002.449 234.321,1008.619 240.712,1027.723 248.851,1030.123 248.472,1033.433 246.002,1033.883 247.121,1035.522 250.681,1034.653 253.181,1037.383 255.792,1037.633 259.161,1044.082 260.391,1044.073 264.762,1041.949 265.292,1039.74 268.031,1039.433 269.481,1046.449 270.592,1047.553 270.382,1054.733 271.762,1055.263 272.111,1049.463 279.101,1048.153 284.601,1049.199 283.212,1046.873 279.911,1046.353 276.672,1037.963 278.962,1033.393 282.542,1033.763 280.592,1030.613 280.952,1026.053 277.053,1020.153 279.641,1018.199 283.231,1019.543 285.141,1018.281 283.871,1014.573 292.371,1012.273 291.231,1008.143 293.962,1005.773 303.173,1004.443 304.843,1007.603 308.825,1007.293 310.633,1008.933 315.311,1009.579 317.503,1008.593 330.311,1010.843 338.963,1009.659 343.325,1005.49 351.851,1005.013 352.948,1004.183 352.753,1003.643 352.811,1003.619 354.311,1003.063 363.843,1008.24 363.061,1015.563 369.383,1015.24 372.407,1016.463 374.74,1015.483 377.407,1024.443 375.231,1028.253 370.713,1030.763 370.311,1032.013 376.771,1032.24 378.698,1034.443 381.861,1034.423 382.843,1037.183 376.948,1040.522 376.003,1042.463 376.222,1042.603 373.865,1043.053 371.821,1044.173 369.753,1043.363 369.093,1043.909 369.012,1043.883 363.681,1048.343 361.793,1053.323 359.191,1055.272 356.481,1060.949 357.325,1064.531 358.713,1065.073 357.771,1068.213 355.361,1068.449 354.657,1068.949 354.611,1068.963 346.151,1075.103 341.941,1080.103 341.811,1081.903 344.012,1082.293 346.365,1086.409 345.391,1089.063 343.157,1089.943 343.053,1090.199 342.423,1090.449 341.481,1092.659 343.825,1096.103 347.941,1096.073 352.771,1101.409 358.811,1102.613 359.593,1102.193 361.948,1100.943 360.825,1107.293 362.615,1109.903 365.361,1109.613 364.803,1109.253 366.111,1109.113 364.181,1107.883 365.543,1106.49 364.861,1104.613 366.503,1104.772 366.713,1106.843 370.825,1108.332 370.851,1107.573 371.575,1107.832 371.633,1106.043 376.231,1105.531 379.383,1106.763 383.351,1106.183 383.472,1105.772 384.111,1105.683 384.651,1103.883 382.431,1098.653 383.575,1097.903 384.141,1099.553 386.343,1100.503 386.231,1099.623 387.101,1100.003 386.698,1096.781 393.713,1094.253 394.271,1096.733 398.391,1098.653 403.173,1095.99 403.24,1095.883 403.941,1095.49 405.351,1093.173 407.681,1093.633 408.521,1097.903 410.861,1098.863 415.543,1103.113 413.49,1109.24 408.673,1110.24 407.698,1109.003 408.031,1108.133 409.803,1107.423 409.811,1107.223 410.571,1106.923 410.698,1104.573 408.503,1102.793 408.093,1103.582 407.731,1103.293 406.641,1105.363 404.191,1108.003 405.391,1116.143 407.463,1120.949 406.657,1124.133 401.753,1128.031 399.901,1130.24 393.891,1128.823 395.561,1123.531 396.793,1123.082 396.698,1122.903 397.561,1122.593 396.181,1119.843 394.115,1119.713 393.141,1116.543 386.561,1115.332 386.141,1113.133 379.141,1111.933 379.071,1112.543 378.391,1112.423 377.907,1116.793 376.157,1117.193 376.157,1117.522 375.407,1117.693 375.423,1119.613 371.115,1121.643 367.691,1120.843 367.24,1121.403 366.941,1121.332 362.521,1126.893 359.24,1127.522 359.321,1127.853 358.49,1128.013 359.901,1133.803 362.24,1136.823 369.213,1134.983 370.731,1138.013 369.191,1139.473 365.753,1139.49 365.198,1139.983 365.003,1139.983 363.293,1141.503 359.472,1142.303 351.003,1145.263 341.657,1140.082 338.231,1139.553 337.941,1140.113 337.503,1140.043 334.843,1145.133 328.821,1143.49 316.907,1142.903 311.657,1137.153 307.811,1134.832 306.012,1132.363 306.771,1125.043 301.401,1122.463 295.661,1123.763 294.401,1120.873 287.292,1122.323 286.972,1122.733 286.592,1122.813 284.231,1125.843 283.351,1125.949 z").attr({
    id: 'kreis08337',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08337'});
regions.push(kreis08337);

var kreis08327 = rsr.path("M 418.963,1003.313 413.698,996.773 408.463,992.943 412.843,987.263 407.931,983.143 404.762,982.329 402.111,975.99 404.448,974.043 404.303,972.253 401.948,970.893 401.615,959.983 407.253,956.233 414.843,957.159 415.673,958.673 417.448,956.183 418.401,951.893 420.325,952.031 420.865,950.923 417.825,947.763 417.821,945.963 422.521,949.119 421.543,945.531 425.681,946.483 423.021,936.143 425.901,933.093 418.99,930.233 418.571,927.463 415.657,925.409 416.762,923.199 420.043,915.869 418.231,912.013 416.431,911.053 417.657,908.293 411.553,902.103 406.753,896.543 406.825,896.473 405.575,894.133 406.657,889.433 408.181,888.603 411.061,885.273 418.101,882.619 417.262,880.693 420.441,880.531 419.053,878.329 426.901,872.223 431.753,874.553 433.948,873.303 433.941,870.119 438.633,867.199 441.383,863.329 448.303,863.863 449.821,861.793 451.891,862.193 453.691,860.813 453.543,858.043 456.021,856.933 455.633,853.99 460.021,852.643 459.463,847.403 461.253,845.74 461.521,843.673 464.981,843.523 465.115,844.073 466.503,842.553 475.771,842.113 477.575,846.943 481.191,849.003 482.173,858.803 487.571,859.343 491.575,861.949 494.222,870.093 497.963,874.503 499.351,880.303 503.907,880.293 504.321,878.363 508.883,878.353 512.198,880.843 517.867,881.933 522.173,879.781 524.923,887.733 531.003,890.903 536.803,897.943 533.901,903.733 528.512,905.253 520.367,904.699 519.948,902.773 516.503,903.463 516.093,909.403 522.303,911.053 520.923,917.403 523.963,917.949 524.231,915.329 525.891,912.983 528.101,912.573 530.031,915.74 539.972,919.613 542.173,930.513 539.963,931.893 539.821,934.103 543.543,937.409 544.367,942.449 541.198,944.24 542.158,949.073 544.093,950.733 541.74,955.699 544.075,958.463 541.601,960.943 541.731,963.573 541.74,963.699 535.262,964.949 531.408,962.74 529.198,966.74 530.441,969.363 528.512,970.329 525.617,969.093 522.731,965.223 513.093,970.199 506.071,971.173 505.101,973.933 497.811,975.603 493.271,980.853 492.181,985.409 486.963,991.773 479.931,990.543 477.181,987.653 478.543,981.023 477.981,977.153 479.49,974.119 477.825,968.603 471.641,974.133 473.031,977.99 470.431,983.659 474.698,988.073 467.531,983.943 463.681,983.823 460.793,985.763 459.281,985.353 449.383,988.553 446.325,980.49 443.722,983.813 444.012,987.329 441.061,991.353 436.571,986.883 435.271,989.093 437.907,996.053 437.383,1000.883 434.361,1001.723 435.325,1005.173 424.481,1007.423 422.821,1005.079 420.883,1003.159 418.963,1003.723 418.803,1003.643 z").attr({
    id: 'kreis08327',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08327'});
regions.push(kreis08327);

var kreis08335 = rsr.path("M 608.198,1090.983 608.593,1088.113 604.271,1082.293 600.601,1080.513 599.401,1077.863 597.753,1077.253 597.867,1075.483 598.423,1073.653 595.867,1061.99 590.867,1059.323 587.691,1055.013 585.553,1055.781 581.651,1054.883 577.151,1049.733 569.021,1046.463 564.075,1043.313 558.531,1037.503 554.851,1031.813 548.531,1027.383 551.891,1021.633 559.762,1022.973 561.673,1026.643 564.658,1023.763 562.883,1020.723 564.391,1017.553 563.303,1014.923 560.553,1012.443 560.423,1007.193 559.191,1003.74 560.698,1001.813 565.383,1002.503 567.99,1007.063 571.012,1010.103 574.031,1009.143 575.543,1010.523 579.262,1007.773 579.271,1007.513 579.408,1004.183 576.383,1001.693 579.825,1000.043 582.713,1001.433 582.713,1000.323 580.521,998.531 583.408,996.183 585.762,993.983 586.191,984.463 586.883,983.633 585.512,982.943 579.722,982.369 574.771,978.923 572.021,978.363 569.553,974.773 561.843,973.24 558.673,973.793 560.472,966.199 564.472,961.933 561.031,960.823 553.031,964.263 541.74,963.573 541.731,963.573 541.74,963.699 535.262,964.949 531.408,962.74 529.198,966.74 530.441,969.363 528.512,970.329 525.617,969.093 522.731,965.223 513.093,970.199 506.071,971.173 505.101,973.933 497.811,975.603 493.271,980.853 492.181,985.409 486.963,991.773 479.931,990.543 477.181,987.653 478.543,981.023 477.981,977.153 479.49,974.119 477.825,968.603 471.641,974.133 473.031,977.99 470.431,983.659 474.698,988.073 467.531,983.943 463.681,983.823 460.793,985.763 459.281,985.353 449.383,988.553 446.325,980.49 443.722,983.813 444.012,987.329 441.061,991.353 436.571,986.883 435.271,989.093 437.907,996.053 437.383,1000.883 434.361,1001.723 435.325,1005.173 424.481,1007.423 422.821,1005.079 420.883,1003.159 418.963,1003.723 418.803,1003.643 415.553,1010.223 413.543,1023.199 410.941,1025.843 410.851,1029.24 411.053,1029.313 413.543,1032.753 413.271,1035.933 412.503,1036.449 412.503,1036.463 411.633,1037.053 412.325,1040.49 413.851,1041.313 412.633,1046.153 415.948,1050.143 420.851,1047.233 423.111,1043.449 421.731,1043.183 421.99,1039.183 420.611,1036.013 421.963,1031.313 422.657,1031.073 422.74,1030.781 425.615,1029.803 426.053,1033.943 432.383,1037.233 435.293,1043.013 434.343,1044.813 435.731,1050.473 437.601,1051.873 438.793,1049.873 439.423,1049.613 439.571,1049.353 444.24,1047.403 449.191,1049.449 449.191,1051.393 452.222,1053.173 452.923,1056.073 452.031,1056.223 452.115,1056.593 446.931,1057.503 444.141,1061.073 442.923,1065.223 444.713,1067.563 451.173,1070.853 450.031,1078.082 449.771,1082.963 458.615,1084.363 463.021,1087.659 468.512,1091.373 469.731,1091.373 469.075,1089.531 471.673,1084.143 472.361,1083.863 472.472,1083.633 474.883,1082.653 471.262,1081.103 470.561,1078.213 461.365,1076.303 462.321,1073.403 461.771,1071.473 467.383,1066.073 467.641,1066.073 468.181,1065.553 470.948,1065.543 470.941,1062.473 471.74,1061.99 471.74,1061.949 474.071,1060.563 475.731,1064.153 475.731,1065.531 474.931,1066.053 473.811,1066.781 476.561,1067.883 478.49,1070.082 480.963,1070.082 478.49,1072.843 481.698,1073.909 483.173,1072.803 483.24,1072.843 483.981,1072.281 487.553,1074.213 488.101,1077.24 495.24,1076.543 496.343,1077.643 495.383,1079.031 497.441,1081.233 496.481,1082.343 496.075,1082.383 495.673,1082.853 492.793,1083.133 492.923,1080.781 489.24,1081.24 489.351,1082.633 491.133,1082.763 488.941,1088.573 492.365,1089.393 496.771,1094.213 497.521,1100.573 497.611,1100.593 503.593,1102.409 510.003,1101.233 514.222,1098.803 518.281,1099.353 518.448,1098.24 525.191,1093.933 529.521,1093.153 530.571,1090.503 535.231,1088.403 539.133,1084.803 540.611,1081.103 537.198,1076.022 529.633,1073.363 524.021,1069.281 518.923,1066.74 518.908,1063.199 521.222,1061.323 525.781,1061.213 528.198,1062.643 530.231,1062.093 543.408,1069.723 543.963,1068.503 538.472,1062.643 535.173,1061.813 533.191,1059.763 533.803,1058.053 536.771,1058.503 542.043,1062.813 572.343,1078.693 574.141,1084.832 568.561,1084.723 567.825,1084.713 557.463,1077.022 556.691,1078.073 554.99,1076.022 552.031,1075.133 553.117,1082.713 565.793,1087.423 568.543,1085.983 575.401,1086.159 578.075,1090.031 579.012,1094.449 584.543,1096.449 587.682,1094.409 589.629,1094.038 590.253,1095.753 590.182,1095.723 593.99,1100.74 599.401,1101.582 598.408,1100.133 597.553,1096.043 597.617,1095.743 597.932,1095.983 601.503,1095.603 606.867,1097.281 610.441,1095.573 z").attr({
    id: 'kreis08335',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08335'});
regions.push(kreis08335);

var kreis08326 = rsr.path("M 252.632,927.531 252.571,927.553 251.771,924.923 249.972,924.113 246.592,917.659 246.561,915.183 249.842,912.24 249.371,906.593 245.481,904.563 244.342,900.99 251.331,896.353 256.743,899.063 260.882,898.733 262.922,895.531 256.243,891.063 258.382,884.133 254.151,876.173 250.661,873.183 249.632,867.119 254.851,863.883 252.922,851.903 262.821,846.683 267.411,841.673 276.821,848.74 275.731,850.693 278.361,851.073 278.531,853.973 282.691,855.031 287.042,847.133 287.811,840.773 300.891,848.513 301.003,848.353 301.031,848.369 302.561,849.053 302.293,850.293 307.423,850.933 309.601,847.603 313.093,850.883 313.657,852.673 316.431,853.763 318.771,852.633 325.948,850.909 334.222,846.983 339.503,848.603 341.431,848.443 342.271,850.093 347.673,850.329 349.503,854.043 354.213,855.531 355.303,852.893 353.071,851.263 354.713,848.353 351.24,846.159 351.503,843.263 356.071,843.923 357.601,845.153 359.383,843.483 361.198,845.683 362.021,843.883 365.061,844.409 369.071,843.143 369.49,844.24 365.633,846.063 366.198,849.233 378.253,850.673 381.753,858.523 379.825,860.603 385.512,862.223 384.561,864.853 391.633,868.263 391.222,869.643 389.825,869.103 389.575,872.409 386.698,876.983 393.781,884.119 395.293,882.323 396.271,883.143 396.012,885.903 398.512,888.369 395.351,893.223 399.641,894.853 399.651,897.063 405.321,897.863 406.753,896.543 411.553,902.103 417.657,908.293 416.431,911.053 418.231,912.013 420.043,915.869 416.762,923.199 415.657,925.409 418.571,927.463 418.99,930.233 425.901,933.093 423.021,936.143 425.681,946.483 421.543,945.531 422.521,949.119 417.821,945.963 417.825,947.763 420.865,950.923 420.325,952.031 418.401,951.893 417.448,956.183 415.673,958.673 414.843,957.159 407.253,956.233 401.615,959.983 401.948,970.893 404.303,972.253 404.448,974.043 402.111,975.99 404.762,982.329 407.931,983.143 412.843,987.263 408.463,992.943 413.698,996.773 418.963,1003.313 418.803,1003.643 415.553,1010.223 413.543,1023.199 410.941,1025.843 410.851,1029.24 410.553,1029.123 405.963,1028.653 405.325,1029.199 405.191,1029.183 403.825,1030.383 402.383,1028.943 398.401,1029.933 397.293,1026.903 394.811,1026.909 394.691,1027.443 394.053,1027.449 392.571,1033.943 397.391,1035.573 397.923,1039.409 394.74,1040.313 391.303,1037.983 383.762,1041.063 382.101,1040.653 381.713,1041.281 381.351,1041.193 379.781,1043.74 378.115,1042.293 377.575,1042.343 376.222,1042.603 376.003,1042.463 376.948,1040.522 382.843,1037.183 381.861,1034.423 378.698,1034.443 376.771,1032.24 370.311,1032.013 370.713,1030.763 375.231,1028.253 377.407,1024.443 374.74,1015.483 372.407,1016.463 369.383,1015.24 363.061,1015.563 363.843,1008.24 354.311,1003.063 352.811,1003.619 352.753,1003.643 351.691,1000.74 352.601,993.409 347.213,990.003 346.351,985.593 341.383,983.563 344.115,981.613 343.151,979.683 324.963,968.781 325.907,966.983 312.075,960.199 311.771,956.753 296.752,956.063 299.342,952.723 305.115,951.983 313.311,943.213 313.271,937.693 310.361,936.199 303.633,938.883 297.821,937.143 297.262,936.323 280.002,934.003 278.661,937.613 273.722,940.553 272.191,938.781 270.922,936.031 261.542,935.443 261.661,933.233 256.811,931.763 z").attr({
    id: 'kreis08326',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08326'});
regions.push(kreis08326);

var kreis08316 = rsr.path(" M69.743,876.573c-0.186-1.71-0.08,0.147-0.149-0.723c-0.079-0.867-0.29-3.479-0.29-3.479l1.25-1.62l2.921-1.721l0.354-0.472 l0.25-0.148l3.102-4.188l-0.659-6.341l0.761-3.736l8.935-11.49l5.521-13.04l6.563-5.46l0.04-0.146l0.564-0.479l4.359-16.271 l4.979-1.08l3.021-1.434l2.511,0.65l6.358,7.896l1.021,3.158l11.461-2.813l3.75,1.04l-0.367,2.631l3.182-0.185l9.091,5.384 l5.184-5.475l4.723,0.765l12.26,5.34l10.551,1.79l-0.105,1.79l-4.698,1.025l1.408,1.225l8.182,1.13l0.818-1.107l4.75,3.66 l4.132-1.58l5.567,1.857l8.105-4.107l-3.396-5.75l7.83-5.342l4.17,0.632l0.188,4.14l6.938,1.435l1.222-2.222l4.563-0.473 l4.736,2.29l3.66,5.62l3.75,1.328l5.38-2.398l1.762-3.75l2.778,1.632l5.21-5.722l4.302,1.33l2.303,7.567l5.021,3.947l-2.027,3.883 l-0.093,4.696l-4.59,5.014l-9.897,5.22l1.934,11.979l-5.222,3.24l1.025,6.063l3.49,2.985l4.229,7.961l-2.144,6.934l6.683,4.473 l-2.039,3.197l-4.144,0.33l-5.41-2.71l-6.986,4.643l1.144,3.567l3.891,2.028l0.474,5.646l-3.278,2.938l0.028,2.479l3.381,6.448 l1.802,0.813l0.801,2.633l0.21,0.672l-4.301-1.61l-2.813-5.21l-1.409-2.607l-3.92-5.341l-2.068,0.579l0.25-2.479l-5.25-0.645 l-0.898-6.33l-2.938-3.275l-3.858,0.46l-1.355,1.946l-29.989-2.646l-2.301,3.34l-9.724-3.729l-0.986,8.566l-2.211-0.79 l-0.053-3.182l-3.46-1.051l-3.012,1.971l-10.92-0.938l-3.063,1.317l-0.229,0.104l-3.479-2.014l-4.647-6.276l-1.448-0.908 l-11.449-7.171l-0.369,2.486l-3.5-2.852l-6.479,0.659l2.642-7.631l-3.54-5.882l-6.051,2.313l-3.329-1.188l-7.433,2.328l-0.188-3.17 l-3.479-2.012l-7.144,3.159l-5.646,0.646l-3.631-2.013l-9.34,2.933l-2.383-1.479l-3.711,0.76l-3.868-2.351 C69.771,876.853,69.752,876.699,69.743,876.573z").attr({
    id: 'kreis08316',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08316'});
regions.push(kreis08316);

var kreis08315 = rsr.path(" M252.632,927.531l4.181,4.229l4.854,1.472l-0.119,2.211l9.38,0.59l1.271,2.75l1.527,1.771l4.938-2.938l1.341-3.606l17.261,2.316 l0.563,0.817l5.812,1.739l6.729-2.684l2.91,1.488l0.04,5.521l-8.188,8.771l-5.778,0.739l-2.591,3.34l15.021,0.689l0.313,3.447 l13.829,6.777l-0.948,1.802l18.188,10.897l0.973,1.933l-2.739,1.947l4.97,2.026l0.86,4.41l5.39,3.41l-0.906,7.328l1.063,2.897 l0.198,0.539l-1.104,0.829l-8.521,0.479l-4.369,4.17l-8.65,1.182l-12.81-2.25l-2.19,0.99l-4.68-0.646l-1.801-1.644l-3.989,0.313 l-1.67-3.159l-9.211,1.329l-2.729,2.369l1.14,4.131l-8.5,2.302l1.271,3.71l-1.909,1.262l-3.591-1.341l-2.595,1.948l3.898,5.898 l-0.358,4.563l1.949,3.146l-3.58-0.369l-2.289,4.567l3.238,8.394l3.301,0.521l1.396,2.329l-5.5-1.052l-6.989,1.313l-0.354,5.801 l-1.38-0.526l0.21-7.183l-1.104-1.103l-1.45-7.021l-2.739,0.313l-0.525,2.209l-4.369,2.117l-1.229,0.014l-3.369-6.45l-2.604-0.25 l-2.5-2.729l-3.563,0.87l-1.118-1.644l2.475-0.447l0.381-3.313l-8.144-2.398l-6.394-19.102l-4.2-6.172l-7.146-0.038l0.021,1.788 l-5.89,1.868l-0.25,1.934l-2.45,2.104l-0.029-0.107l-0.405-1.819l-3.021,0.319l3.261-3.079l1.063-3.87l-2.659-3.42l-9.49,0.261 l-13.891-5.479l-13.063,0.46l-1.539-2.038l-2.352-0.108l-3.7,10.818l-0.771,3.602l-6.726,5.894l-3.438,0.188l-1.36,1.119 l1.979,3.433l-8.46,4.683l-0.898,3.737l-4.95,0.067l-0.774,3.053l-4.648,1.447l-3.699,0.342l1.438,4.261l-1.771,1.263l-2.896-1.052 l-13.563,2.146l-18.131,8.029l-2.646-2.029l-3.909,3.802l-10.895,5.711l-1.25-0.938l0.145-7.729l-8.224,1.108l-3.657,2.271 l0.432-2.62l-1.67-1.078l-4.145,10.012l-3.605,5.316l-0.972,0.264l-0.08-0.342l-5.25-13.291l-0.513-5.104l6.107-19.312l4.25-7.949 l1.12-6.932l-2.95-10.71l1.762-5.75l4.778-2.938l0.143-0.271l0.447-0.276l2.399-4.604l-1.171-11.438l1.438-4.721l6.882-8.271 l4.813-8.511l0.606-4.854l-3.908-10.563l-13.75-16.729l1.75-10.106l-1.778-14.33l3.858-7.938c0,0-0.462-4.369-0.672-6.369 l3.866,2.354l3.711-0.761l2.383,1.479l9.342-2.932l3.631,2.012l5.646-0.646l7.146-3.158l3.479,2.011l0.189,3.17l7.43-2.329 l3.33,1.188l6.051-2.313l3.54,5.882l-2.641,7.63l6.479-0.657l3.5,2.853l0.369-2.488l11.449,7.17l-7.59,5.738l-2.79,16.33 l-5.432,5.608l-12.133-8.229l-0.188-3.311l-9.2,2.906l-0.91,3.329l0.813,7.58l-9.25,7.607l2.119,3.143l-2.238,6.107l-3.7,1.58 l-0.896,3.739l4.855,2.261l4.53-1.182l2.64,1.606l9.78-8.853l8.659-1.521l16.119,8.438l6.407-4.521l3.857,0.357l-0.646,2.353 l4.577,2.421l2.712,6.313l6.737-0.238L167,966.316l-2.078-1.356l-1.937,9.7l2.54,4.235l5.384,1.021l3.525-3.778l4.381-1.852 l-1.33-6.474l5.305-5.039l0.762-5.527l-3.393-5.62l0.381-2.479l2.195-0.856l-2.826-5.068l3.565-1.432l1.313-14.92l-2.229-2.04 l-7.41,3l-7.329-1.552l-1.688-2.737l0.948-0.842l7.062,1.829l-2.101-2.172l-2.646-1.479l-2.524-3.28l-6.528-3.487l-1.771-7.433 l-0.04-0.102l3.063-1.318l10.92,0.938l3.01-1.974l3.46,1.054l0.055,3.182l2.211,0.79l0.984-8.569l9.726,3.729l2.302-3.343 l29.988,2.648l1.354-1.949l3.86-0.46l2.938,3.278l0.9,6.329l5.25,0.643l-0.25,2.479l2.068-0.58l3.92,5.342l1.405,2.608l2.813,5.21 l4.3,1.606l-0.21-0.67L252.632,927.531z").attr({
    id: 'kreis08315',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08315'});
regions.push(kreis08315);

var kreis08311 = rsr.path("M 158.542,906.673 160.311,914.103 166.842,917.593 169.371,920.869 172.012,922.353 174.111,924.523 167.053,922.693 166.101,923.531 167.792,926.273 175.121,927.823 182.531,924.823 184.762,926.863 183.452,941.781 179.882,943.213 182.712,948.281 180.512,949.143 180.132,951.619 183.521,957.24 182.762,962.773 177.462,967.813 178.792,974.281 174.411,976.133 170.882,979.909 165.502,978.893 162.962,974.653 164.891,964.949 166.972,966.313 167.531,957.053 160.792,957.293 158.081,950.983 153.502,948.563 154.151,946.213 150.292,945.853 143.882,950.369 127.762,941.933 119.101,943.449 109.321,952.303 106.681,950.693 102.151,951.869 97.292,949.613 98.191,945.869 101.891,944.293 104.132,938.183 102.012,935.043 111.262,927.433 110.452,919.853 111.361,916.523 120.561,913.613 120.752,916.923 132.882,925.153 138.311,919.543 141.101,903.213 148.691,897.473 150.141,898.383 154.792,904.659 158.271,906.673 158.502,906.573 z").attr({
    id: 'kreis08311',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08311'});
regions.push(kreis08311);

var kreis08317 = rsr.path(" M103.321,806.74l3.266-12.066l0.671-9.54l2.989-4.188l10.534-4.37l0.556-0.619l0.064-0.027l3-3.356l0.479-4.433l-3.899-17.881 l-0.561-8.974l1.13-7.188l10.131-27.369l0.72-15.301l8.766-5.434l0.188-0.42l0.439-0.271l3.771-8.34l-1.66-8.121l1.24-10.104 l-2.261-10.591l1.146-6.647l8.477-12.408l3.681-13.169l5.353-1.724l10.521-6.5l0.539-0.646l0.109-0.068 c0,0,16.312-19.642,22.564-27.146l6.05,2.221l0.729,2.472l2.681,1.479l-0.524,2.5l-2.926,1.142l-1.76,4.302l7.84,1l4.78,2.147 l0.67-2.5l1.97,1.08l-0.52,3.039l4.31-1.84l1.271,1.08l-0.8,2.771l12.721,0.95l10.88,10.08l6.17,2.141l1.359-3.188l3.488,0.102 l8.286,4.46l-0.671,2.771l5.87,0.63l7.04,5.03l8.37,0.188l0.97-1.25l3.5,0.648l0.477,6.065l-2.229,0.158l0.17,2.621l4.342,1.618 l-0.396,2.212l-5.029-1.33l-3.061,1.409l-0.146,0.14l-1.96-1.09l-2.92,1l0.149,1.381l3.511,2.313l0.89,4.683l2.54,2.869l1.95-0.011 l0.87,3.021l-2.49,2.649l-0.25,2.479l-4.85,3.357l1.188,7.58l0.86,1.931l-1.521,1.25l-0.635,6.771l1.96,0.947l1.017,3.159 l-1.521,1.397l2,4.812l5.33,3.813l4.313-0.603l5.312,2.301l1.851,4.813l-2.747,3.607l0.25,11.184l-1.354,4.566l0.3,2.342 l-1.101,0.979l-2.229-0.262l0.172,3.591l1.54,0.813l-1.75,6.093l-2.367-0.804l-1.789,1.394l0.021,2.897l-2.488,1.271l0.158,1.381 l4.189,2.438l0.471,5.237l4.75,2.854l-3.568,4.868l0.578,2.606l2.342-1.813l1.818,1.08l0.722,2.197l1.514-1.25l5.722,2.568 l2.946,4.25l1.356-0.219l0.03,0.209l1.14,2.881l2.65,2.188l1.84,4.119l2.771,15.569l-2.223-0.67l-0.105,3.729l-5.271-0.641 l-9.562,2.146l1.432,4.271l1.79-0.989l1.312,6.763l-1.064,3.594l2.646,2.05l-2.182,4.851l0.021,1.649l3.475,1.351l-2.32,3.75 l2.012,7.854l4.449,2.311l-0.811,9.939l-2.729,4.158l-2.222,0.157l-4.261,6.229l-0.109,0.16l-13.077-7.74l-0.771,6.357 l-4.354,7.896l-4.159-1.06l-0.171-2.9l-2.631-0.38l1.091-1.949l-9.407-7.068l0.091-4.695l2.027-3.881l-5.021-3.949l-2.301-7.568 l-4.302-1.33l-5.211,5.724l-2.777-1.634l-1.762,3.75l-5.382,2.398l-3.75-1.33l-3.657-5.619l-4.739-2.289l-4.563,0.473l-1.223,2.223 l-6.938-1.434l-0.188-4.144l-4.171-0.63l-7.829,5.341l3.398,5.75l-8.108,4.109l-5.567-1.859l-4.131,1.58l-4.75-3.659l-0.818,1.108 l-8.182-1.13l-1.409-1.225l4.699-1.025l0.107-1.79l-10.553-1.79l-12.262-5.34l-4.722-0.765l-5.181,5.475l-9.094-5.382l-3.183,0.182 l0.37-2.63l-3.75-1.04l-11.46,2.813l-1.021-3.158l-6.356-7.897l-2.51-0.646l-3.021,1.433l-4.979,1.08l0.01-0.021L103.321,806.74z").attr({
    id: 'kreis08317',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08317'});
regions.push(kreis08317);

// Mini-Konstanz
var kreis08335_2 = rsr.path("M 430.481,1073.713 432.133,1073.699 432.407,1075.082 435.293,1075.353 435.281,1075.281 435.311,1075.281 435.173,1073.823 438.571,1072.582 440.503,1073.263 441.472,1077.949 442.722,1081.673 444.093,1082.363 444.101,1084.643 440.553,1084.933 439.722,1083.963 435.191,1081.772 433.281,1084.683 428.771,1086.903 426.441,1086.781 426.691,1085.873 426.681,1085.863 426.698,1085.813 425.191,1084.303 425.191,1084.223 428.463,1083.522 430.651,1080.893 430.641,1080.843 430.657,1080.823 430.24,1077.24 427.49,1075.873 427.213,1073.183 429.111,1074.272 z").attr({
    id: 'kreis08335_2',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    "stroke-linecap": 'round',
    "stroke-linejoin": 'round',
    "stroke-miterlimit": '22.926',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08335_2'});
regions.push(kreis08335_2);

// Mini-Ludwigsburg
var kreis08118_2 = rsr.path("M 673.343,416.903 674.803,417.733 674.908,417.853 672.99,419.713 669.133,419.963 669.731,417.703 663.543,418.223 663.367,417.233 665.571,416.303 663.441,415.573 665.031,412.883 673.151,410.553 674.151,413.093 z").attr({
    id: 'kreis08118_2',
    fill: '#CBCBCB',
    stroke: '#FFFFFF',
    "stroke-width": '0.8',
    parent: 'Kreise',
    'stroke-opacity': '1'
}).data({'id': 'kreis08118_2'});
regions.push(kreis08118_2);

Kreise.attr({'id': 'Kreise', 'name': 'Kreise'});
var StateBorders = rsr.set();
var path_e = rsr.path("M572.967,154.662l1.34,2.27l-0.68,0.76l2.18,1.932l14.66-3.012l8.81,2.92 l20.79-5.05l-0.1-0.688l0.979-0.24l-0.55-3.48l2.96,0.012l0.17-0.94h0.71l1.08-6.188l5.91-3.74l-0.2-0.26l1.08-0.682l-4.25-5.54 l0.03-3.938l3.1,0.34l7.29-7.14l-0.02-0.062l0.92-0.89l-0.29-0.91l1.39-0.07l8.96,5.142l4.44-3.15l5-3.29l4.25,6.65l9.398-1.342 l0.602-0.898l0.31-0.04l3.45-5.16l-1.67-2.21l0.01-0.01l-1.14-1.51l0.83,0.13l-5.25-3.182l4.38-1.39l-0.59-0.48l1.479-0.47 l-2.55-2.09l4.74-6.6l-0.66-7.87l-6.37-9.83l-4.71-1.54l-0.14,1.21l-0.762-0.25l-1.528,12.83l-7.352-0.04l-0.681-5.8l-2.479-1.53 l4.17-1.49l3.149-2.33l-0.31-0.08l1.21-0.89l-10.99-2.67l-3.142,1.09l-10.278-2.66l-0.2-0.358l7.61-0.44l0.34-0.94l0.55-0.028 l1.15-3.17l-3.98-4.98l0.141-4.52l11.432,0.438l6.74-5.49l5.688,5.132l10.91-10.012l4.141,0.57l2.819,7.061l5.7,2.369l3.01-2.188 l0.13-0.4l0.79-0.569l1.021-3.029l1.58-3.44l7.101-0.08l3.979,3.61l-1.738,4.82l1.26,3.318l4.7,1.271l1.08-0.75l2.658-1.84 l3.131,0.71l2.79,9.68l3.421,1.13l0.31-1.17l0.62,0.2l1.03-3.86l-2.972-4.438l-1.141-8.24l5.87-2.2l0.12,3.04l22.92-6.99l1.54,5.11 l-1.511,0.8l0.101,0.431l-1.05,0.561l1.239,5.38l-3.189,6.32l-0.479,9.35l-2.528,0.69l0.55,0.56l-1.5,0.4l4.391,4.449l-4.341,6.869 l1.94,7.062l6.67,3.22l7.3-2.56l0.04-0.642l0.91-0.318l0.63-10.771l6.38-1.03l0.38-0.869l0.58-0.091l0.71-1.64l2.37-0.95 l2.729,11.471l2.561,1.131l0.08,6.488l3.279,0.171l0.949-0.961h0.011l4.181-4.238l0.63-6.66l6.82-5.271l3.858-0.648l0.199-0.83 l0.771-0.13l0.771-3.261l2,0.529l-1.05,4.82l10.76,7.7l2.98,10.96l-1.99,0.51l-0.279,0.77l-0.699,0.182l-2.062,5.77l3.312,9.7 l7.09,2.7l5.569,16.67l-8.851,5.939l0.069,0.221l-1.062,0.71l2.71,8.54l-11.898,9.54l0.108,0.04l-1.1,0.88l16.021,5.01l0.271-1.15 l0.72,0.222l2.102-9.222l2.949-5.56l6.301-3.89l5.398,0.198l-4.271,11.682l8.101,0.51l-1.8,7.57l3.06,5.56l-3.488,6.03l2.199,5.949 l-3.5,7.279l4.062,4.87l8.489,2.312l6.42-2.262l15.619,0.472l0.33-0.932l0.681,0.021l3.04-8.46l6.351-2.49l0.37-0.67l0.641-0.25 l3.069-5.479l-6.641-4.421l6.479-4.72l0.03-0.21l0.979-0.71l0.42-2.49l6.261,2.41l2.391,4.28l-3.33,2.229l0.03,0.23l-1.051,0.688 l0.898,6.36l10.091,0.14l2.341,3.87l-5.87,4.95l0.021,0.03l-1.04,0.88l6.95,14.03l-5.898,2.31l-0.211,0.59l-0.811,0.32l-1.78,5.08 l12.562,5.148l5.859,15.71l-2.25-0.289l1.989,1.279l-3.021-0.38l6.601,4.23l-0.03,2.028l-4.561,2.521l-5.5-1.46 c0,0-3.739,0.88-4.989,1.17c-0.16,0.04-0.279,0.06-0.359,0.08c0.102,0.028,0.171,0.108,0.069,0.33c-0.04,0.09-0.09,0.21-0.16,0.35 l-0.568,0.13l-0.221-0.029l0.079-0.58l-0.09,0.58l-0.069,0.439l-1.181,2.6l3.33,5.16l-1.181,3.84l3.359,1.71l-0.131,2.37 l-3.55-1.25l-0.34,1.12l-0.671-0.24l-1.949,6.32l2.62,5l3.51,1.71l5.09,0.21l2.36,4.04l-3.921,6.562l2.141,6.658l4.78,3.24 l-2.38,7.271l-3.41,2.81l-2.12-0.859l-1.34-4.851l-0.83,1.57l-0.2-0.71l-2.33,4.39l-0.34,3.72l5.779,1.74l-3.739,3.94l3.609,13.989 l2.521,0.591l-0.021,2.438l-2.939-0.858l-0.01,1.148l-1.021-0.3l-0.101,6.21l10.26,3.32l3.29,5.979l3.689-0.63l0.221,3.59 l4.34,1.86l1.881,6.1l1.829,0.58l0.979-0.85l0.061,0.02l2.87-2.52l9.858,7.3l3.17,8.56l-8.579,4.99l0.051,0.19l-1.091,0.64 l0.659,2.45l-3.04-0.43l-0.35,0.93l-0.71-0.102l-2.94,8.092l5.08-0.062l1.07,2.78l7.771-0.562l-0.949,5.5l-2.569,2.25l-1,0.87 l6.859,2.182l2.359,3.76l-0.979,0.3l-0.13,0.54l-0.92,0.29l-2.091,8.46l0.8,1.81l1.03-0.85l0.021,0.04l2.439-2.02l3.859,1.02 l-0.021,1.24l2.921,1.84l0.449-1.19l0.619,0.38l0.711-1.89l3.21,0.16l1.311,4.72l7.67,3.72l0.54-1.06l0.529,0.25l1.102-2.16 l5.319,1.72l-1.069,4.53l3.061,2.12l-0.5,4.27l8.67,2.36l-0.521,5.521l5.351-0.461l5.05,5.91l-0.88,0.59v0.08l-1.069,0.722 l-0.351,3.72l5.92-0.17l3.159,11.1l3.79-0.34l2.46,3.83l-2.188,1.02l0.17,0.2l-1.261,0.59l5.631,6.87l-3.682,4.301l-6.17,0.779 l-0.12,0.66l-0.948,0.12l-0.472,2.34l5.301,2.03l4.539,4.78l-1.92,4.658l0.94,2.092l0.31,5.8l0.94,5.85l-7.75,2.62l0.029,0.39 l-1.102,0.381l0.341,4l6.119,2.319l0.771,10.78l-3.119,3.53l-4.73,0.79v0.578l-1.079,0.182l-0.029,1.79l3.449,2.55l-1.17,3.57 l1.75,4.02l-5.841,0.79l0.341,0.562l4.141,7.118l-2.312,3.54l1.921,2.392l0.551,0.42l6.119,7.148l0.739,0.852l0.602-2.78 l3.148-0.26l-1.869,2.59l2.062,1.01l0.109,2.07l2.698,5.16l3.472,1.028l-0.182,2.313l-1.46,0.77l0.07,0.12l-1.171,0.61l2.601,3.779 l1.812-0.102l2.801,3.812l-2.521,0.96l-0.341,0.45l-0.739,0.278l-3.91,4.972l-5.8,2.788l-6.479,2.37l-6.979,0.142l-0.58-2.352 l3.21-1.27l0.2-0.393l0.88-0.34l1.011-1.91l-1.21-2.369l0.489-4.938l0.21-0.09l1.771,2.79l0.979-0.882l0.101,0.149l2.271-2.03 l-0.08-2.487l-2.341-1.98l-3.949,1.59l-3.34-1.028l-0.87,0.801l-0.21-0.062l-5.25,4.869l-1.25,9.74l-6.021,1.67l-0.142,0.46 l-0.92,0.261l-1.04,3.409l-0.779,0.512l-3.062-0.609l-0.659-2.63l0.75-2.893l-0.739-5.528l-3.96-5.182l-5.721-1.068l-0.25,0.891 l-0.811-0.15l-0.812,2.74l-5.67-4.29l-3.711-3.79l-5.278-1.89l0.148,1.17l-1.199-0.431l1.119,8.71l-1.699,2.311l-2.761-0.64 l0.67,1.119l-1.71-0.392l2.852,4.87l-2.42,2.03l-0.972,0.817l4.04,3.172l-0.979,0.551l0.061,0.1l-1.108,0.63l2.721,4.591 l3.75,0.762l0.1,2.34l4.42,3.529l1.73,4.301l8.238,7.739l-1.261,1.909l-6.938,0.392l-0.021,0.659l-1.04,0.061l-0.25,6.34 l4.131,3.381l2.682,14.119l-3.813,2.7l-0.568,9.24l3.479,0.188l0.67,2.092l-3.029,3l-8.681,0.778l-2.35-1.56l-6.15,0.869v0.54 l-1.04,0.148l-0.04,2.53l-3.188,0.59l0.101,0.37l0.011,0.03l-3.479,1.159l0.29,0.25l-1.341,0.448l0.608,0.5l3.79-0.1l0.562,2.819 l-0.939,0.431l0.71,3.59l-1.311,1.45l-5.189,0.069l-12.311,5.989l-0.062,0.21l-0.979,0.471l-2.432,6.891l-13,2.45l-4.711-9.67 l-3.42-1.49l-0.71,0.819l-0.319-0.13l-6.261,7.221l-8.25,2.92l-6.818-1.811l-0.852,0.729l-0.159-0.04l-1.779,1.5l-0.92,0.771 l1.699,1.568l0.852,3.25l-1.971,0.91l0.028,0.2l-1.04,0.479l0.461,4.03l3.289-1.061l0.58,2.818l-8.369,5.91l-0.091,6.641 l-7.858,4.881l-0.04,0.068l-0.96,0.603l-2.052,3.51l-5.238,5.398l2.608,5.33l2.59,0.642l0.012-0.9l1,0.24l0.028-2.63l1.853-0.262 l0.449,2.812l2.33,0.311l-1.592,4.182l0.58,2.21l-0.08,0.068l3.75,3.512l1.46,6.869l3.563,3.631l7.02,14.67l6.75,4.89l-0.79,12.57 l1.87,1.141l-2.408,6.199l2.64,9.03l2.49,0.31l0.59,5.312l1.7,1.569l0.698,12.761l2.87,8.869l0.012,0.03l0.13,0.479l5.34,18.5 l3.648,4.14l4.172,2.221l1.6,6.699l-1.38,11.131l2.319,0.97l0.289,9.5l-5.118,10.802l2.538,6.72l-5.068,7.04l0.28,4.37l-1.762,3.83 l0.062,5.648l-2.72,0.409l0.328-0.159l-1.479,0.67l-3.85,1.739l-0.04,0.12l-0.99,0.45l-1.8,6.818l2.409,5.16l6.439,4.29 l-1.771,7.432l2.118,2.18l-3.039,5.42l0.399,6.188l-1.601,3.899l2.13,0.971l-0.04,2.771l-1.46,0.34l-0.17,0.351l-0.859,0.2 l-1.608,3.38l-4.24-0.438l0.2,0.68l-1.21-0.13l1.938,6.54l1-0.609l0.021,0.062l6.02-3.642l-0.22,3.852l-3.3,4.59l1.188,0.79 l0.729-0.74l0.29,0.19l2.43-2.479l1.07,2.479l-2.07,2.13l2.45,1.91l4.41,7.68l1.8,0.311l1.988,5.142l-4.538-0.88l-0.74,0.6 l-0.3-0.06l-3.12,2.55l2.449,1.91l-0.391,0.88l-6.341-1.03l-0.699,0.591l-0.318-0.051l-8.62,7.33l-0.46,2.479l5.34,2.222 l-0.05,3.43l11.34,5.729l-1.5,9.921l1.66,2.5l-1.21,7.159l2,3.289l5.3,4.109l1.061,3.102l-3.131,3.711l0.07,6.35l-5.2,4.801 l-4.199-0.819l-2.601-2.359l0.25,1.649l-1.26-1.141l0.688,4.811l-2.68,3.551l-2.229,7.939l-0.551,0.229l-0.1-4.689l-0.25-0.279 l0.479-4.359l-4.771-11.109l-3.08-0.039l-0.399,0.521l-0.61-0.011l-1.198,1.54l-4.46,0.181l0.229-4.971l-9.771,1.312l-0.38,0.421 l-0.642,0.09l-8.108,9.33l0.288,2.818l-2.538,2.33l-13.48-1.66l-13.21-5.13l-2.85-4.062l-8.66-1.311l-5.74,2.689l-0.01,0.051 l-0.96,0.46l-1.62,7.159l-3.26,3.091l-2.86-0.58l-4.18,1.84l0.05,0.051l-1.029,0.449l1.949,1.729l-1.239,4.438l-4.311,2.12 l-0.04,0.03l-0.939,0.46l-8.569,8.47l0.311,1.83l-1.5,1.6l-2.14-0.529l1.729-5.118l-0.961,0.488l-2.01,1.021l-0.75-1.551 l-0.67,1.091l-0.29-0.603l-2.42,3.932l-4.052,0.479l-0.288,0.41l-0.671,0.08l-1.119,1.649l-3.48-1.142l-1.38-4.647l-0.409,0.09 l-0.229,0.529l-0.11,0.221l-0.06,0.107l-1.932,2.961l-2.061-0.369l-1.939-2.659l-4.061,0.29l-0.32,0.449l-0.63,0.051l-1.6,2.26 l-4.211,1.05l0.069,0.23l-1.021,0.26l2.08,5.76l-0.08,0.17l-2.631-1.29l-2.029,0.143l-0.3,0.438l-0.65,0.05l-3.479,5.16 l-3.069-1.83l-1.75,0.9").attr({
    fill: 'none',
    stroke: '#5B5B5B',
    "stroke-width": '2',
    parent: 'StateBorders',
    'stroke-opacity': '1'
}).data('id', 'path_e');
var path_f = rsr.path("M347.865,153.732l0.021,0.762l-0.24,0.01l0.82,4.6l-3.5,7.2l2.18,6.34 l7.88,26.17l7.03,9.19l-1.38,4.02l-0.54,0.3l-0.21,0.602l-4.87,2.71l-0.59,3.75l4,3.28l11.79,0.06l4.42,1.63l1.72,4.26l-1.96,4.432 l-1.99,6.1l-0.01,0.32l-0.18,4.09l-0.71,0.5l-0.04,0.39l-9.46,6.75l-0.49,4.03l2.99,1.771l4.068-2.602l1.79-2.77l0.25-0.11 l0.5-0.77l2.98-1.271l-0.53,7.46l-3.05,8.99l-3.65,4.858l-0.26,0.23l-0.49,0.65l-8.55,7.55l0.04,4.47l1.72,3.3l7.392,2.021 l3.29,4.67l-0.25,4.42l-0.15,0.28l-0.6,0.54v0.05h-0.021v-0.05l-0.93,0.85l-7.2,2.81l-0.62,0.82l-5.68,7.51l-0.25,0.222l-0.49,0.64 l-5.34,4.59l-8.43,5.221l-3.19,4.229l-1.21,7.33l0.99-0.44l1.21-1.909l0.18,0.011l0.562-0.86l3.25,0.11l0.59,2.76l-3.33,7.89 l-0.521,0.342l-0.21,0.51l-3.118,2.06l-1.012,7.352l-4.18,7.35l0.17,3.311l1.3,3.159l-4.278,27.301c0,0-4.512,6.79-6.11,9.149 c-0.05,0.07-0.09,0.141-0.13,0.2c0.17-0.3,0.22-0.49-0.312,0.09c-0.02,0.03-0.05,0.061-0.079,0.09l-0.029,0.04 c-1.471,1.62-5.312,5.86-5.312,5.86l-0.04,0.08l-4.818,8.239l-3.091,16.181l-3.431,9.56l-0.72,0.8l-3.04,3.381l-0.29-0.141 l-5.43,4.88l-0.141,0.271l-0.011,0.01l-6.528,5.109l-0.9-1.409l-0.45-0.61l-2.358-3.28l-1.36-0.02l-4.73,3.62l-1.818-0.261 l-2.352-1.511l-1.18-1.85l-0.82-0.05l-2.988-0.171l-4.592-0.189l-1.229-0.141l-2.37-0.26l-4.68-0.78l-7.95-2.529l-2.34-1.149 l-12.33-6.061l-1.66-3.061l-4.26-3.561l-4.74-2.319l-6.45-1.899l-1.688-1.61l-5.42-2.56l-2.142,0.569l-4.05,1.09l-2.19-4.039 l-2.908-3.63l-1.46-1.37l-1.382-0.37l-0.89-0.229l-2.67-4.091l-0.9-0.35l-2.398,0.529l-2.57,4.569l-2.63,0.75l-5.73-0.31 l-3.26-0.16l-3.78,1.069l-3.8,3.66l-2.05-0.479l-3.24-3.76l-5.188-1.87l-1.271-0.471l-9.108-8.21l-1.94-0.029l-1.74,2.909 l-3.1,1.301l-1.851,2.68l-2.421,1.891l-2.97,0.63l-1.27,0.051l-5.562,0.21l-1.77-4.511l-1.7-0.26l-1.61,0.891l-2.729,0.079 l-4.65-2.199l-0.6,3.699l-3.66,1.171l-3.19,1.01l-3.528-0.609l-3.54-1.71l-1.67-0.811l-1.812-0.141l-2.37-2.271l-1.188-6.43 l-1.23-1.471l-8.95-4.601l-3.648,0.3l-4.11,1.32l-4.438-0.28l-5.32-3.54l-3.73-3.619l-1.27-1.641l-0.76-0.97l-0.65-2.931 l-4.27-7.229l-2.61-0.931l-2.36-4.63l-2.38-1.819l-0.77-2.131l0.58-1.569l3.21-2l1.51-1.9l-1.93-1.93l-5.24-0.609l0.938-3.359 l-0.56-1.471l-1.14-0.351l-9.092,1.41l-4.63,0.72l-1.02-1.12l0.358-1.01l1.95-1.34l-0.17-0.53l-0.84-2.52l1.17-2.91l-1.79,0.109 l-3.01,0.189l-16.1,4.41l-4.262,1.16l-0.67,0.938h-0.02l-5.312,1.102l-2.46-0.41l-1-0.82l-4.648-7.79l-1.91-2.319l-1.021-5.471 l-1.729-2.46l-0.09-5.6l-0.46-1.78l-1.642-2.33l-0.64-1.63l-0.271-1.64l0.271-1.78l1-2.33l0.82-1.09l1.188-2.87l0.64-0.82 l1.36-0.409l-4.72,0.689l2.92-0.83l2.46-2.59l3.27-6.021l1.19-1.641l1.1-2.6l-0.188-0.54l-1.45-1.37l-0.1-1.09l2.46-3.83 l3.648-2.46l0.271-0.69l0.46-7.79l2.37-2.729l5.01-3.551l1.91-2.051l1.729-3.688v-1.23l-0.55-0.83l-1.55-1.09l-0.91-1.5 l-0.09-0.819l3.1-5.061l0.37-1.5l-0.18-2.33l-1.55-1.91l-2.28-0.55l-2.82,0.95l-1.27-0.26l-3.472-3.562l-1.448-0.55l-2.92-0.54 l-9.842-0.55l-7.97-1.101").attr({
    fill: 'none',
    stroke: '#5B5B5B',
    "stroke-width": '2',
    parent: 'StateBorders',
    'stroke-opacity': '1'
}).data('id', 'path_f');
StateBorders.attr({'id': 'StateBorders', 'name': 'StateBorders'});
var CountryBorders = rsr.set();
var path_g = rsr.path("M-23.573,371.492l0.09-0.21l2.41-2.012l0.91-0.77l20,1.29l2.08-2.46 l-0.2-2.92l1.729-4.38l-0.06-3.222l0.67-0.938l4.26-1.16l16.102-4.41l3.01-0.19l1.79-0.108l-1.17,2.91l0.84,2.52l0.17,0.53 l-1.95,1.34l-0.358,1.01l1.02,1.12l4.63-0.72l9.09-1.41l1.142,0.35l0.56,1.472l-0.938,3.358l5.238,0.61l1.932,1.93l-1.51,1.9 l-3.211,2l-0.579,1.57l0.77,2.13l2.38,1.818l2.36,4.63l2.608,0.932l4.271,7.229l0.65,2.932l0.76,0.97l1.27,1.64l3.73,3.62 l5.318,3.54l4.44,0.28l4.11-1.32l3.648-0.3l8.95,4.6l1.23,1.472l1.188,6.43l2.37,2.27l1.81,0.142l1.672,0.81l3.538,1.71l3.53,0.61 l3.19-1.01l3.66-1.17l0.6-3.7l4.65,2.2l2.729-0.08l1.61-0.892l1.7,0.262l1.77,4.51l5.56-0.21l1.271-0.05l2.97-0.632l2.42-1.89 l1.852-2.68l3.1-1.3l1.74-2.91l1.938,0.028l9.11,8.21l1.271,0.472l5.188,1.87l3.24,3.76l2.05,0.479l3.8-3.658l3.78-1.07l3.26,0.16 l5.73,0.31l2.63-0.75l2.57-4.57l2.398-0.528l0.9,0.35l2.67,4.09l0.89,0.23l1.38,0.37l1.46,1.37l2.91,3.63l2.19,4.038l4.05-1.09 l2.14-0.568l5.42,2.56l1.69,1.61l6.45,1.898l4.74,2.32l4.26,3.56l1.66,3.062l12.33,6.06l2.34,1.15l7.949,2.53l4.681,0.778 l2.37,0.262l1.229,0.14l4.59,0.188l2.99,0.172l0.82,0.05l1.18,1.85l2.352,1.51l1.818,0.262l4.73-3.62l1.358,0.02l2.36,3.28 l0.45,0.61l0.898,1.408l-0.06,0.052l0.1,0.17l-1.88,1.47l-12.51,4.27l-5.59,11.15l-8.16,11.811l-8.53,15.569l-6.91,20.51 l-1.71,9.962l-6.89,9.608l-0.29,0.2l-0.39,0.55l-5.98,4.21l-6.6-1.16l-4.17,1.512l-1.86,9.97l-0.61,0.438l-0.06,0.312l-4.72,3.37 l-9.11-1.12l-3.02,1.77l-1.23,7.21l0.8,6.892l-2.6,4.45v0.14c-0.17,0.2-0.34,0.42-0.53,0.65c-3.12,3.75-8.77,10.54-13.63,16.39 c-4.86,5.851-8.939,10.761-8.939,10.761l-0.101,0.069l-0.54,0.648l-10.52,6.5l-5.36,1.722l-3.68,13.17l-8.472,12.41l-1.148,6.648 l2.26,10.59l-1.24,10.102l1.66,8.12l-3.77,8.34l-0.44,0.271l-0.18,0.42l-8.771,5.432l-0.72,15.3l-10.13,27.37l-1.13,7.188 l0.56,8.972l3.9,17.88l-0.48,4.438l-3,3.352l-0.06,0.029l-0.562,0.619l-10.528,4.37l-2.99,4.189l-0.67,9.54l-3.271,12.069 l-0.06,0.5l-0.01,0.021l0.02-0.01l-4.359,16.271l-0.569,0.479l-0.04,0.148l-6.562,5.46l-5.52,13.04l-8.94,11.489l-0.76,3.74 l0.66,6.34l-3.1,4.189l-0.25,0.148l-0.352,0.471l-2.92,1.722l-1.25,1.62c0,0,0.21,2.608,0.29,3.479 c0.07,0.87-0.04-0.989,0.15,0.721c0.01,0.131,0.02,0.279,0.079,0.439v0.011c0.211,2,0.671,6.369,0.671,6.369l-3.86,7.94l1.78,14.33 l-1.75,10.108l13.75,16.729l3.909,10.56l-0.609,4.853l-4.811,8.51l-6.881,8.271l-1.438,4.721l1.17,11.438l-2.4,4.61l-0.449,0.271 l-0.141,0.271l-4.779,2.938l-1.761,5.75l2.95,10.71l-1.12,6.932l-4.25,7.949l-6.109,19.311l0.521,5.11l5.25,13.288l0.07,0.319 l-0.03,0.011l0.06,0.34l0.36,4.28l-1.13,5.682l-5.271,5.21l-0.59,0.52l-4.54,4l-0.21,3.182l2.29,5.75l-0.12,8.148l2.972,5.051 l4.75,5.159l7.778,6.21l2.9,9.063l5.71,5l0.34,4.41l-1.21,3.119l-0.01,0.041l-2.44-0.16l-0.89-1.59l-1.63,0.09l-1.53,0.06 l-1.55,0.101l-0.44,0.149l-0.438,0.61l-2.4,3.39l-0.22,0.58l-1.221,1.44l-3.38,6.317l-1.779,2.051l-1.142,1.279l-6.148,7l-1,7.8 l4.188,4.643l0.83,3.79l-0.21,0.37l-1.398,2.72l-2.61,4.188l-4.189,2.9l-2.511,0.79l-1.898-0.479l-0.841-1.569l-9.569-6.2 l-3.33-0.31l-4.65,7.43l3.59,1.188l3.66,0.189l2.892,2.35l-0.341,0.21l-0.221,2.603l-1.479,1.438l-1.562-0.27l-2.09,2.75 l-5.75,7.609l-1,0.851l-5.17,12.24").attr({
    fill: 'none',
    stroke: '#5B5B5B',
    "stroke-width": '3',
    parent: 'CountryBorders',
    'stroke-opacity': '1'
}).data('id', 'path_g');
var path_h = rsr.path("M 428.767,1086.903 426.437,1086.781 426.687,1085.87 426.677,1085.863 426.697,1085.812 425.187,1084.302 425.187,1084.222 428.467,1083.523 430.647,1080.892 430.637,1080.842 430.656,1080.823 430.237,1077.24 427.487,1075.87 427.217,1073.182 429.107,1074.273 430.477,1073.712 432.137,1073.7 432.406,1075.082 435.297,1075.352 435.277,1075.281 435.307,1075.281 435.177,1073.823 438.567,1072.582 440.507,1073.262 441.467,1077.95 442.717,1081.672 444.097,1082.363 444.097,1084.642 440.557,1084.932 439.717,1083.962 435.187,1081.773 433.277,1084.682 z").attr({
    fill: 'none',
    stroke: '#5B5B5B',
    "stroke-width": '3',
    parent: 'CountryBorders',
    'stroke-opacity': '1'
}).data('id', 'path_h');
CountryBorders.attr({'id': 'CountryBorders', 'name': 'CountryBorders'});
var Rivers = rsr.set();
var path7031 = rsr.path("M9.302,1044.81l-17.996,15.025").attr({
    id: 'path7031',
    fill: 'none',
    stroke: '#0878AB',
    "stroke-width": '1.6',
    "stroke-linejoin": 'bevel',
    parent: 'Rivers',
    'stroke-opacity': '1'
}).data('id', 'path7031');
var path3285_2_ = rsr.path("M161.012-52.038l3.999,12.021 l4,3.005h9.997l17.997-3.005l11.999-6.011h0.268l5.999-6.01h2h-0.268L237-55.043l11.998-6.013l21.997-6.011h5.999l9.998,3.005 l13.992,12.021l0.273-0.001l13.998,12.02l3.999,6.009l2,3.009l3.999,3.006L323.24-5.44l-0.001-0.313l-0.84,2.645l-1.369,2.188 l-0.728,2.099L320.277,3.5l0.636,4.356l0.487,2.156l2.4,4.012l3.434,2.433l1.428,0.271l1.521,0.623l2.643,3.34l0.427,2.001 l-0.186,2.613l-1.213,5.922l0.699,5.273l6.979,11.646l2.958,7.726l0.418,1.727l2.398,4.89l2.187,2.327l3.162,1.716l7.383-0.336 l2.703-1.072l1.912-0.229l1.364,0.15l0.455,0.938l-0.313,1.264l-1.185,2.03l-4.098,4.891l-3.401,3.157l-3.891,6.744l-1.457,0.953 l-2.156,0.773l-7.987,1.385L334.279,89l-5.62,4.438l-2.702,4.604l-1.116,3.464l-0.488,3.83l0.306,3.13l0.666,2.896l2.796,5.93 l0.486,2.248l0.88,7.742l4.009,9.312l1.339,2.252l3.104,4.188l2.521,2.479l0.854,1.563l0.852,2.658l1.579,2.596l1.594,1.855 l-0.006-0.707l0.929,5.44l-3.622,7.566l2.672,7.554l7.76,26.047l6.665,8.712l-0.66,1.699l-5.76,2.95l-1.043,7.086l5.097,4.383 l12.149,0.058l3.56,1.384l1.123,2.563l-1.592,2.725l-2.24,7.438l-0.202,4.041l1.892,6.771l-0.396,6.605l-2.935,8.627l-3.286,4.004 l-9.899,8.813l0.156,6.768l2.089,4.271l7.621,2.021l2.561,3.697l-0.012,1.979l-0.14,0.277l-1.547,1.391l-6.352,2.201l-6.671,8.571 l-4.975,4.473l-9.071,5.555l-4.264,5.729l-1.699,9.64l0.146,8.014l-0.941,7.613l-4.418,7.598l0.291,5.139l1.054,2.434l-4.039,25.72 c0,0-4.14,6.182-5.739,8.542c-0.522,0.708-3.646,3.621-5.76,6.271l-5.22,8.813l-3.21,16.663l-3.188,8.948l-2.902,3.08l-6.693,5.966 l-3.11,2.771l-3.937,2.579l0.54-0.077l-14.479,4.328l-6.605,12.916l-7.47,11.048l-8.873,15.896l-7.176,21.111l-1.705,9.615 l-5.945,8.572l-4.77,3.268l-6.083-1.159l-7.065,2.661l-2.226,11.205l-2.823,1.995l-8.857-1.296l-5.679,3.321l-1.643,9.508 l0.794,6.199l-2.254,3.682l0.002,0.141c-5.774,6.946-22.498,27.021-22.498,27.021l-9.577,5.897l-7.045,2.481l-4.104,14.415 l-8.635,12.763l-1.497,7.853l2.344,10.771l-1.146,9.928l1.48,7.772l-2.905,6.619l-10.067,6.063l-0.727,16.646l-10.138,27.188 l-1.22,7.976l0.563,9.313l3.896,17.971l-0.396,3.05l-1.708,1.983l-10.931,4.369l-4.509,6.132l-0.759,10.396l-3.267,12.063 l-0.062,0.495l-3.769,14.647l-7.188,6.182l-5.587,13.217l-9.188,11.824l-1.021,4.688l0.58,5.821l-2.245,3.078l-4.009,2.974 l-1.621,2.104c0,0,0.217,2.606,0.289,3.479c0.068,0.87-0.023-0.983,0.156,0.722c0.181,1.706,0.979,6.735,0.979,6.735l-4.036,8.37 l1.691,14.758l-1.664,11.313L77.9,933.936l3.396,9.441l-0.175,3.294l-4.729,8.075l-6.969,8.354l-1.604,6.016l0.908,11.097 l-1.707,3.224l-5.396,3.271l-2.423,7.864l3.025,11.063l-1.021,5.72l-4.085,7.688l-6.366,20.082L51.26,1045l5.166,12.773 l0.154,0.688l0.771,4.188l-1.133,4.308l-6.031,5.813l-4.438,3.914l-0.563,5.332l2.392,5.496l-0.126,8.406l3.653,6.432l6.13,6.104 l6.233,4.915l2.726,9.229l5.787,4.573l0.011,2.604l-0.39,6.041l4.825,1.98l-1.252-0.63l0.116,12.819l2,3.005h9.998l5.011,3.551 l-0.829-0.358l3.574,1.438l2.043,4.712l7.767,2.209l5.203-0.286l7.095-4.353l12.345-1.796l2.188-2.141l12.089-3.854l1.944-4.325 l3.815-2.74l1.478-5.639l0.31-2.25l0.516,0.357l1.291,1.896l7.376,0.38l3.934-2.854l7.209,0.045l2.146,1.313l0.002,0.138 l2.17,3.038l0.633,2.404l-1.249,4.043l2.47,7.476l4.869,2.2l4.104-0.245l4.13,1.867l4.349-2.626l0.729-3.604l0.224-0.734 l5.589,1.313l7.14-0.649l5.129,2.563l10.319-1.745l6.062-4.49l0.896-0.352l3.104,2.98l7.813-0.695l3.712-5.873l-0.177-4.598 l1.614-1.576l9.437,0.272l0.33-4.279l2.438-1.487l3.003,0.846l3.354-1.26l2.122-3.025l4.063-1.799l3.596-6.701l1.16-0.465 l2.035,0.51l0.792,3.027l1.841,4.438l4.761-0.58l2.794-3.647l3.665-0.765l1.26,2.894l7.291-1.646l2.438,1.369l-0.592,6.378 l2.746,3.851l3.938,2.313l5.765,6.441l13.031,0.418l8.339,2.435l2.884-5.94l1.273,0.271l9.854,5.438l9.499-3.307l4.703-0.94 l3.188-2.639l-1.172-0.576h5.997l11.996,3.007l3.999,9.019h2l3.998-6.01v-3.01l4-6.011l5.998-6.011l4.396-6.614l2.048-5.147 l-2.334-5.147l-1.146-2.078l8.481-1.352l3.325-10.063l-6.671-5.629l1.896-3.028v-6.011l2-3.006l6.454,5.655l6.333-0.079 l5.393-2.487l0.983-2.161l1.977,1.238l1.448,1.845l8.063-1.078l10.013,0.388l9.797,7.098l5.901,0.036l21.486,6.854").attr({
    id: 'path3285_2_',
    fill: 'none',
    stroke: '#0878AA',
    "stroke-width": '3',
    "stroke-miterlimit": '3.86',
    parent: 'Rivers',
    'stroke-opacity': '1'
}).data('id', 'path3285_2_');
Rivers.attr({'id': 'Rivers', 'name': 'Rivers'});
var rsrGroups = [Background, Kreise, StateBorders, CountryBorders, Rivers];
Background.push(rect_a, path_b, path_c);
Kreise.push(kreis08435, kreis08436, kreis08426, kreis08437, kreis08415, kreis08425, kreis08421, kreis08135, kreis08117, kreis08136, kreis08119, kreis08127, kreis08126, kreis08128, kreis08225, kreis08121, kreis08125, kreis08222, kreis08221, kreis08226, path_d, kreis08215, kreis08212, kreis08215, kreis08216, kreis08211, kreis08235, kreis08231, kreis08236, kreis08118, kreis08111, kreis08116, kreis08115, kreis08416, kreis08237, kreis08235, kreis08417, kreis08336, kreis08337, kreis08327, kreis08335, kreis08326, kreis08316, kreis08315, kreis08311, kreis08317, kreis08335, kreis08118);
StateBorders.push(path_e, path_f);
CountryBorders.push(path_g, path_h);
Rivers.push(path7031, path3285_2_);


/*
 Javascript Funktionalitäten
 */
var regionDetails = [];

var hz;
var sl;
var ka;
var gs;
var ef;

// ArrayId von regions ermitteln
var lookup = {};
for (var i = 0, len = regions.length; i < len; i++) {
    lookup[regions[i].data('id')] = i;
}

// Farben
function getColorByHz(hz) {
    var color;
    if (hz > 10000) {
        color = '#FF0000';
    } else if (hz > 9000) {
        color = '#FF1919';
    } else if (hz > 8000) {
        color = '#FF3232';
    } else if (hz > 7000) {
        color = '#FF4c4c';
    } else if (hz > 6000) {
        color = '#FF6666';
    } else if (hz > 5000) {
        color = '#FF7F7F';
    } else if (hz > 4000) {
        color = '#FF9999';
    } else if (hz > 3000) {
        color = '#FFB2B2';
    } else if (hz > 2000) {
        color = '#FFCCCC';
    } else if (hz > 1000) {
        color = '#FFE5E5';
    } else {
        color = '#FFEEEE';
    }
    return color;
}

function getData(regionId, crimeType) {

    var queryString = "http://localhost:3030/bka/?query=PREFIX%20bka:%20%3Chttp://purl.org/net/hdm-bka%3E%20SELECT%20?hz%20?sl%20?ka%20?gs%20?ef%20WHERE%20{?x%20bka:HZ_nach_Zensus%20?hz%20.%20?x%20bka:Stadt_Landkreis%20?sl%20.%20?x%20bka:Kreisart%20?ka%20.%20?x%20bka:Straftat%20%22" + crimeType + "%22%20.%20?x%20bka:Gemeindeschluessel%20%22" + regionId + "%22%20.%20?x%20bka:Gemeindeschluessel%20?gs%20.%20?x%20bka:erfasste_Faelle%20?ef}&output=JSON";

    $.getJSON(queryString, function (data) {
        // console.log("success");
        var items = [];
        $.each(data.results, function (key, val) {
            $.each(val, function (m, n) {
                $.each(n.gs, function (gskey, gsval) {
                    if (gskey.localeCompare('value') == 0) {
                        gs = "kreis0" + gsval;
                    }
                })
                $.each(n.hz, function (hzkey, hzval) {
                    if (hzkey.localeCompare('value') == 0) {
                        hz = hzval;
                    }
                })
                $.each(n.sl, function (slkey, slval) {
                    if (slkey.localeCompare('value') == 0) {
                        sl = slval;

                    }
                })
                $.each(n.ka, function (kakey, kaval) {
                    if (kakey.localeCompare('value') == 0) {
                        ka = kaval;
                    }
                })
                $.each(n.ef, function (efkey, efval) {
                    if (efkey.localeCompare('value') == 0) {
                        ef = efval;
                    }
                })

                var hzColor;
                if (crimeType.localeCompare('Mord und Totschlag') == 0) {
                    hzColor = getColorByHz(hz * 1200);
                } else if (crimeType.localeCompare('Vergewaltigung und sexuelle Nötigung §§ 177 Abs. 2, 3 und 4, 178 StGB') == 0) {
                    hzColor = getColorByHz(hz * 500);
                } else if (crimeType.localeCompare('Gewaltkriminalität') == 0) {
                    hzColor = getColorByHz(hz * 25);
                } else if (crimeType.localeCompare('Straßenkriminalität') == 0) {
                    hzColor = getColorByHz(hz * 5);
                } else if (crimeType.localeCompare('Diebstahl insgesamt und zwar:') == 0) {
                    hzColor = getColorByHz(hz * 2);
                } else {
                    hzColor = getColorByHz(hz);
                }
                var regionId = lookup[gs];
                var regionId2 = lookup[gs + "_2"];
                var einwohner = Math.round(100000 / hz * ef);

                // Regionen einfärben
                regions[regionId].node.setAttribute('fill', hzColor);
                // Ergebnisse in Array speichern
                regionDetails[regionId] = ({hzt: hz, gst: gs, slt: sl, kat: ka, eft: ef, einwohner: einwohner});
                if (regionId2 !== undefined) {
                    regions[regionId2].node.setAttribute('fill', hzColor);
                }
            })
        });
    });
}

function showStuff(counter) {
    $('#map').show();
    $('#info').show();
    $('#about-content').hide();

    regions[counter].mouseover(function (e) {
        this.node.style.opacity = 0.7;
        var thisId = this.data('id').toString();
        thisId = thisId.substring(0, 10);

        var thisIdCode = lookup[thisId];

        console.log(thisId);
        console.log(thisIdCode);
        console.log("SLT:" + regionDetails[thisIdCode].slt);
        console.log("KAT:" + regionDetails[thisIdCode].kat);

        var kreisTyp;

        if (regionDetails[thisIdCode].kat === "LK") {
            kreisTyp = "Landkreis";
        } else {
            kreisTyp = "Stadtkreis";
        }

        document.getElementById('region-name').innerHTML = regionDetails[thisIdCode].slt;
        document.getElementById('region-type').innerHTML = kreisTyp;
        document.getElementById('straftaten-prozent').innerHTML = regionDetails[thisIdCode].hzt;

        document.getElementById('straftaten').innerHTML = regionDetails[thisIdCode].eft;
        // document.getElementById('einwohner').innerHTML = regionDetails[thisIdCode].einwohner;
    });

    regions[counter].mouseout(function (e) {
        this.node.style.opacity = 1;
    });
}

// Load stats for murder
$('#mord').click(function () {
    crimeType = "Mord und Totschlag";
    document.getElementById('header-crime').innerHTML = crimeType;
    console.log("CRIME-TYPE: " + crimeType);
    for (var i = 0; i < regions.length; i++) {
        var regionFull = regions[i].data('id');
        var regionId = regionFull.substring(6);

        getData(regionId, crimeType);
        showStuff(i);
    }
})

// Load stats for rape
$('#vergewaltigung').click(function () {
    crimeType = "Vergewaltigung und sexuelle Nötigung §§ 177 Abs. 2, 3 und 4, 178 StGB";
    document.getElementById('header-crime').innerHTML = "Vergewaltigung und sexuelle Nötigung";
    console.log("CRIME-TYPE: " + crimeType);
    for (var i = 0; i < regions.length; i++) {
        var regionFull = regions[i].data('id');
        var regionId = regionFull.substring(6);

        getData(regionId, crimeType);
        showStuff(i);
    }
})

// Load stats for violent crime
$('#gewaltkriminalität').click(function () {
    crimeType = "Gewaltkriminalität";
    document.getElementById('header-crime').innerHTML = crimeType;
    console.log("CRIME-TYPE: " + crimeType);
    for (var i = 0; i < regions.length; i++) {
        var regionFull = regions[i].data('id');
        var regionId = regionFull.substring(6);

        getData(regionId, crimeType);
        showStuff(i);
    }
})

// Load stats for street crime
$('#straßenkriminalität').click(function () {
    console.log("straßenkriminalität");
    crimeType = "Straßenkriminalität";
    document.getElementById('header-crime').innerHTML = crimeType;
    console.log("CRIME-TYPE: " + crimeType);
    for (var i = 0; i < regions.length; i++) {
        var regionFull = regions[i].data('id');
        var regionId = regionFull.substring(6);

        getData(regionId, crimeType);
        showStuff(i);
    }
})

// Load stats for theft
$('#diebstahl-insgesamt').click(function () {
    crimeType = "Diebstahl insgesamt und zwar:";
    document.getElementById('header-crime').innerHTML = "Diebstahl insgesamt";
    console.log("CRIME-TYPE: " + crimeType);
    for (var i = 0; i < regions.length; i++) {
        var regionFull = regions[i].data('id');
        var regionId = regionFull.substring(6);

        getData(regionId, crimeType);
        showStuff(i);
    }
})

// Load Sources page
$('#quellen').click(function () {
    $('#about-content').show();
    document.getElementById('header-crime').innerHTML = "Quellen";
    $('#map').hide();
    $('#info').hide();
    $('#about-content').load('http://localhost:8000/sources.html');
})


// Initial loadup of all crimes
for (var i = 0; i < regions.length; i++) {

    var regionFull = regions[i].data('id');
    var regionId = regionFull.substring(6);

    crimeType = 'Straftaten insgesamt';
    document.getElementById('header-crime').innerHTML = crimeType;
    getData(regionId, crimeType);
    showStuff(i);
}

},{"bootstrap":1,"jquery":14,"raphael":15}]},{},[16]);
